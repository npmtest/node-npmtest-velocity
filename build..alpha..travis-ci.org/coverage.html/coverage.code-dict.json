{"/home/travis/build/npmtest/node-npmtest-velocity/test.js":"/* istanbul instrument in package npmtest_velocity */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - init-after\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - init-after\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-velocity/lib.npmtest_velocity.js":"/* istanbul instrument in package npmtest_velocity */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_velocity = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_velocity = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-velocity/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-velocity && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_velocity */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - init-before\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_velocity\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // init-after\n    // run browser js-env code - init-after\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - init-after\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_velocity.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_velocity.rollup.js'] =\n            local.assetsDict['/assets.npmtest_velocity.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_velocity.__dirname + '/lib.npmtest_velocity.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/index.js":"module.exports = require('./lib')\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/index.js":"module.exports = {\n  Data: require('./data'),\n  Engine: require('./engine'),\n  parser: require('./engine/velocity'),\n  dep: require('./dep')\n}","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/index.js":"var fs = require('fs')\nvar path = require('path')\nvar utilx = require('utilx')\nvar inherits = require('util').inherits\nvar EventEmitter = require('events').EventEmitter\n\nvar logger = require('../logger')\nvar common = require('../common')\nvar handleCfg = require('../handle-cfg')\n\nvar parser = require('../engine/velocity')\nvar formatter = require('./data-formatter')\nvar STATS = require('./data-stats')\n\n\nfunction Data(cfg) {\n  this.cfg = handleCfg(cfg)\n\n  // global macro\n  this.macro = {}\n  if (this.cfg.macro) {\n    this.GMacro(this.cfg.macro)\n  }\n}\n\n\nData.tostr = formatter.tostr\nData.dump = formatter.dump\n\n\ninherits(Data, EventEmitter)\n\n\n// process global macro\nData.prototype.GMacro = function(macro) {\n  var that = this\n\n  macro.forEach(function(m) {\n    var content = m.isFile ? utilx.readFile(m.fullPath, that.cfg.encoding) : m.raw\n    var ast = parser.parse(content)\n    m.lines = content.split(/\\r?\\n/)\n    ast.body.forEach(function(node){\n      if (node.type === 'Macro') {\n        that.Macro(node, m)\n      }\n    })\n  })\n\n  // logger.debug('Macro', this.macro)\n}\n\n////////////////////////////\n// the only public method //\n////////////////////////////\nData.prototype.extract = function(context) {\n  if (utilx.isExistedFile(context)) {\n    context = require(path.resolve(context))\n  } else {\n    context = utilx.isObject(context) ? context : {}\n  }\n  context = formatter.expand(context)\n\n  var interData = this.Extract(context)\n\n  var raw = formatter.clean(interData)\n  var str\n\n  if (this.cfg.dump) {\n    str = formatter.dump(raw)\n  } else {\n    str = formatter.tostr(raw)\n  }\n\n  if (this.cfg.output) {\n    fs.writeFileSync(\n      this.cfg.output,\n      'module.exports = ' + str + '\\n'\n    )\n  }\n\n  return {\n    raw: raw,\n    str: str\n  }\n}\n\nData.prototype.Extract = function(context, template) {\n  var that = this\n  var templ = template || this.cfg.template\n\n  if (context) this.pushContext(context)\n  this.pushTemplate(templ)\n\n  var content = templ.raw\n  if (templ.isFile) {\n    content = utilx.readFile(templ.fullPath, this.cfg.encoding)\n  }\n\n  templ.lines = content.split(/\\r?\\n/)\n\n  try {\n    var node = parser.parse(content)\n  } catch (e) {\n    this.throwError(e.message, common.getPosFromParserError(e))\n  }\n\n  this[node.type](node)\n  var rt = this.topContext\n  this.popTemplate()\n  if (context) this.popContext()\n  return rt\n}\n\nData.prototype.Statements = function(node) {\n  for (var i = 0; i < node.body.length; i++) {\n    var cn = node.body[i]\n    this[cn.type](cn)\n  }\n}\n\nData.prototype.throwError = function (message, pos) {\n  var loc = common.getRealLoc([this.template, pos])\n  var templ = loc[0]\n      pos = loc[1]\n  var line = templ.lines[pos.first_line - 1]\n\n  var e = new Error(message)\n      e.stack = common.markError(line, pos) +\n                'Error: ' + e.message +\n                '\\n    at ' + common.loc2str(loc)\n  throw e\n}\n\nutilx.mix(\n  Data.prototype,\n  require('../engine/engine-stack'),\n  require('./data-ref'),\n  require('./data-expr'),\n  require('./data-direc')\n)\n\nmodule.exports = Data\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/logger.js":"var colorful = require('colorful')\n\nvar levels = ['debug', 'info', 'warn', 'error']\nvar logLevel = 'info'\nprocess.argv.forEach(function(item, idx, list) {\n  if (item.match(/^(--debug|-[a-zA-Z]*d[a-zA-Z]*)$/)) {\n    logLevel = 'debug'\n  }\n})\n\nmodule.exports = require('tracer').colorConsole({\n  depth: null,\n  methods: levels,\n  level: logLevel,\n\n  format: \"{{title}}: {{message}} ({{file}}: {{line}})\",\n\n  filters: {\n    info: colorful.gray,\n    warn: colorful.yellow,\n    error: colorful.red\n  },\n\n  transport: function(data) {\n    var title = data.title;\n    if (levels.indexOf(title) >= levels.indexOf(logLevel)) {\n      if (title === 'error') {\n        throw new Error(data.message)\n      } else {\n        console.log(data.output)\n      }\n    }\n  }\n})","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/common.js":"var fs = require('fs')\nvar path = require('path')\nvar utilx = require('utilx')\n\nvar logger = require('./logger')\nvar STATS = require('./data/data-stats')\n\n\nexports.getRelPath = function(p, root) {\n  if (!root) return\n  var fullPath = path.resolve(p)\n  for (var i = 0; i < root.length; i++) {\n    var r = root[i]\n    if (fullPath.indexOf(r) === 0) {\n      return path.relative(r, fullPath)\n    }\n  }\n}\n\nexports.getFullPath = function(relPath, root) {\n  if (!root) return\n  for (var i = 0; i < root.length; i++) {\n    var r = root[i]\n    var fullPath = path.join(r, relPath)\n    if (utilx.isExistedFile(fullPath)) {\n      return fullPath\n    }\n  }\n}\n\nexports.getRoot = function(relPath, root) {\n  if (!root) return\n  for (var i = 0; i < root.length; i++) {\n    var r = root[i]\n    if (utilx.isExistedFile(path.join(r, relPath))) {\n      return r\n    }\n  }\n}\n\nexports.extractContent = function(lines, pos) {\n  var fl = pos.first_line\n  var ll = pos.last_line\n  var fc = pos.first_column\n  var lc = pos.last_column\n\n  if (fl === ll) {\n    return lines[fl - 1].substring(fc, lc)\n  }\n\n  var rt = []\n  for (var i = fl; i <= ll; i++) {\n    var line = lines[i - 1]\n    if (i === fl) {\n      line = line.substring(fc)\n    } else if (i === ll) {\n      line = line.substring(0, lc)\n    }\n    rt.push(line)\n  }\n  return rt.join(require('os').EOL)\n}\n\n\nexports.isId = function(node) {\n  return node.object.type === 'Identifier'\n}\n\nexports.isLiteralString = function(n) {\n  if (n.type === 'String') return true\n  if (n.type === 'DString' && n.value.search(/\\$|#/) === -1) return true\n  return false\n}\n\nexports.getOrigin = function(n) {\n  if (!n) return\n  if (n.__origin) return n.__origin\n  var stats = n.__stats\n  if (stats === STATS.CERTAIN || stats === STATS.CERTAIN_FUNC || stats === STATS.UNCERTAIN) return n\n}\n\nexports.markError = function(line, pos) {\n  if (!line || !pos) return ''\n\n  var rt = line + '\\n'\n      rt += utilx.generateLine(pos.first_column, ' ')\n  var l = (pos.first_line === pos.last_line ? pos.last_column : line.length) - pos.first_column\n      rt += utilx.generateLine(l, '^') + '\\n'\n  return rt\n}\n\n\nexports.getRealLoc = function(loc) {\n  var templ = loc[0]\n  var pos = loc[1]\n  pos = templ.offset || pos\n  for (templ; templ; templ = templ.__parent) {\n    if (templ.isFile || !templ.__parent) break\n  }\n  return [templ, pos]\n}\n\n\nexports.loc2str = function(loc) {\n  var templ = loc[0]\n  var pos = loc[1]\n  var fullPath = templ.isFile ? templ.fullPath : trim(templ.raw)\n  return fullPath + ' (' + pos.first_line + ':' + pos.first_column + ')'\n}\n\n\n/*\n * Template code:\n *\n * #parse($emptyString)\n * #set(4 = $a)\n *\n * Parse result:\n *\n * Parse error on line 2:\n * ...($emptyString)#set(4 = $a)\n * ----------------------^\n * Expecting '$', got 'INTEGER'\n *\n * Note that a line break before `#set` directive in source code\n * Because of this, it is a little complex to calculate the columns info\n * So they are always be 0\n */\nvar lineStrReg = /^.+on line (\\d+)/m\nvar colMarkReg = /^\\-*\\^/m\nexports.getPosFromParserError = function(e) {\n  var msg = e.message\n  var matchedLine = msg.match(lineStrReg)\n  var matchedCol = msg.match(colMarkReg)\n  var pos = {\n    first_line: 1,\n    last_line: 1,\n    first_column: 0,\n    last_column: 0\n  }\n\n  if (matchedLine && matchedCol) {\n    var line = parseInt(matchedLine[1])\n    pos.first_line = line\n    pos.last_line = line\n  }\n\n  return pos\n}\n\nfunction trim(str, len) {\n  len = len || 40\n  str = str.substr(0, len).replace(/\\n/g, '\\\\n')\n  if (str.length > 40) str += '...'\n  return str\n}\n\nexports.perfectContext = function(context) {\n  if (utilx.isExistedFile(context)) {\n    var p = path.resolve(context)\n    ;delete require.cache[p]\n    context = require(p)\n  } else if (utilx.isObject(context)) {\n    // do nothing\n  } else if (utilx.isString(context)) {\n    try {\n      context = eval('(' + context + ')')\n    } catch(e) {\n      logger.error('Illegal context:', context)\n    }\n  } else {\n    context =  {}\n  }\n  return context\n}\n\n\n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/data-stats.js":"// see: https://github.com/fool2fish/blog/issues/7\n\nmodule.exports = {\n  LEFT: 'LEFT',\n  BREAK: 'BREAK',\n  DEFINE: 'DEFINE',\n  CERTAIN: 'CERTAIN', // certain types except function\n  CERTAIN_FUNC: 'CERTAIN_FUNC', // certain function\n  UNCERTAIN: 'UNCERTAIN'\n}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/handle-cfg.js":"var path = require('path')\nvar fs = require('fs')\nvar utilx = require('utilx')\n\nvar logger = require('./logger')\n\nvar defCfg = {\n  encoding: 'utf8'\n}\n\nmodule.exports = function(cfg) {\n  // logger.debug('Raw config', cfg)\n\n  var cfgFile = './velocity-config.js'\n  if (utilx.isExistedFile(cfgFile)) {\n    var projCfg = require(path.resolve(cfgFile))\n    cfg = utilx.mix(cfg, projCfg)\n    // logger.debug('Mix project config', cfg)\n  }\n\n  cfg = utilx.mix(cfg, defCfg)\n\n  // Template\n  if (!cfg.template) logger.error('Option template is required.')\n  cfg.template = str2Obj(cfg.template)\n\n  // Root\n  if (cfg.root) {\n    if (utilx.isString(cfg.root)) cfg.root = [cfg.root]\n    cfg.root.forEach(function(p, idx){\n      if (!utilx.isExistedDir(p)) {\n        logger.error('Option root <%s> is not directory or not exists.', p)\n      }\n    })\n    cfg.root = cfg.root.map(function(p) {\n      return path.resolve(p)\n    })\n  }\n\n  // Macro\n  if (cfg.macro) {\n    if (utilx.isString(cfg.macro)) cfg.macro = [cfg.macro]\n    cfg.macro = cfg.macro.map(function(raw) {\n      return str2Obj(raw)\n    })\n  }\n\n  logger.debug('Processed config', cfg)\n  return cfg\n}\n\n\nfunction str2Obj(raw) {\n  if (utilx.isExistedFile(raw)) {\n    return {\n      isFile: true,\n      raw: raw,\n      fullPath: path.resolve(raw)\n    }\n  } else if (utilx.isString(raw)){\n    return {\n      isFile: false,\n      raw: raw\n    }\n  } else {\n    logger.error('Value of config.value or config.template must be a file path or a velocity string.')\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/velocity.js":"/* parser generated by jison 0.4.13 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar velocity = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"EOF\":4,\"statements\":5,\"states\":6,\"statement\":7,\"TEXT\":8,\"BTEXT\":9,\"COMMENT\":10,\"BCOMMENT\":11,\"reference\":12,\"directive\":13,\"$\":14,\"ref\":15,\"!\":16,\"{\":17,\"}\":18,\"id\":19,\"property\":20,\"method\":21,\"index\":22,\"ID\":23,\"prop\":24,\"PROP\":25,\"(\":26,\"exprItems\":27,\")\":28,\"[\":29,\"exprItem\":30,\"]\":31,\"range\":32,\"..\":33,\"integer\":34,\"list\":35,\"map\":36,\"mapItems\":37,\"mapItem\":38,\",\":39,\":\":40,\"expr\":41,\"*\":42,\"/\":43,\"%\":44,\"+\":45,\"-\":46,\">=\":47,\">\":48,\"<=\":49,\"<\":50,\"==\":51,\"!=\":52,\"&&\":53,\"||\":54,\"assignExpr\":55,\"=\":56,\"float\":57,\"dstring\":58,\"string\":59,\"TRUE\":60,\"FALSE\":61,\"NULL\":62,\"INTEGER\":63,\"FLOAT\":64,\"DSTRING\":65,\"STRING\":66,\"SET\":67,\"if\":68,\"FOREACH\":69,\"IN\":70,\"END\":71,\"INCLUDE\":72,\"PARSE\":73,\"EVALUATE\":74,\"DEFINE\":75,\"MACRO\":76,\"delim\":77,\"macroParams\":78,\"MACROCALL\":79,\"macroCallParams\":80,\"BMACROCALL\":81,\"STOP\":82,\"BREAK\":83,\"else\":84,\"ELSE\":85,\"elseif\":86,\"ELSEIF\":87,\"IF\":88,\"WS\":89,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",8:\"TEXT\",9:\"BTEXT\",10:\"COMMENT\",11:\"BCOMMENT\",14:\"$\",16:\"!\",17:\"{\",18:\"}\",23:\"ID\",25:\"PROP\",26:\"(\",28:\")\",29:\"[\",31:\"]\",33:\"..\",39:\",\",40:\":\",42:\"*\",43:\"/\",44:\"%\",45:\"+\",46:\"-\",47:\">=\",48:\">\",49:\"<=\",50:\"<\",51:\"==\",52:\"!=\",53:\"&&\",54:\"||\",56:\"=\",60:\"TRUE\",61:\"FALSE\",62:\"NULL\",63:\"INTEGER\",64:\"FLOAT\",65:\"DSTRING\",66:\"STRING\",67:\"SET\",69:\"FOREACH\",70:\"IN\",71:\"END\",72:\"INCLUDE\",73:\"PARSE\",74:\"EVALUATE\",75:\"DEFINE\",76:\"MACRO\",79:\"MACROCALL\",81:\"BMACROCALL\",82:\"STOP\",83:\"BREAK\",85:\"ELSE\",87:\"ELSEIF\",88:\"IF\",89:\"WS\"},\nproductions_: [0,[3,1],[3,2],[5,1],[6,1],[6,2],[7,1],[7,1],[7,1],[7,1],[7,1],[7,1],[12,2],[12,3],[12,4],[12,5],[15,1],[15,1],[15,1],[15,1],[19,1],[24,1],[20,2],[20,2],[20,2],[20,2],[21,4],[21,3],[22,4],[22,4],[22,4],[22,4],[32,5],[32,5],[32,5],[32,5],[35,3],[35,2],[36,3],[36,2],[37,1],[37,3],[38,3],[41,1],[41,3],[41,2],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[41,3],[55,3],[27,1],[27,3],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[30,1],[34,1],[34,2],[57,1],[57,2],[58,1],[59,1],[13,4],[13,1],[13,8],[13,7],[13,8],[13,7],[13,8],[13,7],[13,4],[13,4],[13,4],[13,6],[13,5],[13,8],[13,6],[13,7],[13,5],[13,4],[13,3],[13,6],[13,5],[13,5],[13,4],[13,1],[13,1],[84,1],[84,2],[86,5],[86,4],[86,6],[86,5],[86,6],[86,5],[68,6],[68,5],[68,7],[68,6],[68,7],[68,6],[78,1],[78,3],[80,1],[80,3],[77,1],[77,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */\n/**/) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return {type: 'Statements', pos: this._$, body: []}; \nbreak;\ncase 2: return $$[$0-1]; \nbreak;\ncase 3: this.$ = {type: 'Statements', pos: this._$, body: $$[$0]}; \nbreak;\ncase 4: this.$ = [$$[$0]]; \nbreak;\ncase 5: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 6: this.$ = {type: 'Text', pos: this._$, value: $$[$0].replace(/\\\\(?=#|\\$)/g, '')}; \nbreak;\ncase 7: this.$ = {type: 'BText', pos: this._$, value: $$[$0].replace(/^#\\[\\[|\\]\\]#/g, '')}; \nbreak;\ncase 8: this.$ = {type: 'Comment', pos: this._$, value: $$[$0].replace(/^##/, '')}; \nbreak;\ncase 9: this.$ = {type: 'BComment', pos: this._$, value: $$[$0].replace(/^#\\*|\\*#$/g, '')}; \nbreak;\ncase 10: this.$ = $$[$0]; \nbreak;\ncase 11: this.$ = $$[$0]; \nbreak;\ncase 12: this.$ = {type: 'Reference', pos: this._$, object: $$[$0]}; \nbreak;\ncase 13: this.$ = {type: 'Reference', pos: this._$, object: $$[$0], silent: true}; \nbreak;\ncase 14: this.$ = {type: 'Reference', pos: this._$, object: $$[$0-1], wrapped: true}; \nbreak;\ncase 15: this.$ = {type: 'Reference', pos: this._$, object: $$[$0-1], silent: true, wrapped: true}; \nbreak;\ncase 16: this.$ = $$[$0]; \nbreak;\ncase 17: this.$ = $$[$0]; \nbreak;\ncase 18: this.$ = $$[$0]; \nbreak;\ncase 19: this.$ = $$[$0]; \nbreak;\ncase 20: this.$ = {type: 'Identifier', pos: this._$, name: $$[$0]}; \nbreak;\ncase 21: this.$ = {type: 'Prop', pos: this._$, name: $$[$0].replace(/^\\./, '')}; \nbreak;\ncase 22: this.$ = {type: 'Property', pos: this._$, object: $$[$0-1], property: $$[$0]}; \nbreak;\ncase 23: this.$ = {type: 'Property', pos: this._$, object: $$[$0-1], property: $$[$0]}; \nbreak;\ncase 24: this.$ = {type: 'Property', pos: this._$, object: $$[$0-1], property: $$[$0]}; \nbreak;\ncase 25: this.$ = {type: 'Property', pos: this._$, object: $$[$0-1], property: $$[$0]}; \nbreak;\ncase 26: this.$ = {type: 'Method', pos: this._$, callee: $$[$0-3], arguments: $$[$0-1]}; \nbreak;\ncase 27: this.$ = {type: 'Method', pos: this._$, callee: $$[$0-2], arguments: []}; \nbreak;\ncase 28: this.$ = {type: 'Index', pos: this._$, object: $$[$0-3], property: $$[$0-1]}; \nbreak;\ncase 29: this.$ = {type: 'Index', pos: this._$, object: $$[$0-3], property: $$[$0-1]}; \nbreak;\ncase 30: this.$ = {type: 'Index', pos: this._$, object: $$[$0-3], property: $$[$0-1]}; \nbreak;\ncase 31: this.$ = {type: 'Index', pos: this._$, object: $$[$0-3], property: $$[$0-1]}; \nbreak;\ncase 32: this.$ = {type: 'Range', pos: this._$, start: $$[$0-3], end: $$[$0-1]}; \nbreak;\ncase 33: this.$ = {type: 'Range', pos: this._$, start: $$[$0-3], end: $$[$0-1]}; \nbreak;\ncase 34: this.$ = {type: 'Range', pos: this._$, start: $$[$0-3], end: $$[$0-1]}; \nbreak;\ncase 35: this.$ = {type: 'Range', pos: this._$, start: $$[$0-3], end: $$[$0-1]}; \nbreak;\ncase 36: this.$ = {type: 'List', pos: this._$, elements: $$[$0-1]}; \nbreak;\ncase 37: this.$ = {type: 'List', pos: this._$, elements: []}; \nbreak;\ncase 38: this.$ = {type: 'Map', pos: this._$, mapItems: $$[$0-1]}; \nbreak;\ncase 39: this.$ = {type: 'Map', pos: this._$, mapItems: []}; \nbreak;\ncase 40: this.$ = [$$[$0]]; \nbreak;\ncase 41: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 42: this.$ = {type: 'MapItem', pos: this._$, property: $$[$0-2], value: $$[$0]}; \nbreak;\ncase 43: this.$ = $$[$0]; \nbreak;\ncase 44: this.$ = $$[$0-1]; \nbreak;\ncase 45: this.$ = {type: 'UnaryExpr', pos: this._$, operator: $$[$0-1], argument: $$[$0]}; \nbreak;\ncase 46: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 47: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 48: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 49: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 50: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 51: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 52: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 53: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 54: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 55: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 56: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 57: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 58: this.$ = {type: 'BinaryExpr', pos: this._$, operator: $$[$0-1], left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 59: this.$ = {type: 'AssignExpr', pos: this._$, left: $$[$0-2], right: $$[$0]}; \nbreak;\ncase 60: this.$ = [$$[$0]]; \nbreak;\ncase 61: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 62: this.$ = $$[$0]; \nbreak;\ncase 63: this.$ = $$[$0]; \nbreak;\ncase 64: this.$ = $$[$0]; \nbreak;\ncase 65: this.$ = $$[$0]; \nbreak;\ncase 66: this.$ = $$[$0]; \nbreak;\ncase 67: this.$ = $$[$0]; \nbreak;\ncase 68: this.$ = $$[$0]; \nbreak;\ncase 69: this.$ = $$[$0]; \nbreak;\ncase 70: this.$ = {type: 'Boolean', pos: this._$, value: true}; \nbreak;\ncase 71: this.$ = {type: 'Boolean', pos: this._$, value: false}; \nbreak;\ncase 72: this.$ = {type: 'Null', pos: this._$, value: null}; \nbreak;\ncase 73: this.$ = {type: 'Integer', pos: this._$, value: parseInt($$[$0])}; \nbreak;\ncase 74: this.$ = {type: 'Integer', pos: this._$, value: - parseInt($$[$0])}; \nbreak;\ncase 75: this.$ = {type: 'Float', pos: this._$, value: parseFloat($$[$0])}; \nbreak;\ncase 76: this.$ = {type: 'Float', pos: this._$, value: - parseInt($$[$0])}; \nbreak;\ncase 77: this.$ = {type: 'DString', pos: this._$, value: $$[$0].replace(/^\"|\"$/g, '').replace(/\\\\\"/g, '\"')}; \nbreak;\ncase 78: this.$ = {type: 'String', pos: this._$, value: $$[$0].replace(/^'|'$/g, '')}; \nbreak;\ncase 79: this.$ = $$[$0-1]; \nbreak;\ncase 80: this.$ = $$[$0]; \nbreak;\ncase 81: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-5], right: $$[$0-3], body: $$[$0-1]}; \nbreak;\ncase 82: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-4], right: $$[$0-2]}; \nbreak;\ncase 83: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-5], right: $$[$0-3], body: $$[$0-1]}; \nbreak;\ncase 84: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-4], right: $$[$0-2]}; \nbreak;\ncase 85: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-5], right: $$[$0-3], body: $$[$0-1]}; \nbreak;\ncase 86: this.$ = {type: 'Foreach', pos: this._$, left: $$[$0-4], right: $$[$0-2]}; \nbreak;\ncase 87: this.$ = {type: 'Include', pos: this._$, arguments: $$[$0-1]}; \nbreak;\ncase 88: this.$ = {type: 'Parse', pos: this._$, argument: $$[$0-1]}; \nbreak;\ncase 89: this.$ = {type: 'Evaluate', pos: this._$, argument: $$[$0-1]}; \nbreak;\ncase 90: this.$ = {type: 'Define', pos: this._$, name: $$[$0-3], body: $$[$0-1]}; \nbreak;\ncase 91: this.$ = {type: 'Define', pos: this._$, name: $$[$0-2]}; \nbreak;\ncase 92: this.$ = {type: 'Macro', pos: this._$, name: $$[$0-5], arguments: $$[$0-3], body: $$[$0-1]}; \nbreak;\ncase 93: this.$ = {type: 'Macro', pos: this._$, name: $$[$0-3], arguments: [], body: $$[$0-1]}; \nbreak;\ncase 94: this.$ = {type: 'Macro', pos: this._$, name: $$[$0-4], arguments: $$[$0-2]}; \nbreak;\ncase 95: this.$ = {type: 'Macro', pos: this._$, name: $$[$0-2], arguments: []}; \nbreak;\ncase 96: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-3].replace(/^#{?|}$/g, ''), arguments: $$[$0-1]}; \nbreak;\ncase 97: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-2].replace(/^#{?|}$/g, ''), arguments: []}; \nbreak;\ncase 98: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-5].replace(/^#@{?|}$/g, ''), arguments: $$[$0-3], isBlock: true, body: $$[$0-1]}; \nbreak;\ncase 99: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-4].replace(/^#@{?|}$/g, ''), arguments: [], isBlock: true, body: $$[$0-1]}; \nbreak;\ncase 100: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-4].replace(/^#@{?|}$/g, ''), arguments: $$[$0-2], isBlock: true}; \nbreak;\ncase 101: this.$ = {type: 'MacroCall', pos: this._$, name: $$[$0-3].replace(/^#@{?|}$/g, ''), arguments: [], isBlock: true}; \nbreak;\ncase 102: this.$ = {type: 'Stop', pos: this._$}; \nbreak;\ncase 103: this.$ = {type: 'Break', pos: this._$}; \nbreak;\ncase 104: this.$ = undefined; \nbreak;\ncase 105: this.$ = $$[$0]; \nbreak;\ncase 106: this.$ = {type: 'If', pos: this._$, test: $$[$0-2], consequent: $$[$0]}; \nbreak;\ncase 107: this.$ = {type: 'If', pos: this._$, test: $$[$0-1]}; \nbreak;\ncase 108: this.$ = {type: 'If', pos: this._$, test: $$[$0-3], consequent: $$[$0-1], alternate: $$[$0]}; \nbreak;\ncase 109: this.$ = {type: 'If', pos: this._$, test: $$[$0-2], alternate: $$[$0]}; \nbreak;\ncase 110: this.$ = {type: 'If', pos: this._$, test: $$[$0-3], consequent: $$[$0-1], alternate: $$[$0]}; \nbreak;\ncase 111: this.$ = {type: 'If', pos: this._$, test: $$[$0-2], alternate: $$[$01]}; \nbreak;\ncase 112: this.$ = {type: 'If', pos: this._$, test: $$[$0-3], consequent: $$[$0-1]}; \nbreak;\ncase 113: this.$ = {type: 'If', pos: this._$, test: $$[$0-2]}; \nbreak;\ncase 114: this.$ = {type: 'If', pos: this._$, test: $$[$0-4], consequent: $$[$0-2], alternate: $$[$0-1]}; \nbreak;\ncase 115: this.$ = {type: 'If', pos: this._$, test: $$[$0-3],  alternate: $$[$0-1]}; \nbreak;\ncase 116: this.$ = {type: 'If', pos: this._$, test: $$[$0-4], consequent: $$[$0-2], alternate: $$[$0-1]}; \nbreak;\ncase 117: this.$ = {type: 'If', pos: this._$, test: $$[$0-3], alternate: $$[$0-1]}; \nbreak;\ncase 118: this.$ = [$$[$0]]; \nbreak;\ncase 119: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 120: this.$ = [$$[$0]]; \nbreak;\ncase 121: this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{1:[3]},{1:[2,1]},{4:[1,26]},{4:[2,3],71:[2,3],85:[2,3],87:[2,3]},{4:[2,4],6:27,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[2,4],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],85:[2,4],87:[2,4],88:[1,25]},{4:[2,6],8:[2,6],9:[2,6],10:[2,6],11:[2,6],14:[2,6],67:[2,6],69:[2,6],71:[2,6],72:[2,6],73:[2,6],74:[2,6],75:[2,6],76:[2,6],79:[2,6],81:[2,6],82:[2,6],83:[2,6],85:[2,6],87:[2,6],88:[2,6]},{4:[2,7],8:[2,7],9:[2,7],10:[2,7],11:[2,7],14:[2,7],67:[2,7],69:[2,7],71:[2,7],72:[2,7],73:[2,7],74:[2,7],75:[2,7],76:[2,7],79:[2,7],81:[2,7],82:[2,7],83:[2,7],85:[2,7],87:[2,7],88:[2,7]},{4:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[2,8],14:[2,8],67:[2,8],69:[2,8],71:[2,8],72:[2,8],73:[2,8],74:[2,8],75:[2,8],76:[2,8],79:[2,8],81:[2,8],82:[2,8],83:[2,8],85:[2,8],87:[2,8],88:[2,8]},{4:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],14:[2,9],67:[2,9],69:[2,9],71:[2,9],72:[2,9],73:[2,9],74:[2,9],75:[2,9],76:[2,9],79:[2,9],81:[2,9],82:[2,9],83:[2,9],85:[2,9],87:[2,9],88:[2,9]},{4:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],14:[2,10],67:[2,10],69:[2,10],71:[2,10],72:[2,10],73:[2,10],74:[2,10],75:[2,10],76:[2,10],79:[2,10],81:[2,10],82:[2,10],83:[2,10],85:[2,10],87:[2,10],88:[2,10]},{4:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],14:[2,11],67:[2,11],69:[2,11],71:[2,11],72:[2,11],73:[2,11],74:[2,11],75:[2,11],76:[2,11],79:[2,11],81:[2,11],82:[2,11],83:[2,11],85:[2,11],87:[2,11],88:[2,11]},{15:28,16:[1,29],17:[1,30],19:31,20:32,21:33,22:34,23:[1,35]},{26:[1,36]},{4:[2,80],8:[2,80],9:[2,80],10:[2,80],11:[2,80],14:[2,80],67:[2,80],69:[2,80],71:[2,80],72:[2,80],73:[2,80],74:[2,80],75:[2,80],76:[2,80],79:[2,80],81:[2,80],82:[2,80],83:[2,80],85:[2,80],87:[2,80],88:[2,80]},{26:[1,37]},{26:[1,38]},{26:[1,39]},{26:[1,40]},{26:[1,41]},{26:[1,42]},{26:[1,43]},{26:[1,44]},{4:[2,102],8:[2,102],9:[2,102],10:[2,102],11:[2,102],14:[2,102],67:[2,102],69:[2,102],71:[2,102],72:[2,102],73:[2,102],74:[2,102],75:[2,102],76:[2,102],79:[2,102],81:[2,102],82:[2,102],83:[2,102],85:[2,102],87:[2,102],88:[2,102]},{4:[2,103],8:[2,103],9:[2,103],10:[2,103],11:[2,103],14:[2,103],67:[2,103],69:[2,103],71:[2,103],72:[2,103],73:[2,103],74:[2,103],75:[2,103],76:[2,103],79:[2,103],81:[2,103],82:[2,103],83:[2,103],85:[2,103],87:[2,103],88:[2,103]},{26:[1,45]},{1:[2,2]},{4:[2,5],71:[2,5],85:[2,5],87:[2,5]},{4:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],14:[2,12],18:[2,12],28:[2,12],31:[2,12],33:[2,12],39:[2,12],40:[2,12],42:[2,12],43:[2,12],44:[2,12],45:[2,12],46:[2,12],47:[2,12],48:[2,12],49:[2,12],50:[2,12],51:[2,12],52:[2,12],53:[2,12],54:[2,12],56:[2,12],67:[2,12],69:[2,12],70:[2,12],71:[2,12],72:[2,12],73:[2,12],74:[2,12],75:[2,12],76:[2,12],79:[2,12],81:[2,12],82:[2,12],83:[2,12],85:[2,12],87:[2,12],88:[2,12],89:[2,12]},{15:46,17:[1,47],19:31,20:32,21:33,22:34,23:[1,35]},{15:48,19:31,20:32,21:33,22:34,23:[1,35]},{4:[2,16],8:[2,16],9:[2,16],10:[2,16],11:[2,16],14:[2,16],18:[2,16],24:49,25:[1,51],28:[2,16],29:[1,50],31:[2,16],33:[2,16],39:[2,16],40:[2,16],42:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],47:[2,16],48:[2,16],49:[2,16],50:[2,16],51:[2,16],52:[2,16],53:[2,16],54:[2,16],56:[2,16],67:[2,16],69:[2,16],70:[2,16],71:[2,16],72:[2,16],73:[2,16],74:[2,16],75:[2,16],76:[2,16],79:[2,16],81:[2,16],82:[2,16],83:[2,16],85:[2,16],87:[2,16],88:[2,16],89:[2,16]},{4:[2,17],8:[2,17],9:[2,17],10:[2,17],11:[2,17],14:[2,17],18:[2,17],24:52,25:[1,51],26:[1,53],28:[2,17],29:[1,54],31:[2,17],33:[2,17],39:[2,17],40:[2,17],42:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],47:[2,17],48:[2,17],49:[2,17],50:[2,17],51:[2,17],52:[2,17],53:[2,17],54:[2,17],56:[2,17],67:[2,17],69:[2,17],70:[2,17],71:[2,17],72:[2,17],73:[2,17],74:[2,17],75:[2,17],76:[2,17],79:[2,17],81:[2,17],82:[2,17],83:[2,17],85:[2,17],87:[2,17],88:[2,17],89:[2,17]},{4:[2,18],8:[2,18],9:[2,18],10:[2,18],11:[2,18],14:[2,18],18:[2,18],24:55,25:[1,51],28:[2,18],29:[1,56],31:[2,18],33:[2,18],39:[2,18],40:[2,18],42:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],47:[2,18],48:[2,18],49:[2,18],50:[2,18],51:[2,18],52:[2,18],53:[2,18],54:[2,18],56:[2,18],67:[2,18],69:[2,18],70:[2,18],71:[2,18],72:[2,18],73:[2,18],74:[2,18],75:[2,18],76:[2,18],79:[2,18],81:[2,18],82:[2,18],83:[2,18],85:[2,18],87:[2,18],88:[2,18],89:[2,18]},{4:[2,19],8:[2,19],9:[2,19],10:[2,19],11:[2,19],14:[2,19],18:[2,19],24:57,25:[1,51],28:[2,19],29:[1,58],31:[2,19],33:[2,19],39:[2,19],40:[2,19],42:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],47:[2,19],48:[2,19],49:[2,19],50:[2,19],51:[2,19],52:[2,19],53:[2,19],54:[2,19],56:[2,19],67:[2,19],69:[2,19],70:[2,19],71:[2,19],72:[2,19],73:[2,19],74:[2,19],75:[2,19],76:[2,19],79:[2,19],81:[2,19],82:[2,19],83:[2,19],85:[2,19],87:[2,19],88:[2,19],89:[2,19]},{4:[2,20],8:[2,20],9:[2,20],10:[2,20],11:[2,20],14:[2,20],18:[2,20],25:[2,20],28:[2,20],29:[2,20],31:[2,20],33:[2,20],39:[2,20],40:[2,20],42:[2,20],43:[2,20],44:[2,20],45:[2,20],46:[2,20],47:[2,20],48:[2,20],49:[2,20],50:[2,20],51:[2,20],52:[2,20],53:[2,20],54:[2,20],56:[2,20],67:[2,20],69:[2,20],70:[2,20],71:[2,20],72:[2,20],73:[2,20],74:[2,20],75:[2,20],76:[2,20],79:[2,20],81:[2,20],82:[2,20],83:[2,20],85:[2,20],87:[2,20],88:[2,20],89:[2,20]},{12:60,14:[1,12],55:59},{12:61,14:[1,12]},{12:64,14:[1,12],17:[1,81],27:62,29:[1,80],30:63,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:82,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:83,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:84,14:[1,12]},{23:[1,85]},{12:64,14:[1,12],17:[1,81],28:[1,87],29:[1,80],30:88,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79],80:86},{12:64,14:[1,12],17:[1,81],28:[1,90],29:[1,80],30:88,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79],80:89},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:91,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{4:[2,13],8:[2,13],9:[2,13],10:[2,13],11:[2,13],14:[2,13],18:[2,13],28:[2,13],31:[2,13],33:[2,13],39:[2,13],40:[2,13],42:[2,13],43:[2,13],44:[2,13],45:[2,13],46:[2,13],47:[2,13],48:[2,13],49:[2,13],50:[2,13],51:[2,13],52:[2,13],53:[2,13],54:[2,13],56:[2,13],67:[2,13],69:[2,13],70:[2,13],71:[2,13],72:[2,13],73:[2,13],74:[2,13],75:[2,13],76:[2,13],79:[2,13],81:[2,13],82:[2,13],83:[2,13],85:[2,13],87:[2,13],88:[2,13],89:[2,13]},{15:95,19:31,20:32,21:33,22:34,23:[1,35]},{18:[1,96]},{4:[2,22],8:[2,22],9:[2,22],10:[2,22],11:[2,22],14:[2,22],18:[2,22],25:[2,22],26:[2,22],28:[2,22],29:[2,22],31:[2,22],33:[2,22],39:[2,22],40:[2,22],42:[2,22],43:[2,22],44:[2,22],45:[2,22],46:[2,22],47:[2,22],48:[2,22],49:[2,22],50:[2,22],51:[2,22],52:[2,22],53:[2,22],54:[2,22],56:[2,22],67:[2,22],69:[2,22],70:[2,22],71:[2,22],72:[2,22],73:[2,22],74:[2,22],75:[2,22],76:[2,22],79:[2,22],81:[2,22],82:[2,22],83:[2,22],85:[2,22],87:[2,22],88:[2,22],89:[2,22]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:97,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{4:[2,21],8:[2,21],9:[2,21],10:[2,21],11:[2,21],14:[2,21],18:[2,21],25:[2,21],26:[2,21],28:[2,21],29:[2,21],31:[2,21],33:[2,21],39:[2,21],40:[2,21],42:[2,21],43:[2,21],44:[2,21],45:[2,21],46:[2,21],47:[2,21],48:[2,21],49:[2,21],50:[2,21],51:[2,21],52:[2,21],53:[2,21],54:[2,21],56:[2,21],67:[2,21],69:[2,21],70:[2,21],71:[2,21],72:[2,21],73:[2,21],74:[2,21],75:[2,21],76:[2,21],79:[2,21],81:[2,21],82:[2,21],83:[2,21],85:[2,21],87:[2,21],88:[2,21],89:[2,21]},{4:[2,25],8:[2,25],9:[2,25],10:[2,25],11:[2,25],14:[2,25],18:[2,25],25:[2,25],26:[2,25],28:[2,25],29:[2,25],31:[2,25],33:[2,25],39:[2,25],40:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],47:[2,25],48:[2,25],49:[2,25],50:[2,25],51:[2,25],52:[2,25],53:[2,25],54:[2,25],56:[2,25],67:[2,25],69:[2,25],70:[2,25],71:[2,25],72:[2,25],73:[2,25],74:[2,25],75:[2,25],76:[2,25],79:[2,25],81:[2,25],82:[2,25],83:[2,25],85:[2,25],87:[2,25],88:[2,25],89:[2,25]},{12:64,14:[1,12],17:[1,81],27:98,28:[1,99],29:[1,80],30:63,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:100,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{4:[2,23],8:[2,23],9:[2,23],10:[2,23],11:[2,23],14:[2,23],18:[2,23],25:[2,23],26:[2,23],28:[2,23],29:[2,23],31:[2,23],33:[2,23],39:[2,23],40:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],47:[2,23],48:[2,23],49:[2,23],50:[2,23],51:[2,23],52:[2,23],53:[2,23],54:[2,23],56:[2,23],67:[2,23],69:[2,23],70:[2,23],71:[2,23],72:[2,23],73:[2,23],74:[2,23],75:[2,23],76:[2,23],79:[2,23],81:[2,23],82:[2,23],83:[2,23],85:[2,23],87:[2,23],88:[2,23],89:[2,23]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:101,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{4:[2,24],8:[2,24],9:[2,24],10:[2,24],11:[2,24],14:[2,24],18:[2,24],25:[2,24],26:[2,24],28:[2,24],29:[2,24],31:[2,24],33:[2,24],39:[2,24],40:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],47:[2,24],48:[2,24],49:[2,24],50:[2,24],51:[2,24],52:[2,24],53:[2,24],54:[2,24],56:[2,24],67:[2,24],69:[2,24],70:[2,24],71:[2,24],72:[2,24],73:[2,24],74:[2,24],75:[2,24],76:[2,24],79:[2,24],81:[2,24],82:[2,24],83:[2,24],85:[2,24],87:[2,24],88:[2,24],89:[2,24]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:102,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{28:[1,103]},{56:[1,104]},{70:[1,105]},{28:[1,106]},{28:[2,60],31:[2,60],39:[1,107]},{18:[2,62],28:[2,62],31:[2,62],39:[2,62],40:[2,62],42:[2,62],43:[2,62],44:[2,62],45:[2,62],46:[2,62],47:[2,62],48:[2,62],49:[2,62],50:[2,62],51:[2,62],52:[2,62],53:[2,62],54:[2,62],89:[2,62]},{18:[2,63],28:[2,63],31:[2,63],39:[2,63],40:[2,63],42:[2,63],43:[2,63],44:[2,63],45:[2,63],46:[2,63],47:[2,63],48:[2,63],49:[2,63],50:[2,63],51:[2,63],52:[2,63],53:[2,63],54:[2,63],89:[2,63]},{18:[2,64],28:[2,64],31:[2,64],39:[2,64],40:[2,64],42:[2,64],43:[2,64],44:[2,64],45:[2,64],46:[2,64],47:[2,64],48:[2,64],49:[2,64],50:[2,64],51:[2,64],52:[2,64],53:[2,64],54:[2,64],89:[2,64]},{18:[2,65],28:[2,65],31:[2,65],39:[2,65],40:[2,65],42:[2,65],43:[2,65],44:[2,65],45:[2,65],46:[2,65],47:[2,65],48:[2,65],49:[2,65],50:[2,65],51:[2,65],52:[2,65],53:[2,65],54:[2,65],89:[2,65]},{18:[2,66],28:[2,66],31:[2,66],39:[2,66],40:[2,66],42:[2,66],43:[2,66],44:[2,66],45:[2,66],46:[2,66],47:[2,66],48:[2,66],49:[2,66],50:[2,66],51:[2,66],52:[2,66],53:[2,66],54:[2,66],89:[2,66]},{18:[2,67],28:[2,67],31:[2,67],39:[2,67],40:[2,67],42:[2,67],43:[2,67],44:[2,67],45:[2,67],46:[2,67],47:[2,67],48:[2,67],49:[2,67],50:[2,67],51:[2,67],52:[2,67],53:[2,67],54:[2,67],89:[2,67]},{18:[2,68],28:[2,68],31:[2,68],39:[2,68],40:[2,68],42:[2,68],43:[2,68],44:[2,68],45:[2,68],46:[2,68],47:[2,68],48:[2,68],49:[2,68],50:[2,68],51:[2,68],52:[2,68],53:[2,68],54:[2,68],89:[2,68]},{18:[2,69],28:[2,69],31:[2,69],39:[2,69],40:[2,69],42:[2,69],43:[2,69],44:[2,69],45:[2,69],46:[2,69],47:[2,69],48:[2,69],49:[2,69],50:[2,69],51:[2,69],52:[2,69],53:[2,69],54:[2,69],89:[2,69]},{18:[2,70],28:[2,70],31:[2,70],39:[2,70],40:[2,70],42:[2,70],43:[2,70],44:[2,70],45:[2,70],46:[2,70],47:[2,70],48:[2,70],49:[2,70],50:[2,70],51:[2,70],52:[2,70],53:[2,70],54:[2,70],89:[2,70]},{18:[2,71],28:[2,71],31:[2,71],39:[2,71],40:[2,71],42:[2,71],43:[2,71],44:[2,71],45:[2,71],46:[2,71],47:[2,71],48:[2,71],49:[2,71],50:[2,71],51:[2,71],52:[2,71],53:[2,71],54:[2,71],89:[2,71]},{18:[2,72],28:[2,72],31:[2,72],39:[2,72],40:[2,72],42:[2,72],43:[2,72],44:[2,72],45:[2,72],46:[2,72],47:[2,72],48:[2,72],49:[2,72],50:[2,72],51:[2,72],52:[2,72],53:[2,72],54:[2,72],89:[2,72]},{18:[2,73],28:[2,73],31:[2,73],33:[2,73],39:[2,73],40:[2,73],42:[2,73],43:[2,73],44:[2,73],45:[2,73],46:[2,73],47:[2,73],48:[2,73],49:[2,73],50:[2,73],51:[2,73],52:[2,73],53:[2,73],54:[2,73],89:[2,73]},{63:[1,108],64:[1,109]},{18:[2,75],28:[2,75],31:[2,75],39:[2,75],40:[2,75],42:[2,75],43:[2,75],44:[2,75],45:[2,75],46:[2,75],47:[2,75],48:[2,75],49:[2,75],50:[2,75],51:[2,75],52:[2,75],53:[2,75],54:[2,75],89:[2,75]},{18:[2,77],28:[2,77],31:[2,77],39:[2,77],40:[2,77],42:[2,77],43:[2,77],44:[2,77],45:[2,77],46:[2,77],47:[2,77],48:[2,77],49:[2,77],50:[2,77],51:[2,77],52:[2,77],53:[2,77],54:[2,77],89:[2,77]},{18:[2,78],28:[2,78],31:[2,78],39:[2,78],40:[2,78],42:[2,78],43:[2,78],44:[2,78],45:[2,78],46:[2,78],47:[2,78],48:[2,78],49:[2,78],50:[2,78],51:[2,78],52:[2,78],53:[2,78],54:[2,78],89:[2,78]},{12:110,14:[1,12],17:[1,81],27:112,29:[1,80],30:63,31:[1,113],32:69,34:111,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],17:[1,81],18:[1,115],29:[1,80],30:117,32:69,34:65,35:70,36:71,37:114,38:116,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{28:[1,118]},{28:[1,119]},{28:[1,120]},{28:[1,122],39:[1,124],77:121,89:[1,123]},{28:[1,125]},{4:[2,97],8:[2,97],9:[2,97],10:[2,97],11:[2,97],14:[2,97],67:[2,97],69:[2,97],71:[2,97],72:[2,97],73:[2,97],74:[2,97],75:[2,97],76:[2,97],79:[2,97],81:[2,97],82:[2,97],83:[2,97],85:[2,97],87:[2,97],88:[2,97]},{28:[2,120],39:[1,124],77:126,89:[1,123]},{28:[1,127]},{5:128,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,129],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{28:[1,130],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[1,142],54:[1,143]},{28:[2,43],42:[2,43],43:[2,43],44:[2,43],45:[2,43],46:[2,43],47:[2,43],48:[2,43],49:[2,43],50:[2,43],51:[2,43],52:[2,43],53:[2,43],54:[2,43]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:144,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:145,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{18:[1,146]},{4:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],14:[2,14],18:[2,14],28:[2,14],31:[2,14],33:[2,14],39:[2,14],40:[2,14],42:[2,14],43:[2,14],44:[2,14],45:[2,14],46:[2,14],47:[2,14],48:[2,14],49:[2,14],50:[2,14],51:[2,14],52:[2,14],53:[2,14],54:[2,14],56:[2,14],67:[2,14],69:[2,14],70:[2,14],71:[2,14],72:[2,14],73:[2,14],74:[2,14],75:[2,14],76:[2,14],79:[2,14],81:[2,14],82:[2,14],83:[2,14],85:[2,14],87:[2,14],88:[2,14],89:[2,14]},{31:[1,147]},{28:[1,148]},{4:[2,27],8:[2,27],9:[2,27],10:[2,27],11:[2,27],14:[2,27],18:[2,27],25:[2,27],28:[2,27],29:[2,27],31:[2,27],33:[2,27],39:[2,27],40:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],53:[2,27],54:[2,27],56:[2,27],67:[2,27],69:[2,27],70:[2,27],71:[2,27],72:[2,27],73:[2,27],74:[2,27],75:[2,27],76:[2,27],79:[2,27],81:[2,27],82:[2,27],83:[2,27],85:[2,27],87:[2,27],88:[2,27],89:[2,27]},{31:[1,149]},{31:[1,150]},{31:[1,151]},{4:[2,79],8:[2,79],9:[2,79],10:[2,79],11:[2,79],14:[2,79],67:[2,79],69:[2,79],71:[2,79],72:[2,79],73:[2,79],74:[2,79],75:[2,79],76:[2,79],79:[2,79],81:[2,79],82:[2,79],83:[2,79],85:[2,79],87:[2,79],88:[2,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:152,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:153,14:[1,12],29:[1,80],32:154,35:155},{4:[2,87],8:[2,87],9:[2,87],10:[2,87],11:[2,87],14:[2,87],67:[2,87],69:[2,87],71:[2,87],72:[2,87],73:[2,87],74:[2,87],75:[2,87],76:[2,87],79:[2,87],81:[2,87],82:[2,87],83:[2,87],85:[2,87],87:[2,87],88:[2,87]},{12:64,14:[1,12],17:[1,81],27:156,29:[1,80],30:63,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{18:[2,74],28:[2,74],31:[2,74],33:[2,74],39:[2,74],40:[2,74],42:[2,74],43:[2,74],44:[2,74],45:[2,74],46:[2,74],47:[2,74],48:[2,74],49:[2,74],50:[2,74],51:[2,74],52:[2,74],53:[2,74],54:[2,74],89:[2,74]},{18:[2,76],28:[2,76],31:[2,76],39:[2,76],40:[2,76],42:[2,76],43:[2,76],44:[2,76],45:[2,76],46:[2,76],47:[2,76],48:[2,76],49:[2,76],50:[2,76],51:[2,76],52:[2,76],53:[2,76],54:[2,76],89:[2,76]},{31:[2,62],33:[1,157],39:[2,62]},{31:[2,63],33:[1,158],39:[2,63]},{31:[1,159]},{18:[2,37],28:[2,37],31:[2,37],39:[2,37],40:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],47:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],53:[2,37],54:[2,37],89:[2,37]},{18:[1,160]},{18:[2,39],28:[2,39],31:[2,39],39:[2,39],40:[2,39],42:[2,39],43:[2,39],44:[2,39],45:[2,39],46:[2,39],47:[2,39],48:[2,39],49:[2,39],50:[2,39],51:[2,39],52:[2,39],53:[2,39],54:[2,39],89:[2,39]},{18:[2,40],39:[1,161]},{40:[1,162]},{4:[2,88],8:[2,88],9:[2,88],10:[2,88],11:[2,88],14:[2,88],67:[2,88],69:[2,88],71:[2,88],72:[2,88],73:[2,88],74:[2,88],75:[2,88],76:[2,88],79:[2,88],81:[2,88],82:[2,88],83:[2,88],85:[2,88],87:[2,88],88:[2,88]},{4:[2,89],8:[2,89],9:[2,89],10:[2,89],11:[2,89],14:[2,89],67:[2,89],69:[2,89],71:[2,89],72:[2,89],73:[2,89],74:[2,89],75:[2,89],76:[2,89],79:[2,89],81:[2,89],82:[2,89],83:[2,89],85:[2,89],87:[2,89],88:[2,89]},{5:163,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,164],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{12:166,14:[1,12],78:165},{5:167,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,168],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{14:[2,122],17:[2,122],29:[2,122],46:[2,122],60:[2,122],61:[2,122],62:[2,122],63:[2,122],64:[2,122],65:[2,122],66:[2,122]},{14:[2,123],17:[2,123],29:[2,123],46:[2,123],60:[2,123],61:[2,123],62:[2,123],63:[2,123],64:[2,123],65:[2,123],66:[2,123]},{4:[2,96],8:[2,96],9:[2,96],10:[2,96],11:[2,96],14:[2,96],67:[2,96],69:[2,96],71:[2,96],72:[2,96],73:[2,96],74:[2,96],75:[2,96],76:[2,96],79:[2,96],81:[2,96],82:[2,96],83:[2,96],85:[2,96],87:[2,96],88:[2,96]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:88,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79],80:169},{5:170,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,171],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{71:[1,172]},{4:[2,101],8:[2,101],9:[2,101],10:[2,101],11:[2,101],14:[2,101],67:[2,101],69:[2,101],71:[2,101],72:[2,101],73:[2,101],74:[2,101],75:[2,101],76:[2,101],79:[2,101],81:[2,101],82:[2,101],83:[2,101],85:[2,101],87:[2,101],88:[2,101]},{5:173,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,174],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],84:175,85:[1,177],86:176,87:[1,178],88:[1,25]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:179,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:180,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:181,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:182,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:183,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:184,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:185,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:186,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:187,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:188,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:189,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:190,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:191,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{28:[1,192],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[1,142],54:[1,143]},{28:[2,45],42:[2,45],43:[2,45],44:[2,45],45:[2,45],46:[2,45],47:[2,45],48:[2,45],49:[2,45],50:[2,45],51:[2,45],52:[2,45],53:[2,45],54:[2,45]},{4:[2,15],8:[2,15],9:[2,15],10:[2,15],11:[2,15],14:[2,15],18:[2,15],28:[2,15],31:[2,15],33:[2,15],39:[2,15],40:[2,15],42:[2,15],43:[2,15],44:[2,15],45:[2,15],46:[2,15],47:[2,15],48:[2,15],49:[2,15],50:[2,15],51:[2,15],52:[2,15],53:[2,15],54:[2,15],56:[2,15],67:[2,15],69:[2,15],70:[2,15],71:[2,15],72:[2,15],73:[2,15],74:[2,15],75:[2,15],76:[2,15],79:[2,15],81:[2,15],82:[2,15],83:[2,15],85:[2,15],87:[2,15],88:[2,15],89:[2,15]},{4:[2,28],8:[2,28],9:[2,28],10:[2,28],11:[2,28],14:[2,28],18:[2,28],25:[2,28],28:[2,28],29:[2,28],31:[2,28],33:[2,28],39:[2,28],40:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],56:[2,28],67:[2,28],69:[2,28],70:[2,28],71:[2,28],72:[2,28],73:[2,28],74:[2,28],75:[2,28],76:[2,28],79:[2,28],81:[2,28],82:[2,28],83:[2,28],85:[2,28],87:[2,28],88:[2,28],89:[2,28]},{4:[2,26],8:[2,26],9:[2,26],10:[2,26],11:[2,26],14:[2,26],18:[2,26],25:[2,26],28:[2,26],29:[2,26],31:[2,26],33:[2,26],39:[2,26],40:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],47:[2,26],48:[2,26],49:[2,26],50:[2,26],51:[2,26],52:[2,26],53:[2,26],54:[2,26],56:[2,26],67:[2,26],69:[2,26],70:[2,26],71:[2,26],72:[2,26],73:[2,26],74:[2,26],75:[2,26],76:[2,26],79:[2,26],81:[2,26],82:[2,26],83:[2,26],85:[2,26],87:[2,26],88:[2,26],89:[2,26]},{4:[2,30],8:[2,30],9:[2,30],10:[2,30],11:[2,30],14:[2,30],18:[2,30],25:[2,30],28:[2,30],29:[2,30],31:[2,30],33:[2,30],39:[2,30],40:[2,30],42:[2,30],43:[2,30],44:[2,30],45:[2,30],46:[2,30],47:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],53:[2,30],54:[2,30],56:[2,30],67:[2,30],69:[2,30],70:[2,30],71:[2,30],72:[2,30],73:[2,30],74:[2,30],75:[2,30],76:[2,30],79:[2,30],81:[2,30],82:[2,30],83:[2,30],85:[2,30],87:[2,30],88:[2,30],89:[2,30]},{4:[2,29],8:[2,29],9:[2,29],10:[2,29],11:[2,29],14:[2,29],18:[2,29],25:[2,29],28:[2,29],29:[2,29],31:[2,29],33:[2,29],39:[2,29],40:[2,29],42:[2,29],43:[2,29],44:[2,29],45:[2,29],46:[2,29],47:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],53:[2,29],54:[2,29],56:[2,29],67:[2,29],69:[2,29],70:[2,29],71:[2,29],72:[2,29],73:[2,29],74:[2,29],75:[2,29],76:[2,29],79:[2,29],81:[2,29],82:[2,29],83:[2,29],85:[2,29],87:[2,29],88:[2,29],89:[2,29]},{4:[2,31],8:[2,31],9:[2,31],10:[2,31],11:[2,31],14:[2,31],18:[2,31],25:[2,31],28:[2,31],29:[2,31],31:[2,31],33:[2,31],39:[2,31],40:[2,31],42:[2,31],43:[2,31],44:[2,31],45:[2,31],46:[2,31],47:[2,31],48:[2,31],49:[2,31],50:[2,31],51:[2,31],52:[2,31],53:[2,31],54:[2,31],56:[2,31],67:[2,31],69:[2,31],70:[2,31],71:[2,31],72:[2,31],73:[2,31],74:[2,31],75:[2,31],76:[2,31],79:[2,31],81:[2,31],82:[2,31],83:[2,31],85:[2,31],87:[2,31],88:[2,31],89:[2,31]},{28:[2,59],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[1,142],54:[1,143]},{28:[1,193]},{28:[1,194]},{28:[1,195]},{28:[2,61],31:[2,61]},{12:196,14:[1,12],34:197,46:[1,198],63:[1,75]},{12:199,14:[1,12],34:200,46:[1,198],63:[1,75]},{18:[2,36],28:[2,36],31:[2,36],39:[2,36],40:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],53:[2,36],54:[2,36],89:[2,36]},{18:[2,38],28:[2,38],31:[2,38],39:[2,38],40:[2,38],42:[2,38],43:[2,38],44:[2,38],45:[2,38],46:[2,38],47:[2,38],48:[2,38],49:[2,38],50:[2,38],51:[2,38],52:[2,38],53:[2,38],54:[2,38],89:[2,38]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:117,32:69,34:65,35:70,36:71,37:201,38:116,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{12:64,14:[1,12],17:[1,81],29:[1,80],30:202,32:69,34:65,35:70,36:71,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{71:[1,203]},{4:[2,91],8:[2,91],9:[2,91],10:[2,91],11:[2,91],14:[2,91],67:[2,91],69:[2,91],71:[2,91],72:[2,91],73:[2,91],74:[2,91],75:[2,91],76:[2,91],79:[2,91],81:[2,91],82:[2,91],83:[2,91],85:[2,91],87:[2,91],88:[2,91]},{28:[1,204]},{28:[2,118],39:[1,124],77:205,89:[1,123]},{71:[1,206]},{4:[2,95],8:[2,95],9:[2,95],10:[2,95],11:[2,95],14:[2,95],67:[2,95],69:[2,95],71:[2,95],72:[2,95],73:[2,95],74:[2,95],75:[2,95],76:[2,95],79:[2,95],81:[2,95],82:[2,95],83:[2,95],85:[2,95],87:[2,95],88:[2,95]},{28:[2,121]},{71:[1,207]},{4:[2,100],8:[2,100],9:[2,100],10:[2,100],11:[2,100],14:[2,100],67:[2,100],69:[2,100],71:[2,100],72:[2,100],73:[2,100],74:[2,100],75:[2,100],76:[2,100],79:[2,100],81:[2,100],82:[2,100],83:[2,100],85:[2,100],87:[2,100],88:[2,100]},{4:[2,99],8:[2,99],9:[2,99],10:[2,99],11:[2,99],14:[2,99],67:[2,99],69:[2,99],71:[2,99],72:[2,99],73:[2,99],74:[2,99],75:[2,99],76:[2,99],79:[2,99],81:[2,99],82:[2,99],83:[2,99],85:[2,99],87:[2,99],88:[2,99]},{71:[1,208],84:209,85:[1,177],86:210,87:[1,178]},{4:[2,113],8:[2,113],9:[2,113],10:[2,113],11:[2,113],14:[2,113],67:[2,113],69:[2,113],71:[2,113],72:[2,113],73:[2,113],74:[2,113],75:[2,113],76:[2,113],79:[2,113],81:[2,113],82:[2,113],83:[2,113],85:[2,113],87:[2,113],88:[2,113]},{71:[1,211]},{71:[1,212]},{5:213,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[2,104],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{26:[1,214]},{28:[2,46],42:[2,46],43:[2,46],44:[2,46],45:[2,46],46:[2,46],47:[2,46],48:[2,46],49:[2,46],50:[2,46],51:[2,46],52:[2,46],53:[2,46],54:[2,46]},{28:[2,47],42:[2,47],43:[2,47],44:[2,47],45:[2,47],46:[2,47],47:[2,47],48:[2,47],49:[2,47],50:[2,47],51:[2,47],52:[2,47],53:[2,47],54:[2,47]},{28:[2,48],42:[2,48],43:[2,48],44:[2,48],45:[2,48],46:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[2,48],52:[2,48],53:[2,48],54:[2,48]},{28:[2,49],42:[1,131],43:[1,132],44:[1,133],45:[2,49],46:[2,49],47:[2,49],48:[2,49],49:[2,49],50:[2,49],51:[2,49],52:[2,49],53:[2,49],54:[2,49]},{28:[2,50],42:[1,131],43:[1,132],44:[1,133],45:[2,50],46:[2,50],47:[2,50],48:[2,50],49:[2,50],50:[2,50],51:[2,50],52:[2,50],53:[2,50],54:[2,50]},{28:[2,51],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[2,51],48:[2,51],49:[2,51],50:[2,51],51:[2,51],52:[2,51],53:[2,51],54:[2,51]},{28:[2,52],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[2,52],48:[2,52],49:[2,52],50:[2,52],51:[2,52],52:[2,52],53:[2,52],54:[2,52]},{28:[2,53],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[2,53],48:[2,53],49:[2,53],50:[2,53],51:[2,53],52:[2,53],53:[2,53],54:[2,53]},{28:[2,54],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[2,54],48:[2,54],49:[2,54],50:[2,54],51:[2,54],52:[2,54],53:[2,54],54:[2,54]},{28:[2,55],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[2,55],52:[2,55],53:[2,55],54:[2,55]},{28:[2,56],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[2,56],52:[2,56],53:[2,56],54:[2,56]},{28:[2,57],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[2,57],54:[2,57]},{28:[2,58],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[1,142],54:[2,58]},{28:[2,44],42:[2,44],43:[2,44],44:[2,44],45:[2,44],46:[2,44],47:[2,44],48:[2,44],49:[2,44],50:[2,44],51:[2,44],52:[2,44],53:[2,44],54:[2,44]},{5:215,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,216],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{5:217,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,218],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{5:219,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,220],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{31:[1,221]},{31:[1,222]},{63:[1,108]},{31:[1,223]},{31:[1,224]},{18:[2,41]},{18:[2,42],39:[2,42]},{4:[2,90],8:[2,90],9:[2,90],10:[2,90],11:[2,90],14:[2,90],67:[2,90],69:[2,90],71:[2,90],72:[2,90],73:[2,90],74:[2,90],75:[2,90],76:[2,90],79:[2,90],81:[2,90],82:[2,90],83:[2,90],85:[2,90],87:[2,90],88:[2,90]},{5:225,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[1,226],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],88:[1,25]},{12:166,14:[1,12],78:227},{4:[2,93],8:[2,93],9:[2,93],10:[2,93],11:[2,93],14:[2,93],67:[2,93],69:[2,93],71:[2,93],72:[2,93],73:[2,93],74:[2,93],75:[2,93],76:[2,93],79:[2,93],81:[2,93],82:[2,93],83:[2,93],85:[2,93],87:[2,93],88:[2,93]},{4:[2,98],8:[2,98],9:[2,98],10:[2,98],11:[2,98],14:[2,98],67:[2,98],69:[2,98],71:[2,98],72:[2,98],73:[2,98],74:[2,98],75:[2,98],76:[2,98],79:[2,98],81:[2,98],82:[2,98],83:[2,98],85:[2,98],87:[2,98],88:[2,98]},{4:[2,112],8:[2,112],9:[2,112],10:[2,112],11:[2,112],14:[2,112],67:[2,112],69:[2,112],71:[2,112],72:[2,112],73:[2,112],74:[2,112],75:[2,112],76:[2,112],79:[2,112],81:[2,112],82:[2,112],83:[2,112],85:[2,112],87:[2,112],88:[2,112]},{71:[1,228]},{71:[1,229]},{4:[2,115],8:[2,115],9:[2,115],10:[2,115],11:[2,115],14:[2,115],67:[2,115],69:[2,115],71:[2,115],72:[2,115],73:[2,115],74:[2,115],75:[2,115],76:[2,115],79:[2,115],81:[2,115],82:[2,115],83:[2,115],85:[2,115],87:[2,115],88:[2,115]},{4:[2,117],8:[2,117],9:[2,117],10:[2,117],11:[2,117],14:[2,117],67:[2,117],69:[2,117],71:[2,117],72:[2,117],73:[2,117],74:[2,117],75:[2,117],76:[2,117],79:[2,117],81:[2,117],82:[2,117],83:[2,117],85:[2,117],87:[2,117],88:[2,117]},{71:[2,105]},{12:64,14:[1,12],16:[1,94],17:[1,81],26:[1,93],29:[1,80],30:92,32:69,34:65,35:70,36:71,41:230,46:[1,76],57:66,58:67,59:68,60:[1,72],61:[1,73],62:[1,74],63:[1,75],64:[1,77],65:[1,78],66:[1,79]},{71:[1,231]},{4:[2,82],8:[2,82],9:[2,82],10:[2,82],11:[2,82],14:[2,82],67:[2,82],69:[2,82],71:[2,82],72:[2,82],73:[2,82],74:[2,82],75:[2,82],76:[2,82],79:[2,82],81:[2,82],82:[2,82],83:[2,82],85:[2,82],87:[2,82],88:[2,82]},{71:[1,232]},{4:[2,84],8:[2,84],9:[2,84],10:[2,84],11:[2,84],14:[2,84],67:[2,84],69:[2,84],71:[2,84],72:[2,84],73:[2,84],74:[2,84],75:[2,84],76:[2,84],79:[2,84],81:[2,84],82:[2,84],83:[2,84],85:[2,84],87:[2,84],88:[2,84]},{71:[1,233]},{4:[2,86],8:[2,86],9:[2,86],10:[2,86],11:[2,86],14:[2,86],67:[2,86],69:[2,86],71:[2,86],72:[2,86],73:[2,86],74:[2,86],75:[2,86],76:[2,86],79:[2,86],81:[2,86],82:[2,86],83:[2,86],85:[2,86],87:[2,86],88:[2,86]},{18:[2,32],28:[2,32],31:[2,32],39:[2,32],40:[2,32],42:[2,32],43:[2,32],44:[2,32],45:[2,32],46:[2,32],47:[2,32],48:[2,32],49:[2,32],50:[2,32],51:[2,32],52:[2,32],53:[2,32],54:[2,32],89:[2,32]},{18:[2,33],28:[2,33],31:[2,33],39:[2,33],40:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],46:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[2,33],51:[2,33],52:[2,33],53:[2,33],54:[2,33],89:[2,33]},{18:[2,34],28:[2,34],31:[2,34],39:[2,34],40:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],47:[2,34],48:[2,34],49:[2,34],50:[2,34],51:[2,34],52:[2,34],53:[2,34],54:[2,34],89:[2,34]},{18:[2,35],28:[2,35],31:[2,35],39:[2,35],40:[2,35],42:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],47:[2,35],48:[2,35],49:[2,35],50:[2,35],51:[2,35],52:[2,35],53:[2,35],54:[2,35],89:[2,35]},{71:[1,234]},{4:[2,94],8:[2,94],9:[2,94],10:[2,94],11:[2,94],14:[2,94],67:[2,94],69:[2,94],71:[2,94],72:[2,94],73:[2,94],74:[2,94],75:[2,94],76:[2,94],79:[2,94],81:[2,94],82:[2,94],83:[2,94],85:[2,94],87:[2,94],88:[2,94]},{28:[2,119]},{4:[2,114],8:[2,114],9:[2,114],10:[2,114],11:[2,114],14:[2,114],67:[2,114],69:[2,114],71:[2,114],72:[2,114],73:[2,114],74:[2,114],75:[2,114],76:[2,114],79:[2,114],81:[2,114],82:[2,114],83:[2,114],85:[2,114],87:[2,114],88:[2,114]},{4:[2,116],8:[2,116],9:[2,116],10:[2,116],11:[2,116],14:[2,116],67:[2,116],69:[2,116],71:[2,116],72:[2,116],73:[2,116],74:[2,116],75:[2,116],76:[2,116],79:[2,116],81:[2,116],82:[2,116],83:[2,116],85:[2,116],87:[2,116],88:[2,116]},{28:[1,235],42:[1,131],43:[1,132],44:[1,133],45:[1,134],46:[1,135],47:[1,136],48:[1,137],49:[1,138],50:[1,139],51:[1,140],52:[1,141],53:[1,142],54:[1,143]},{4:[2,81],8:[2,81],9:[2,81],10:[2,81],11:[2,81],14:[2,81],67:[2,81],69:[2,81],71:[2,81],72:[2,81],73:[2,81],74:[2,81],75:[2,81],76:[2,81],79:[2,81],81:[2,81],82:[2,81],83:[2,81],85:[2,81],87:[2,81],88:[2,81]},{4:[2,83],8:[2,83],9:[2,83],10:[2,83],11:[2,83],14:[2,83],67:[2,83],69:[2,83],71:[2,83],72:[2,83],73:[2,83],74:[2,83],75:[2,83],76:[2,83],79:[2,83],81:[2,83],82:[2,83],83:[2,83],85:[2,83],87:[2,83],88:[2,83]},{4:[2,85],8:[2,85],9:[2,85],10:[2,85],11:[2,85],14:[2,85],67:[2,85],69:[2,85],71:[2,85],72:[2,85],73:[2,85],74:[2,85],75:[2,85],76:[2,85],79:[2,85],81:[2,85],82:[2,85],83:[2,85],85:[2,85],87:[2,85],88:[2,85]},{4:[2,92],8:[2,92],9:[2,92],10:[2,92],11:[2,92],14:[2,92],67:[2,92],69:[2,92],71:[2,92],72:[2,92],73:[2,92],74:[2,92],75:[2,92],76:[2,92],79:[2,92],81:[2,92],82:[2,92],83:[2,92],85:[2,92],87:[2,92],88:[2,92]},{5:236,6:4,7:5,8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:10,13:11,14:[1,12],67:[1,13],68:14,69:[1,15],71:[2,107],72:[1,16],73:[1,17],74:[1,18],75:[1,19],76:[1,20],79:[1,21],81:[1,22],82:[1,23],83:[1,24],84:237,85:[1,177],86:238,87:[1,178],88:[1,25]},{71:[2,106],84:239,85:[1,177],86:240,87:[1,178]},{71:[2,109]},{71:[2,111]},{71:[2,108]},{71:[2,110]}],\ndefaultActions: {2:[2,1],26:[2,2],169:[2,121],201:[2,41],213:[2,105],227:[2,119],237:[2,109],238:[2,111],239:[2,108],240:[2,110]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                this.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.2.1 */\nvar lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START\n/**/) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:                        return 8; \nbreak;\ncase 1:                        return 9; \nbreak;\ncase 2:                        return 10; \nbreak;\ncase 3:                        return 11; \nbreak;\ncase 4: this.pushState('rp');  return yy_.yytext; \nbreak;\ncase 5:                        return yy_.yytext; \nbreak;\ncase 6: this.popState();\n                                      this.pushState('rw');  return yy_.yytext; \nbreak;\ncase 7: this.popState();\n                                      this.pushState('r');   return 23; \nbreak;\ncase 8: this.pushState('r');   return 23; \nbreak;\ncase 9:                        return 25; \nbreak;\ncase 10: this.pushState('b');   return yy_.yytext; \nbreak;\ncase 11: this.popState();       return yy_.yytext; \nbreak;\ncase 12: this.pushState('p');   return yy_.yytext; \nbreak;\ncase 13: this.popState();       return yy_.yytext; \nbreak;\ncase 14: this.pushState('m');   return yy_.yytext; \nbreak;\ncase 15: this.popState();       return yy_.yytext; \nbreak;\ncase 16: this.popState();       return 4; \nbreak;\ncase 17: this.popState(); \nbreak;\ncase 18: /*ignore whitespace and \\n*/ \nbreak;\ncase 19:                        return yy_.yytext; \nbreak;\ncase 20:                        return yy_.yytext; \nbreak;\ncase 21:                        return yy_.yytext; \nbreak;\ncase 22:                        return 70; \nbreak;\ncase 23:                        return yy_.yytext.toUpperCase(); \nbreak;\ncase 24:                        return yy_.yytext; \nbreak;\ncase 25:                        return yy_.yytext; \nbreak;\ncase 26:                        return yy_.yytext; \nbreak;\ncase 27:                        return yy_.yytext; \nbreak;\ncase 28:                        return 64; \nbreak;\ncase 29:                        return 63; \nbreak;\ncase 30:                        return 65; \nbreak;\ncase 31:                        return 66; \nbreak;\ncase 32: this.pushState('bp');  return 67; \nbreak;\ncase 33: this.pushState('bp');  return 88; \nbreak;\ncase 34: this.pushState('bp');  return 87; \nbreak;\ncase 35:                        return 85; \nbreak;\ncase 36:                        return 71; \nbreak;\ncase 37: this.pushState('bp');  return 69;\nbreak;\ncase 38: this.pushState('bp');  return 72; \nbreak;\ncase 39: this.pushState('bp');  return 73; \nbreak;\ncase 40:                        return 82; \nbreak;\ncase 41:                        return 83; \nbreak;\ncase 42: this.pushState('bp');  return 74; \nbreak;\ncase 43: this.pushState('bp');  return 75; \nbreak;\ncase 44: this.pushState('bpm'); return 76; \nbreak;\ncase 45: this.pushState('bpm'); return 79; \nbreak;\ncase 46: this.pushState('bpm'); return 81; \nbreak;\ncase 47: this.popState();\n                                      this.pushState('p');   return 26; \nbreak;\ncase 48: this.popState();\n                                      this.pushState('pm');  return 26;\nbreak;\ncase 49:                        return 23; \nbreak;\ncase 50:                        return 39; \nbreak;\ncase 51: this.popState();       return 28; \nbreak;\ncase 52:                        return 89; \nbreak;\ncase 53:                        return 8; \nbreak;\ncase 54:                        return 4; \nbreak;\n}\n},\nrules: [/^(?:(\\\\\\$|\\\\#|[^\\$\\#])+)/,/^(?:#\\[\\[[\\s\\S]*?\\]\\]#)/,/^(?:##.*)/,/^(?:#\\*[\\s\\S]*?\\*#)/,/^(?:\\$(?=!?\\{?([a-zA-Z_][a-zA-Z0-9-_]*)))/,/^(?:!)/,/^(?:\\{)/,/^(?:([a-zA-Z_][a-zA-Z0-9-_]*))/,/^(?:([a-zA-Z_][a-zA-Z0-9-_]*))/,/^(?:\\.([a-zA-Z_][a-zA-Z0-9-_]*))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{)/,/^(?:\\})/,/^(?:$)/,/^(?:)/,/^(?:\\s+)/,/^(?::)/,/^(?:,)/,/^(?:\\.\\.)/,/^(?:in\\b)/,/^(?:true|false|null\\b)/,/^(?:==|!=|>=|<=|>|<)/,/^(?:&&|\\|\\||!)/,/^(?:[\\+\\-\\*\\/\\%])/,/^(?:=)/,/^(?:\\d+\\.\\d+)/,/^(?:\\d+)/,/^(?:\"(\\\\\"|[^\\\"])*\")/,/^(?:'(\\\\'|[^\\'])*')/,/^(?:#(\\{set\\}|set)((?=[ \\t]*\\()))/,/^(?:#(\\{if\\}|if)((?=[ \\t]*\\()))/,/^(?:#(\\{elseif\\}|elseif)((?=[ \\t]*\\()))/,/^(?:#(\\{else\\}|else(?!([a-zA-Z0-9-_]))))/,/^(?:#(\\{end\\}|end(?!([a-zA-Z0-9-_]))))/,/^(?:#(\\{foreach\\}|foreach)((?=[ \\t]*\\()))/,/^(?:#(\\{include\\}|include)((?=[ \\t]*\\()))/,/^(?:#(\\{parse\\}|parse)((?=[ \\t]*\\()))/,/^(?:#(\\{stop\\}|stop(?!([a-zA-Z0-9-_]))))/,/^(?:#(\\{break\\}|break(?!([a-zA-Z0-9-_]))))/,/^(?:#(\\{evaluate\\}|evaluate)((?=[ \\t]*\\()))/,/^(?:#(\\{define\\}|define)((?=[ \\t]*\\()))/,/^(?:#(\\{macro\\}|macro)((?=[ \\t]*\\()))/,/^(?:#(\\{([a-zA-Z_][a-zA-Z0-9-_]*)\\}|([a-zA-Z_][a-zA-Z0-9-_]*))((?=[ \\t]*\\()))/,/^(?:#@(\\{([a-zA-Z_][a-zA-Z0-9-_]*)\\}|([a-zA-Z_][a-zA-Z0-9-_]*))((?=[ \\t]*\\()))/,/^(?:[ \\t]*\\()/,/^(?:[ \\t]*\\(\\s*)/,/^(?:([a-zA-Z_][a-zA-Z0-9-_]*))/,/^(?:\\s*,\\s*)/,/^(?:\\s*\\))/,/^(?:\\s+)/,/^(?:[\\$\\#])/,/^(?:$)/],\nconditions: {\"rp\":{\"rules\":[5,6,7],\"inclusive\":false},\"rw\":{\"rules\":[8,15],\"inclusive\":false},\"r\":{\"rules\":[9,10,12,16,17],\"inclusive\":false},\"b\":{\"rules\":[4,10,11,12,14,18,20,21,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"bpm\":{\"rules\":[48],\"inclusive\":false},\"bp\":{\"rules\":[47],\"inclusive\":false},\"pm\":{\"rules\":[4,10,12,14,23,28,29,30,31,49,50,51,52],\"inclusive\":false},\"p\":{\"rules\":[4,10,12,13,14,18,20,22,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"m\":{\"rules\":[4,10,12,14,15,18,19,20,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,54],\"inclusive\":true}}\n};\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = velocity;\nexports.Parser = velocity.Parser;\nexports.parse = function () { return velocity.parse.apply(velocity, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/data-formatter.js":"var utilx = require('utilx')\nvar inspect = require('util').inspect\nvar STATS = require('./data-stats')\nvar logger = require('../logger')\n\n\n// expand raw data to intermediate format\nfunction expand(data) {\n  var rt\n\n  if (utilx.isObject(data)) {\n    rt = {}\n    Object.keys(data).forEach(function(k) {\n      // ignore return value derived from template\n      if (isRtVal(data, k)) return\n      innerExpand(data, k, rt)\n    })\n    return rt\n  }\n\n  if (utilx.isArray(data)) {\n    rt = []\n    data.forEach(function(v, k) {\n      innerExpand(data, k, rt)\n    })\n    return rt\n  }\n}\n\nfunction innerExpand(from, k, to/*private params*/, k2) {\n  var v = from[k]\n  var n\n\n  if (utilx.isFunction(v)) {\n    n = { __stats: STATS.CERTAIN_FUNC }\n    var rtKey = '__' + k + 'Return'\n\n    // derived from template\n    if (rtKey in from) {\n      n.__argc = v.length\n      innerExpand(from, rtKey, n, '__return')\n\n    // defined by user\n    } else {\n      n.__value = v\n    }\n\n  } else {\n    var goon = utilx.isObject(v) || utilx.isArray(v)\n    n = {\n      __stats: STATS.CERTAIN,\n      __value: goon ? expand(v) : v\n    }\n  }\n\n  to[k2 || k] = n\n}\n\n\n// restore intermediate data to normal format\nfunction clean(data) {\n  var rt\n  if (utilx.isObject(data)) {\n    rt = {}\n    Object.keys(data).forEach(function(k) {\n      var n = data[k]\n      var stats = n.__stats\n      if (stats === STATS.LEFT || stats === STATS.DEFINE) {\n        if (n.__origin) {\n          data[k] = n.__origin\n        } else {\n          return\n        }\n      }\n      innerClean(data, k, rt)\n    })\n    return rt\n  }\n\n  if (utilx.isArray(data)) {\n    rt = []\n    data.forEach(function(n, k) {\n      innerClean(data, k, rt)\n    })\n    return rt\n  }\n}\n\nvar argsStr = 'a, b, c, d, e, f'\n\nfunction innerClean(from, k, to/*private params*/, k2) {\n  var n = from[k]\n  var stats = n.__stats\n  var v = n.__value\n\n  if (stats === STATS.CERTAIN) {\n    if (utilx.isObject(v) || utilx.isArray(v)) {\n      v = clean(v)\n    }\n\n  } else if (stats === STATS.CERTAIN_FUNC) {\n    if ('__return' in n) {\n      var argc = n.__argc\n      var rtKey = '__' + k + 'Return'\n      v = eval('(function(' + argsStr.substr(0, 3 * argc - 2) + '){ return this.' + rtKey + ' })')\n\n      // let key precede rtKey\n      to[k2 || k] = v\n      innerClean(n, '__return', to, rtKey)\n      return\n    }\n\n  } else if (stats === STATS.UNCERTAIN) {\n    v = v || ''\n  }\n\n  to[k2 || k] = v\n}\n\n\nfunction tostr(data /* private params*/, indent) {\n  indent = indent || 2\n  var oldBr = '\\n' + utilx.generateLine(indent - 2, ' ')\n  var br = oldBr + '  '\n\n  if (utilx.isObject(data)) {\n    var keys = Object.keys(data)\n    var len = keys.length\n\n    var rt = '{'\n    keys.forEach(function(key, idx) {\n      var item = data[key]\n      var keyLiteral = key.indexOf('-') === -1 ? key : \"'\" + key + \"'\"\n      rt += br + keyLiteral + ': ' + tostr(item, indent + 2)\n      if (idx < len - 1) rt += ','\n    })\n    rt += oldBr + '}'\n    return rt\n  }\n\n  if (utilx.isArray(data)) {\n    var len = data.length\n    var rt = '['\n    data.forEach(function(item, idx) {\n      rt += br + tostr(item, indent + 2)\n      if (idx < len - 1) rt += ','\n    })\n    rt += oldBr + ']'\n    return rt\n  }\n\n  if (utilx.isFunction(data)) {\n    return data.toString()\n  }\n\n  if (utilx.isString(data)) {\n    return inspect(data)\n  }\n\n  return data\n}\n\n\n// generate intermedate template to dump the context\nfunction dump(data/* private params*/, literal, indent) {\n  indent = indent || 2\n  var oldBr = '\\n' + utilx.generateLine(indent - 2, ' ')\n  var br = oldBr + '  '\n\n  var isTop = literal ? false : true\n\n  var rt = ''\n  var head = isTop ? '' : '#if(' + literal + ')'\n  var tail = isTop ? '' : '#{else}undefined#end'\n\n  if (utilx.isObject(data)) {\n    var keys = Object.keys(data)\n    var len = keys.length\n\n    rt = head + '{'\n    keys.forEach(function(key, idx) {\n      var item = data[key]\n      var itemLiteral\n      var keyLiteral = key.indexOf('-') === -1 ? key : \"'\" + key + \"'\"\n\n      var funcName = isRtVal(data, key)\n      if (funcName) {\n        // won't dump for the return value of a method with params\n        if (data[funcName].length) {\n          rt += br + keyLiteral + ': ' + tostr(item, indent + 2)\n\n        } else {\n          itemLiteral = literal + '.' + funcName + '()'\n          rt += br + keyLiteral + ': ' + dump(item, itemLiteral, indent + 2)\n        }\n\n      } else {\n        itemLiteral = literal ? literal + '.' + key : '$!' + key\n        rt += br + keyLiteral + ': ' + dump(item, itemLiteral, indent + 2)\n      }\n\n      if (idx < len - 1) rt += ','\n    })\n\n    rt += oldBr + '}' + tail\n    return rt\n  }\n\n  if (utilx.isArray(data)) {\n    // NOTE\n    // if the itemLiteral is always the same\n    // $list1.list2 will cause an error\n    var itemLiteral = '$!item' + indent\n\n    rt = head + '['\n    rt += '#foreach(' + itemLiteral + ' in ' + literal + ')' +\n          '#if($velocityCount > 1),#end' + br + dump(data[0], itemLiteral, indent + 2) +\n          '#end'\n    rt += oldBr + ']' + tail\n    return rt\n  }\n\n  if (utilx.isFunction(data)) {\n    return data.toString()\n  }\n\n  if (utilx.isString(data)) {\n    if (data === '') {\n      return '\\'' + literal + '\\''\n    } else {\n      return inspect(data)\n    }\n  }\n\n  return literal\n}\n\n\n/*\n * data = {\n *   method0: function() { ... },\n *   method1: function(){ ... },\n *   __method1Return: { ... },\n *   __method2Return: { ... }\n * }\n *\n * isRtVal(data, 'method0') => undefined\n * isRtVal(data, '__method1Return') => 'method1'\n * isRtVal(data, '__method2Return') => undefined\n */\n\nvar rtReg = /^__([a-zA-Z0-9-_]+)Return$/\nfunction isRtVal(data, key) {\n  var match = rtReg.exec(key)\n  if (!match) return\n  var name = match[1]\n  if (name in data) return name\n  return\n}\n\n\nexports.expand = expand\nexports.clean = clean\nexports.tostr = tostr\nexports.dump = dump\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/engine-stack.js":"var logger = require('../logger')\n\nmodule.exports = {\n\n  pushContext: function(context) {\n    if (this.context) {\n      context.__parent = this.context\n    } else {\n      this.topContext = context\n    }\n    this.context = context\n    // logger.debug('Push context', this.context)\n  },\n\n  popContext: function() {\n    // logger.debug('Pop context', this.context)\n    if ('__parent' in this.context) {\n      this.context = this.context.__parent\n    } else {\n      ; delete this.context\n      ; delete this.topContext\n    }\n  },\n\n  pushTemplate: function(template) {\n    // logger.debug('Push template', template.raw)\n\n    // NOTE\n    // because of global macro and define\n    // a template may occurs more than one time in a template chain\n    // e.g.  ROOT<-A1<-B<-A2\n    // A1 and A2 are the same thing\n    // so when A2 is pushed to the chain\n    // A.__parent points to B\n    // we only use the chain top, so it dose't matter that A1.__parent is not right now\n    // when A2 is popped out\n    // we need A1.__parent points to ROOT\n    // so .__history is required to do this thing\n    template.__history = template.__history || []\n    template.__history.push(template.__parent)\n    template.__parent = this.template\n    template.__macro = template.__macro || {}\n    template.__define = template.__define || {}\n    this.template = template\n  },\n\n  popTemplate: function() {\n    // logger.debug('Pop template', this.template.raw)\n    var templ = this.template\n    var newTop = templ.__parent\n    templ.__parent = templ.__history.pop()\n    this.template = newTop\n  }\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/data-ref.js":"var utilx = require('utilx')\n\nvar common = require('../common')\nvar logger = require('../logger')\n\nvar STATS = require('./data-stats')\nvar BREAK = { __stats: STATS.BREAK }\n\nmodule.exports = {\n\n  Reference: function(node) {\n    var obj = node.object\n    var objr = this[obj.type](obj)\n\n    if (objr.__stats === STATS.DEFINE) return BREAK\n    return objr\n  },\n\n  Identifier: function(node) {\n    var name = node.name\n    var ctx = this.context\n    for (ctx; ctx; ctx = ctx.__parent) {\n      if (name in ctx) {\n        if (ctx[name].__stats === STATS.LEFT) {\n          return ctx[name].__value\n        } else {\n          return ctx[name]\n        }\n      }\n    }\n\n    this.topContext[name] = { __stats: STATS.UNCERTAIN }\n    return this.topContext[name]\n  },\n\n  Property: function(node) {\n    var isFn = node.__isFunction\n    var obj = node.object\n    var objr = this[obj.type](obj)\n    var stats = objr.__stats\n\n    // stats === STATS.LEFT is impossible\n\n    if (stats === STATS.BREAK) return BREAK\n    if (stats === STATS.DEFINE) return BREAK\n    if (stats === STATS.CERTAIN_FUNC) return BREAK\n\n    if (stats === STATS.UNCERTAIN) {\n      if (!isFn) objr.__stats = STATS.CERTAIN\n      objr.__value = {}\n    }\n\n    // stats === STATS.CERTAIN || STATS.UNCERTAIN\n    var o = objr.__value\n    var p = node.property.name\n\n    // NOTE\n    //\n    // $str.length()\n    // ^^^^^^^^^^^\n    //\n    // $arr.size()\n    // ^^^^^^^^^\n    //\n    // return of both references cannot go further\n    // so it is ok when $a is not a object, then BREAK\n    if (!utilx.isObject(o)) return BREAK\n\n    if (!(p in o)) o[p] = { __stats: STATS.UNCERTAIN }\n\n    if (o[p].__stats !== STATS.CERTAIN_FUNC && isFn) {\n      o[p].__parent = objr\n      o[p].__property = p\n    }\n\n    return o[p]\n  },\n\n  Index: function(node) {\n    var obj = node.object\n    var objr = this[obj.type](obj)\n    var stats = objr.__stats\n\n    // stats === STATS.LEFT is impossible\n\n    if (stats === STATS.BREAK) return BREAK\n    if (stats === STATS.DEFINE) return BREAK\n    if (stats === STATS.CERTAIN_FUNC) return BREAK\n\n    var prop = node.property\n    this[prop.type](prop)\n\n    if (stats === STATS.UNCERTAIN) {\n      if (common.isLiteralString(prop)) {\n        objr.__stats = STATS.CERTAIN\n        objr.__value = {}\n\n      } else if (prop.type === 'Integer') {\n        objr.__stats = STATS.CERTAIN\n        objr.__value = []\n\n      } else {\n        objr.__value = []\n      }\n    }\n\n    var o = objr.__value\n\n    if (common.isLiteralString(prop)) {\n      var p = prop.name\n      if (!utilx.isObject(o)) return BREAK\n      if (!o[p]) o[p] = { __stats: STATS.UNCERTAIN }\n      return o[p]\n\n    } else if (prop.type === 'Integer' || isCertainArray(objr)) {\n      var p = 0\n      if (!utilx.isArray(o)) return BREAK\n      if (!o[p]) o[p] = { __stats: STATS.UNCERTAIN }\n      return o[p]\n\n    } else {\n      return BREAK\n    }\n  },\n\n  Method: function(node) {\n    var callee = node.callee\n        callee.__isFunction = true\n    var calleer = this[callee.type](callee)\n    var stats = calleer.__stats\n\n    var args = node.arguments\n    var argsLen = args.length\n    for (var i = 0; i < argsLen; i++) {\n      var arg = args[i]\n      this[arg.type](arg)\n    }\n    var arg0\n    if (argsLen > 0) {\n      var temp = args[0]\n      if (common.isLiteralString(temp)) {\n        arg0 = temp.value\n      } else if (temp.type === 'Integer') {\n        arg0 = 0\n      }\n    }\n\n    // stats === STATS.LEFT is impossible\n\n    if (stats === STATS.BREAK) return BREAK\n    if (stats === STATS.DEFINE) return BREAK\n    if (stats === STATS.CERTAIN) return BREAK\n\n    if (stats === STATS.CERTAIN_FUNC) {\n      // defined by user\n      if ('__value' in calleer) {\n        return BREAK\n\n      // derived from template\n      } else {\n        return calleer.__return\n      }\n    }\n\n    //stats === STATS.UNCERTAIN\n    var parent = calleer.__parent\n    // NOTE\n    // from .Property, parent.__value must be a object\n    var pIsCertain = parent.__stats === STATS.CERTAIN\n    var prop = calleer.__property\n    ; delete calleer.__parent\n    ; delete calleer.__property\n\n    parent.__stats = STATS.CERTAIN\n    if (prop === 'length' && argsLen === 0 && !pIsCertain) {\n      parent.__value = ''\n\n    } else if (prop === 'size' && argsLen === 0 && !pIsCertain) {\n      parent.__value = []\n\n    } else if (prop === 'isEmpty' && argsLen === 0 && !pIsCertain) {\n      parent.__value = []\n\n    } else if (prop === 'entrySet' && argsLen === 0) {\n      delete parent.__value[prop]\n\n    } else if (prop === 'keySet' && argsLen === 0) {\n      delete parent.__value[prop]\n\n    } else if (prop === 'get' && argsLen == 1) {\n      delete parent.__value[prop]\n\n      if (!pIsCertain && utilx.isInteger(arg0)) {\n        parent.__value = [{ __stats: STATS.UNCERTAIN }]\n        return parent.__value[0]\n      } else if (utilx.isString(arg0)) {\n        parent.__value[arg0] = parent.__value[arg0] || { __stats: STATS.UNCERTAIN }\n        return parent.__value[arg0]\n      }\n\n    } else if (prop.indexOf('get') === 0 && prop.length > 3 && argsLen === 0) {\n      delete parent.__value[prop]\n\n      var p = extractProp(prop)\n      parent.__value[p] = parent.__value[p] || { __stats: STATS.UNCERTAIN }\n      return parent.__value[p]\n\n    } else if (prop.indexOf('is') === 0 && prop.length > 2 && argsLen === 0) {\n      delete parent.__value[prop]\n\n      var p = extractProp(prop)\n      parent.__value[p] = parent.__value[p] || {\n        __stats: STATS.CERTAIN,\n        __value: true\n      }\n      return parent.__value[p]\n\n    // it is really a function\n    } else {\n      calleer.__stats = STATS.CERTAIN_FUNC\n      calleer.__argc = argsLen\n      calleer.__return = { __stats: STATS.UNCERTAIN }\n      return calleer.__return\n    }\n\n    return BREAK\n  }\n}\n\n\nfunction extractProp(s) {\n  s = s.replace(/^(get|set|is)/, '')\n  return s[0].toLowerCase() + s.substr(1)\n}\n\n\nfunction isCertainArray(o) {\n  return o.__stats === STATS.CERTAIN && utilx.isArray(o.__value)\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/data-expr.js":"var utilx = require('utilx')\n\nvar logger = require('../logger')\nvar common = require('../common')\nvar STATS = require('./data-stats')\n\n\nmodule.exports = {\n  Range: function(node) {\n    var start = node.start\n    this[start.type](start)\n\n    var end = node.end\n    this[end.type](end)\n  },\n\n  List: function(node) {\n    for (var i = 0; i < node.elements.length; i++) {\n      var el = node.elements[i]\n      this[el.type](el)\n    }\n  },\n\n  Map: function(node) {\n    for (var i = 0; i < node.mapItems.length; i++) {\n      var mapItem = node.mapItems[i]\n\n      var prop = mapItem.property\n      this[prop.type](prop)\n\n      var value = mapItem.value\n      this[value.type](value)\n    }\n  },\n\n  UnaryExpr: function(node) {\n    var arg = node.argument\n    this[arg.type](arg)\n  },\n\n  BinaryExpr: function(node) {\n    var left = node.left\n    this[left.type](left)\n\n    var right = node.right\n    this[right.type](right)\n  },\n\n  AssignExpr: function(node) {\n    var left = node.left\n    if (!common.isId(left)) {\n      this.throwError('Left operand of assignment expression is not an identifier.', left.pos)\n    }\n    var name = left.object.name\n\n    var right = node.right\n    var rightr = this[right.type](right)\n\n    var cur = this.topContext[name]\n    var origin = common.getOrigin(cur)\n\n    this.topContext[name] = {\n      __stats: STATS.LEFT,\n      __value: rightr || { __stats: STATS.BREAK },\n      __origin: origin\n    }\n  },\n\n  DString: function(node) {\n    this.Extract(null, {\n      isFile: false,\n      raw: node.value,\n      offset: this.template.offset || node.pos\n    })\n  },\n\n\n  Boolean: noop,\n  Null: noop,\n  Integer: noop,\n  Float: noop,\n  String: noop,\n  Text: noop,\n  BText: noop,\n\n  Comment: noop,\n  BComment: noop\n}\n\n\nfunction noop(node) {}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/data/data-direc.js":"var fs = require('fs')\nvar utilx = require('utilx')\n\nvar common = require('../common')\nvar logger = require('../logger')\n\nvar STATS = require('./data-stats')\nvar BREAK = { __stats: STATS.BREAK }\n\n\nmodule.exports = {\n  If: function(node) {\n    var test = node.test\n    this[test.type](test)\n\n    var cons = node.consequent\n    cons && this[cons.type](cons)\n\n    var alter = node.alternate\n    alter && this[alter.type](alter)\n  },\n\n  Foreach: function(node) {\n    var that = this\n    var left = node.left\n    var leftr\n    if (!common.isId(left)) {\n      this.throwError('Left operand of #foreach is not an identifier.', left.pos)\n    }\n    var name = left.object.name\n\n    var right = node.right\n    var rightr = this[right.type](right)\n    var o\n\n    if (rightr) {\n      var stats = rightr.__stats\n      if (stats !== STATS.CERTAIN && stats !== STATS.UNCERTAIN) {\n        leftr = BREAK\n\n      } else {\n        if (stats === STATS.UNCERTAIN) {\n          rightr.__stats = STATS.CERTAIN\n          rightr.__value = []\n        }\n\n        o = rightr.__value\n        if (utilx.isArray(o)) {\n          if (!node.body) return\n          if (!o[0]) o[0] = { __stats: STATS.UNCERTAIN }\n          leftr = {\n            __stats: STATS.LEFT,\n            __value: o[0]\n          }\n        } else {\n          leftr = BREAK\n        }\n      }\n\n    } else {\n      leftr = BREAK\n    }\n\n    var ctx = {\n          foreach: BREAK,\n          velocityCount: BREAK\n        }\n        ctx[name] = leftr\n    this.pushContext(ctx)\n\n    if (leftr.__stats === STATS.BREAK) {\n      this[node.body.type](node.body)\n\n    } else {\n      o.forEach(function(item, idx) {\n        leftr.__value = o[idx]\n        that[node.body.type](node.body)\n      })\n    }\n\n    this.popContext()\n  },\n\n  Include: function(node) {\n    var args = node.arguments\n\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i]\n      this[arg.type](arg)\n    }\n  },\n\n  Parse: function(node) {\n    var arg = node.argument\n    this[arg.type](arg)\n\n    if (!common.isLiteralString(arg)) return\n\n    var relPath = arg.value\n    if (!utilx.isNonEmptyString(relPath))\n      this.throwError('Param of #parse is not a non-empty string.', arg.pos)\n\n    var fullPath = common.getFullPath(relPath, this.cfg.root)\n    if (!fullPath)\n      this.throwError ('Param of #parse not exists or is not subpath of root.', arg.pos)\n\n    this.Extract(null, {\n      isFile: true,\n      raw: relPath,\n      relPath: relPath,\n      fullPath: fullPath\n    })\n  },\n\n  Evaluate: function(node) {\n    var arg = node.argument\n    this[arg.type](arg)\n\n    if (!arg.type === 'String') return\n    this.Extract(null, {\n      isFile: false,\n      raw: arg.value,\n      offset: this.template.offset || arg.pos\n    })\n  },\n\n  // only analyze define\n  Define: function(node) {\n    if (!common.isId(node.name)) {\n      this.throwError('Param of #define is not an identifier.', node.name.pos)\n    }\n    var name = node.name.object.name\n\n    var cur = this.topContext[name]\n    var origin = common.getOrigin(cur)\n\n    this.topContext[name] = {\n      __stats: STATS.DEFINE,\n      __origin: origin\n    }\n\n    if (!node.body) return\n    var body = node.body\n    this[body.type](body)\n  },\n\n  Macro: function(node, templ) {\n    node.__arguments = []\n    var args = node.arguments\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i]\n      if (!common.isId(arg)) {\n        this.throwError('Param of #macro is not an identifier.', arg.pos)\n      }\n      node.__arguments.push(arg.object.name)\n    }\n\n    if (templ) {\n      node.__template = templ\n      this.macro[node.name] = node\n    } else {\n      this.template.__macro[node.name] = node\n    }\n  },\n\n  MacroCall: function(node) {\n    var name = node.name\n\n    if (name === 'cmsparse') return\n\n    var definition = this.template.__macro[name] || this.macro[name]\n    if (!definition) {\n      logger.warn('Call undefined macro <', name, '>')\n      return\n    }\n    if (!definition.body) return\n\n    var definitionTempl = name in this.template.__macro ? this.template : definition.__template\n\n    var ctx = {}\n    var args = node.arguments\n    var argsLen = args.length\n    var keys = definition.__arguments\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n\n      if (i < argsLen) {\n        var arg = args[i]\n        var argr = this[arg.type](arg)\n        ctx[key] = {\n          __stats: STATS.LEFT,\n          __value: argr || BREAK\n        }\n\n      } else {\n        ctx[key] = {\n          __stats: STATS.LEFT,\n          __value: BREAK\n        }\n      }\n    }\n\n    if (node.isBlock && node.body) {\n      var body = node.body\n      var bodyr = this[body.type](body)\n      ctx.bodyContent = bodyr || BREAK\n    }\n\n    this.pushContext(ctx)\n    this.pushTemplate(definitionTempl)\n    this[definition.body.type](definition.body)\n    this.popTemplate()\n    this.popContext()\n\n  },\n\n\n  Stop: function(node) {},\n  Break: function(node) {}\n}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/index.js":"var fs = require('fs')\nvar path = require('path')\nvar utilx = require('utilx')\n\nvar logger = require('../logger')\nvar common = require('../common')\nvar handleCfg = require('../handle-cfg')\n\nvar parser = require('./velocity')\nvar STATS = require('./engine-stats')\n\nfunction Engine(cfg) {\n  this.cfg = handleCfg(cfg)\n\n  // global macro\n  this.macro = {}\n  if (this.cfg.macro) {\n    this.GMacro(this.cfg.macro)\n  }\n}\n\n// process global macro\nEngine.prototype.GMacro = function(macro) {\n  var that = this\n\n  macro.forEach(function(m) {\n    var content = m.isFile ? utilx.readFile(m.fullPath, that.cfg.encoding) : m.raw\n    var ast = parser.parse(content)\n    m.lines = content.split(/\\r?\\n/)\n    ast.body.forEach(function(node){\n      if (node.type === 'Macro') {\n        that.Macro(node, m)\n      }\n    })\n  })\n\n  // logger.debug('Macro', this.macro)\n}\n\n////////////////////////////\n// the only public method //\n////////////////////////////\nEngine.prototype.render = function(context) {\n  if (!context) {\n    logger.error('context is required.')\n  }\n\n  context = common.perfectContext(context)\n\n  var result = this.Render(context)\n\n  if (result.stats === STATS.SUCCESS || result.stats === STATS.STOP) {\n    if (this.cfg.output) fs.writeFileSync(this.cfg.output, result.value)\n    return result.value\n\n  } else {\n    var origin = result.stack[0]\n    var originTempl = origin[0]\n    var originPos = origin[1]\n    var originLine = originTempl.lines[originPos.first_line - 1]\n    var stack = result.stack.map(function(item){\n      return common.loc2str(item)\n    })\n\n    var e = new Error(result.message || 'Illegal #break.')\n        e.stack = common.markError(originLine, originPos) +\n                  'Error: ' + e.message +\n                  '\\n    at ' +\n                  stack.join('\\n    at ')\n    throw e\n  }\n}\n\nEngine.prototype.Render = function(context, template) {\n  var that = this\n  var templ = template || this.cfg.template\n\n  // some time may not pass context in\n  // e.g. called by .DString()\n  if (context) this.pushContext(context)\n  // very time call this method will pass template in\n  // except the first time called by .render()\n  this.pushTemplate(templ)\n\n  var content = templ.raw\n  if (templ.isFile) {\n    content = utilx.readFile(templ.fullPath, this.cfg.encoding)\n  }\n\n  templ.lines = content.split(/\\r?\\n/)\n\n  var rt\n  try {\n    var node = parser.parse(content)\n    rt = this[node.type](node)\n  } catch (e) {\n    rt = this.initFailInfo(e.message, common.getPosFromParserError(e))\n  }\n\n  this.popTemplate()\n  if (context) this.popContext()\n\n  return rt\n}\n\nEngine.prototype.Statements = function(node) {\n  var result = this.initSuccessInfo()\n\n  for (var i = 0; i < node.body.length; i++) {\n    var cn = node.body[i]\n    var cr = this[cn.type](cn)\n\n    if (cr.stats === STATS.SUCCESS) {\n      if (cn.type === 'Reference' && (cr.value === undefined || cr.value === null)) {\n        if (!cr.silent) {\n          result.value += cr.literal\n        }\n\n      } else {\n        var v = cr.value\n        // capture error thrown by toString method\n        if (v && utilx.isFunction(v.toString)) {\n          try {\n            v = v.toString()\n          } catch (e) {\n            var newCr = this.initFailInfo('An error thrown by toString method\\n\\n' + e.stack + '\\n', cn.pos)\n            this.mergeResult(result, newCr)\n            break\n          }\n        }\n        result.value += v\n      }\n\n    } else {\n      this.mergeResult(result, cr)\n      break\n    }\n  }\n\n  return result\n}\n\n\nutilx.mix(\n  Engine.prototype,\n  require('./engine-stack'),\n  require('./engine-ref'),\n  require('./engine-expr'),\n  require('./engine-direc')\n)\n\n\n// below are some assistant methods\nEngine.prototype.initSuccessInfo = function() {\n  return {\n    stats: STATS.SUCCESS,\n    value: ''\n  }\n}\n\nEngine.prototype.initFailInfo = function(msg, pos) {\n  return {\n    stats: STATS.FAIL,\n    value: '',\n    message: msg,\n    stack: [common.getRealLoc([this.template, pos])]\n  }\n}\n\n// merge not successful result\nEngine.prototype.mergeResult = function(target, src) {\n  target.stats = src.stats\n  target.value += src.value\n  target.stack = src.stack\n  if (src.stats === STATS.FAIL)\n    target.message = src.message\n}\n\nmodule.exports = Engine\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/engine-stats.js":"module.exports = {\n  STOP: 'STOP',\n  BREAK: 'BREAK',\n  FAIL: 'FAIL',\n  SUCCESS: 'SUCCESS'\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/engine-ref.js":"var utilx = require('utilx')\n\nvar common = require('../common')\nvar logger = require('../logger')\nvar STATS = require('./engine-stats')\n\n\nmodule.exports = {\n\n  Reference: function(node) {\n    // call define\n    if (common.isId(node)) {\n      var name = node.object.name\n      if (name in this.template.__define) {\n        var def = this.template.__define[name]\n        var result = this[def.type](def)\n        if (result.stats !== STATS.SUCCESS) {\n          // at where the #define is called\n          result.stack.push(common.getRealLoc([this.template, node.pos]))\n        }\n        return result\n      }\n    }\n\n    var obj = node.object\n    var objr = this[obj.type](obj)\n\n    if (objr.stats !== STATS.SUCCESS) return objr\n\n    var v = objr.value\n    if (v === undefined || v === null) {\n      var result = {\n        stats: STATS.SUCCESS,\n        value: v,\n        silent: node.silent\n      }\n      if (!node.silent) result.literal = common.extractContent(this.template.lines, node.pos)\n      return result\n    } else {\n      return objr\n    }\n  },\n\n  Identifier: function(node) {\n    var v\n    var name = node.name\n    var ctx = this.context\n    for (ctx; ctx; ctx = ctx.__parent) {\n      if (name in ctx) {\n        v = ctx[name]\n        break\n      }\n    }\n    return {\n      stats: STATS.SUCCESS,\n      value: v\n    }\n  },\n\n  Prop: function(node) {\n    return {\n      stats: STATS.SUCCESS,\n      value: node.name\n    }\n  },\n\n  Property: PropIdx,\n  Index: PropIdx,\n\n  Method: function(node) {\n    var callee = node.callee\n    var calleer = this[callee.type](callee)\n\n    if (calleer.stats !== STATS.SUCCESS) return calleer\n\n    var args = node.arguments\n    var argsv = []\n\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i]\n      var argr = this[arg.type](arg)\n\n      if (argr.stats !== STATS.SUCCESS) return argr\n      argsv.push(argr.value)\n    }\n\n    if (!utilx.isFunction(calleer.value)) {\n      var o = calleer.object\n      var p = calleer.property\n      var l = argsv.length\n\n      // string.length() -> string.length\n      if (utilx.isString(o) && p === 'length' && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: calleer.value\n        }\n      }\n\n      // array.size() -> array.length\n      if (utilx.isArray(o) && p === 'size' && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: o.length\n        }\n      }\n\n      // array.isEmpty() -> !array.length\n      if (utilx.isArray(o) && p === 'isEmpty' && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: !o.length\n        }\n      }\n\n      // object.entrySet() -> [{key: k, value: v}, ...]\n      if (utilx.isObject(o) && p === 'entrySet' && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: Object.keys(o).map(function(k) {\n            return {\n              key: k,\n              value: o[k]\n            }\n          })\n        }\n      }\n\n      // object.keySet() -> [key1, key2, ...]\n      if (utilx.isObject(o) && p === 'keySet' && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: Object.keys(o)\n        }\n      }\n\n\n      var isArrOrObj = utilx.isArray(o) || utilx.isObject(o)\n      var arg0 = argsv[0]\n      var arg1 = argsv[1]\n\n      // array.get(idx) -> array[idx]\n      // object.get(key) -> object[key]\n      if (isArrOrObj && p === 'get' && l === 1 && validateProp(arg0)) {\n        return {\n          stats: STATS.SUCCESS,\n          value: o[arg0]\n        }\n      }\n\n      // object.getKey() -> object[key]\n      if (isArrOrObj && p.indexOf('get') === 0 && p.length > 3 && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: o[extractProp(p)]\n        }\n      }\n\n      // array.set(idx, value) -> array[idx] = value\n      // object.set(key, value) -> object[key] = value\n      // if (isArrOrObj && p === 'set' && l === 2 && validateProp(arg0)) {\n      //   o[arg0] = arg1\n      //   return this.initSuccessInfo()\n      // }\n\n      // array.setIdx(value) -> array[idx] = value\n      // object.setKey(value) -> object[key] = value\n      // if (isArrOrObj && p.indexOf('set') === 0 && p.length > 3 && l === 1) {\n      //   o[extractProp(p)] = arg0\n      //   return this.initSuccessInfo()\n      // }\n\n      // object.isKey() -> object[key]\n      if (utilx.isObject(o) && p.indexOf('is') === 0 && p.length > 2 && l === 0) {\n        return {\n          stats: STATS.SUCCESS,\n          value: !!o[extractProp(p)]\n        }\n      }\n\n      return {\n        stats: STATS.SUCCESS,\n        value: undefined\n      }\n    }\n\n    try {\n      var result = calleer.value.apply(calleer.object, argsv)\n      // let return of set method be empty string\n      if (result === undefined && calleer.property.indexOf('set') === 0) result = ''\n      return {\n        stats: STATS.SUCCESS,\n        value: result\n      }\n    } catch (e) {\n      return this.initFailInfo('Function calling error: ' + e.message, node.pos)\n    }\n  }\n}\n\n\nfunction PropIdx(node) {\n  var obj = node.object\n  var objr = this[obj.type](obj)\n  var objv = objr.value\n\n  if (objr.stats !== STATS.SUCCESS) return objr\n\n  var prop = node.property\n  var propr = this[prop.type](prop)\n  var propv = propr.value\n\n  if (propr.stats !== STATS.SUCCESS) return propr\n  if (!validateProp(propr.value)) return this.initSuccessInfo()\n\n  return {\n    stats: STATS.SUCCESS,\n    value: (objv || objv === '') ? objv[propv] : undefined,\n    object: objv,\n    property: propv\n  }\n}\n\n\nfunction validateProp(v) {\n  if (utilx.isInteger(v) && v >=0) return true\n  if (utilx.isString(v) && v) return true\n  return false\n}\n\nfunction extractProp(v) {\n  v = v.replace(/^(get|set|is)/, '')\n  return v[0].toLowerCase() + v.substr(1)\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/engine-expr.js":"var utilx = require('utilx')\n\nvar logger = require('../logger')\nvar STATS = require('./engine-stats')\n\n\nmodule.exports = {\n  Range: function(node) {\n    var start = node.start\n    var startr = this[start.type](start)\n    if (startr.stats !== STATS.SUCCESS) return startr\n    if (!utilx.isInteger(startr.value)) {\n      return this.initFailInfo('Start of range is not an integer.', start.pos)\n    }\n\n    var end = node.end\n    var endr = this[end.type](end)\n\n    if (endr.stats !== STATS.SUCCESS) return endr\n    if (!utilx.isInteger(endr.value))\n      return this.initFailInfo('End of range is not an integer.', end.pos)\n\n    return {\n      stats: STATS.SUCCESS,\n      value: generateList(startr.value, endr.value)\n    }\n  },\n\n  List: function(node) {\n    var list = []\n    for (var i = 0; i < node.elements.length; i++) {\n      var el = node.elements[i]\n      var elr = this[el.type](el)\n\n      if (elr.stats !== STATS.SUCCESS) return elr\n      list.push(elr.value)\n    }\n    return {\n      stats: STATS.SUCCESS,\n      value: list\n    }\n  },\n\n  Map: function(node) {\n    var map = {}\n\n    for (var i = 0; i < node.mapItems.length; i++) {\n      var mapItem = node.mapItems[i]\n\n      var prop = mapItem.property\n      var propr = this[prop.type](prop)\n\n      if (propr.stats !== STATS.SUCCESS) return propr\n      if (!utilx.isNonEmptyString(propr.value))\n        return this.initFailInfo('Key of map is not a non-empty string.', prop.pos)\n\n      var value = mapItem.value\n      var valuer = this[value.type](value)\n\n      if (valuer.stats !== STATS.SUCCESS) return valuer\n      map[propr.value] = valuer.value\n    }\n\n    return {\n      stats: STATS.SUCCESS,\n      value: map\n    }\n  },\n\n  UnaryExpr: function(node) {\n    var arg = node.argument\n    var argr = this[arg.type](arg)\n\n    if (argr.stats !== STATS.SUCCESS) return argr\n\n    return {\n      stats: STATS.SUCCESS,\n      value: !argr.value\n    }\n  },\n\n  BinaryExpr: function(node) {\n    var left = node.left\n    var leftr = this[left.type](left)\n\n    if (leftr.stats !== STATS.SUCCESS) return leftr\n\n    var leftv = leftr.value\n    var op = node.operator\n\n    if (leftv && op === '||') {\n      return {\n        stats: STATS.SUCCESS,\n        value: true\n      }\n    }\n    if (!leftv && op === '&&') {\n      return {\n        stats: STATS.SUCCESS,\n        value: false\n      }\n    }\n\n    var right = node.right\n    var rightr = this[right.type](right)\n\n    if (rightr.stats !== STATS.SUCCESS) return rightr\n\n    var v\n    var rightv = rightr.value\n\n    if      (op === '*')  { v = leftv * rightv }\n    else if (op === '/')  {\n      if (rightv === 0) {\n        return this.initFailInfo('Right operand of division is zero.', right.pos)\n      }\n      v = leftv / rightv\n    }\n    else if (op === '%')  {\n      if (rightv === 0) {\n        return this.initFailInfo('Right operand of modulo is zero.', right.pos)\n      }\n      v = leftv % rightv\n    }\n    else if (op === '+')  { v = leftv +  rightv }\n    else if (op === '-')  { v = leftv -  rightv }\n    else if (op === '>=') { v = leftv >= rightv }\n    else if (op === '>')  { v = leftv >  rightv }\n    else if (op === '<=') { v = leftv <= rightv }\n    else if (op === '<')  { v = leftv <  rightv }\n    else if (op === '==') { v = leftv == rightv }\n    else if (op === '!=') { v = leftv != rightv }\n    else if (op === '&&') { v = leftv && rightv }\n    else if (op === '||') { v = leftv || rightv }\n\n    return {\n      stats: STATS.SUCCESS,\n      value: v\n    }\n  },\n\n  AssignExpr: function(node) {\n    var left = node.left\n    if (left.object.type !== 'Identifier') {\n      return this.initFailInfo('Left operand of assignment expression is not an identifier.', left.pos)\n    }\n    var property = left.object.name\n\n    var right = node.right\n    var rightr = this[right.type](right)\n    if (rightr.stats !== STATS.SUCCESS) return rightr\n\n    this.topContext[property] = rightr.value\n\n    return this.initSuccessInfo()\n  },\n\n  DString: function(node) {\n    return this.Render(null, {\n      isFile: false,\n      raw: node.value,\n      offset: this.template.offset || node.pos\n    })\n  },\n\n\n  Boolean: literal,\n  Null: literal,\n  Integer: literal,\n  Float: literal,\n  String: literal,\n  Text: literal,\n  BText: literal,\n\n  Comment: empty,\n  BComment: empty\n}\n\nfunction literal(node) {\n  return {\n    stats: STATS.SUCCESS,\n    value: node.value\n  }\n}\n\nfunction empty(node) {\n  return {\n    stats: STATS.SUCCESS,\n    value: ''\n  }\n}\n\n// [0..3] -> [0, 1, 2, 3]\nfunction generateList(start, end) {\n  var rt = []\n  var sign = start <= end ? 1 : -1\n  var i\n  for (i = start; (i - end) * sign <= 0; i += sign) {\n    rt.push(i)\n  }\n  return rt\n}\n\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/engine-direc.js":"var fs = require('fs')\nvar utilx = require('utilx')\n\nvar common = require('../common')\nvar logger = require('../logger')\nvar STATS = require('./engine-stats')\n\n\nmodule.exports = {\n  If: function(node) {\n    var test = node.test\n    var testr = this[test.type](test)\n\n    if (testr.stats !== STATS.SUCCESS) return testr\n\n    if (testr.value && node.consequent) {\n      return this[node.consequent.type](node.consequent)\n    } else if (!testr.value && node.alternate) {\n      return this[node.alternate.type](node.alternate)\n    } else {\n      return this.initSuccessInfo()\n    }\n  },\n\n  Foreach: function(node) {\n    var left = node.left\n    if (!isId(left)) {\n      return this.initFailInfo('Left operand of #foreach is not an identifier.', left.pos)\n    }\n\n    var right = node.right\n    var rightr = this[right.type](right)\n\n    if (rightr.stats !== STATS.SUCCESS) return rightr\n\n    var list = rightr.value\n    if (!utilx.isArray(list)) return this.initSuccessInfo()\n    if (!node.body) return this.initSuccessInfo()\n\n    var result = this.initSuccessInfo()\n    var ctx = {foreach: {}}\n    this.pushContext(ctx)\n\n    for (var i = 0; i < list.length; i++) {\n      ctx[left.object.name] = list[i]\n      ctx.foreach.index = i\n      ctx.foreach.count = ctx.velocityCount = i + 1\n      ctx.foreach.hasNext = i < list.length - 1\n\n      var cr = this[node.body.type](node.body)\n      if (cr.stats === STATS.SUCCESS) {\n        result.value += cr.value\n      } else if (cr.stats === STATS.BREAK) {\n        result.value += cr.value\n        break\n      } else {\n        this.mergeResult(result, cr)\n        break\n      }\n    }\n\n    this.popContext()\n    return result\n  },\n\n  Include: function(node) {\n    var args = node.arguments\n    var result = this.initSuccessInfo()\n\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i]\n      var argr = this[arg.type](arg)\n\n      if (argr.stats !== STATS.SUCCESS) {\n        this.mergeResult(result, argr)\n        break\n      }\n\n      var relPath = argr.value\n      if (!utilx.isNonEmptyString(relPath)) {\n        var fail =  this.initFailInfo('Param of #include is not a non-empty string.', arg.pos)\n        this.mergeResult(result, fail)\n        break\n      }\n\n      var fullPath = common.getFullPath(relPath, this.cfg.root)\n      if (fullPath) {\n        result.value += utilx.readFile(fullPath, this.cfg.encoding)\n      } else {\n        var fail = this.initFailInfo('Param of #include not exists or is not subpath of root.', arg.pos)\n        this.mergeResult(result, fail)\n        break\n      }\n    }\n    return result\n  },\n\n  Parse: function(node) {\n    var arg = node.argument\n    var argr = this[arg.type](arg)\n\n    if (argr.stats !== STATS.SUCCESS) return argr\n\n    var relPath = argr.value\n    if (!utilx.isNonEmptyString(relPath))\n      return this.initFailInfo('Param of #parse is not a non-empty string.', arg.pos)\n\n    var fullPath = common.getFullPath(relPath, this.cfg.root)\n    if (fullPath) {\n      var result = this.Render(null, {\n        isFile: true,\n        raw: relPath,\n        relPath: relPath,\n        fullPath: fullPath\n      })\n      if (result.stats !== STATS.SUCCESS) {\n        result.stack.push(common.getRealLoc([this.template, node.pos]))\n      }\n      return result\n    } else {\n      return this.initFailInfo('Param of #parse not exists or is not subpath of root.', arg.pos)\n    }\n  },\n\n  Evaluate: function(node) {\n    var arg = node.argument\n    var argr = this[arg.type](arg)\n\n    if (argr.stats !== STATS.SUCCESS) return argr\n\n    var v = argr.value\n    if (typeof v !== 'string')\n      return this.initFailInfo('Param of #evaluate is not a string.', node.pos)\n\n    if (!v) return this.initSuccessInfo()\n\n    return this.Render(null, {\n      ifFile: false,\n      raw: v,\n      offset: this.template.offset || arg.pos\n    })\n  },\n\n  Define: function(node) {\n    var name = node.name\n\n    if (!isId(name)) {\n      return this.initFailInfo('Param of #define is not an identifier.', name.pos)\n    }\n\n    this.template.__define[name.object.name] = node.body\n    return this.initSuccessInfo()\n  },\n\n  Macro: function(node, templ) {\n    node.__arguments = []\n    var args = node.arguments\n    for (var i = 0; i < args.length; i++) {\n      var arg = args[i]\n      if (!isId(arg)) {\n        return this.initFailInfo('Param of #macro is not an identifier.', arg.pos)\n      }\n      node.__arguments.push(arg.object.name)\n    }\n\n    // global\n    if (templ) {\n      node.__template = templ\n      this.macro[node.name] = node\n\n    // local\n    } else {\n      this.template.__macro[node.name] = node\n    }\n\n    return this.initSuccessInfo()\n  },\n\n  MacroCall: function(node) {\n    var name = node.name\n\n    if (name === 'cmsparse') {\n      return this.Cmsparse(node)\n    }\n\n    var definition = this.template.__macro[name] || this.macro[name]\n    if (!definition) {\n      return this.initFailInfo('Call undefined macro.', node.pos)\n    }\n    var definitionTempl = name in this.template.__macro ? this.template : definition.__template\n\n    if (!definition.body) return this.initSuccessInfo()\n\n    var ctx = {}\n    var args = node.arguments\n    var argsLen = args.length\n    var keys = definition.__arguments\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i]\n\n      if (i < argsLen) {\n        var arg = args[i]\n        var argr = this[arg.type](arg)\n\n        if (argr.stats !== STATS.SUCCESS) return argr\n        ctx[key] = argr.value\n\n      } else {\n        ctx[key] = undefined\n      }\n    }\n\n    if (node.isBlock && node.body) {\n      var body = node.body\n      var bodyr = this[body.type](body)\n      if (bodyr.stats !== STATS.SUCCESS) return bodyr\n      ctx.bodyContent = bodyr.value\n    }\n\n    this.pushContext(ctx)\n    this.pushTemplate(definitionTempl)\n    var result = this[definition.body.type](definition.body)\n    this.popTemplate()\n    this.popContext()\n\n    if (result.stats !== STATS.SUCCESS) {\n      // at where the macro is called\n      result.stack.push([this.template, node.pos])\n    }\n\n    return result\n  },\n\n\n  Stop: function(node) {\n    return {\n      stats: STATS.STOP,\n      value: '',\n      stack: [common.getRealLoc([this.template, node.pos])]\n    }\n  },\n\n  Break: function(node) {\n    return {\n      stats: STATS.BREAK,\n      value: '',\n      stack: [common.getRealLoc([this.template, node.pos])]\n    }\n  },\n\n  // special for alipay's cms\n  Cmsparse: function(node) {\n    var arg = node.arguments[0]\n    var argr = this[arg.type](arg)\n\n    if (argr.stats !== STATS.SUCCESS) return argr\n\n    var relPath = argr.value\n    if (!utilx.isNonEmptyString(relPath))\n      return this.initFailInfo('Param of #cmsparse is not a non-empty string.', arg.pos)\n\n    var fullPath = common.getFullPath(relPath, this.cfg.root)\n    if (fullPath) {\n      var result = this.Render(null, {\n        isFile: true,\n        raw: relPath,\n        relPath: relPath,\n        fullPath: fullPath\n      })\n      if (result.stats !== STATS.SUCCESS) {\n        result.stack.push([this.template, node.pos])\n      }\n      return result\n\n    } else {\n      return this.initFailInfo('Param of #cmsparse not exists or is not subpath of root.', arg.pos)\n    }\n  }\n}\n\n\nfunction isId(node) {\n  return node.object.type === 'Identifier'\n}\n\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/dep/index.js":"var scan = require('./scan')\nvar render = require('./render')\nvar handleCfg = require('../handle-cfg')\n\nmodule.exports = function(cfg, needRender) {\n  cfg = handleCfg(cfg)\n  var data = scan(cfg)\n  render(data, cfg.template.fullPath, cfg.reverse)\n  return data\n}\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/dep/scan.js":"var fs = require('fs')\nvar path = require('path')\nvar utilx = require('utilx')\n\nvar logger = require('../logger')\nvar common = require('../common')\n\n// files waiting for scan\nvar QUEUE = {}\n\n// scanned files\nvar FILES = {/*\n  fullPath: {\n    root: 'vm root',\n    relPath: 'path relative to root',\n    fullPath: 'full path',\n    stat: 0(normal), 1(notExists), 2(hasVariable),\n    parents: {fullPath: true, ...},\n    children: {fullPath: true, ...}\n  },\n  ...\n*/}\n\n\nfunction scan(fullPath, cfg) {\n  if (fullPath in FILES) {\n    delete QUEUE[fullPath]\n    return\n  }\n\n  FILES[fullPath] = QUEUE[fullPath]\n  delete QUEUE[fullPath]\n\n  if (path.extname(fullPath) != '.vm') return\n\n  var item = FILES[fullPath]\n  if (item.stat !== 0) return\n\n  var reg = /##.*$|#\\*[\\s\\S]*?\\*#|#\\[\\[[\\s\\S]*?\\]\\]#|#{?(?:include|parse|cmsparse)}?\\(\\s*([^\\)]+?)\\s*\\)/gm\n  var direcReg = /^#{?[a-zA-Z]/\n  var content = utilx.readFile(fullPath, cfg.encoding)\n\n  var matched\n  while ((matched = reg.exec(content)) != null) {\n    if (direcReg.test(matched[0])) {\n      // -____-\" #include may has multiple params\n      matched[1].split(/\\s*,\\s*|\\s+/).forEach(function(cRelPath) {\n        var child = addItem(cRelPath, cfg.root)\n        child.parents[fullPath] = true\n        item.children[child.fullPath] = true\n      })\n    }\n  }\n}\n\n\n// add path to QUEUE\nfunction addItem(p, root) {\n  var info = {stat: 1, parents:{}, children:{}}\n\n  // directory\n  if (utilx.isExistedDir(p)) {\n    fs.readdirSync(p).forEach(function(child) {\n      addItem(path.join(p, child), root)\n    })\n    return\n  }\n\n  // full path\n  if (utilx.isExistedFile(p)) {\n    info.fullPath = p\n    info.relPath = common.getRelPath(p, root)\n    if (info.relPath) {\n      info.root = common.getRoot(info.relPath, root)\n      info.stat = 0\n    }\n\n  // relative path\n  } else {\n    p = cleanRelPath(p)\n    info.relPath = p\n    info.root = common.getRoot(p, root)\n\n    if (info.root) {\n      info.fullPath = path.join(info.root, p)\n      info.stat = 0\n    } else {\n      info.fullPath = path.join(root[0], p)\n      info.stat = hasVariable(p) ? 2 : 1\n    }\n  }\n\n  var fullPath = info.fullPath\n  if (!QUEUE[fullPath] && !FILES[fullPath]) {\n    QUEUE[fullPath] = info\n  }\n\n  return QUEUE[fullPath] || FILES[fullPath]\n}\n\n// 'path' -> path\n// \"path\" -> path\n// $path  -> $path\nfunction cleanRelPath(relPath) {\n  if (/'|\"/.test(relPath)) {\n    return relPath.substring(1, relPath.length - 1)\n  } else {\n    return relPath\n  }\n}\n\n// '$path' -> 0\n// \"path\"  -> 0\n// \"$path\" -> 1\n// $path   -> 1\n// path    -> 0\nfunction hasVariable(relPath) {\n   return relPath[0] !== \"'\" && /\\$\\!?\\{?[a-zA-Z].*\\}?/.test(relPath)\n}\n\n\n// remove files not in (reverse) dependency tree\nfunction cleanFiles(fullPath) {\n  var data = {}\n\n  function _cleanFiles(fp) {\n    data[fp] = FILES[fp]\n    Object.keys(FILES[fp].parents).forEach(function(pfp) {\n      _cleanFiles(pfp)\n    })\n  }\n  _cleanFiles(fullPath)\n\n  FILES = data\n}\n\n\nmodule.exports = function (cfg) {\n  QUEUE = {}\n  FILES = {}\n\n  var template = cfg.template\n  if (!template.isFile) logger.error('Template is not a file.')\n\n  var fullPath = template.fullPath\n  var root = cfg.root\n\n  if (cfg.reverse) {\n    root.forEach(function(r) { addItem(r, root) })\n    Object.keys(QUEUE).forEach(function(p) {\n      scan(p, cfg)\n    })\n    cleanFiles(fullPath)\n\n  } else {\n    addItem(fullPath, root)\n    while (Object.keys(QUEUE).length) {\n      Object.keys(QUEUE).forEach(function(p) {\n        scan(p, cfg)\n      })\n    }\n  }\n\n  logger.debug(FILES)\n  return FILES\n}\n\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/dep/render.js":"var colorful = require('colorful')\n\n\nfunction render(data, fullPath, reverse /*private params*/, indent, upFullPath) {\n  indent = indent || '1'\n  var item = data[fullPath]\n\n  console.log(wrapIndent(indent) + wrapPath(item))\n\n  var morePaths = reverse ? item.parents : item.children\n  Object.keys(morePaths).forEach(function(downFullPath, idx, keys) {\n    render(data, downFullPath, reverse, indent + (idx === keys.length - 1 ? '1' : '0'), fullPath)\n  })\n}\n\n/*\n * indent = (0|1)+\n * 0: not the last child\n * 1: last child\n * the right most digit matches the node itself\n * the second right most digit matches the node's parent\n * and so on\n *\n * |-root          1\n *   |-c11         10\n *   | |-c111      100\n *   | | |-c1111   1000\n *   | | |-c1112   1001\n *   | |-c112      101\n *   |-c12         11\n */\nfunction wrapIndent(indent) {\n  var str = ''\n  for (var i = 0; i < indent.length - 1; i++) {\n    str += (indent[i] === '0' ? '| ' : '  ')\n  }\n  return colorful.gray(str + '|-')\n}\n\n\nfunction wrapPath(item) {\n  var stat = item.stat\n  var relPath = item.relPath || item.fullPath\n  if (stat === 0) {\n    return relPath\n  } else if (stat === 1) {\n    return colorful.red(relPath)\n  } else {\n    return colorful.yellow(relPath)\n  }\n}\n\n\nmodule.exports = render\n","/home/travis/build/npmtest/node-npmtest-velocity/node_modules/velocity/lib/engine/lex.js":"/* parser generated by jison 0.4.13 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar lex = (function(){\nvar parser = {trace: function trace() { },\nyy: {},\nsymbols_: {\"error\":2,\"root\":3,\"EOF\":4,\"statements\":5,\"statement\":6,\"TEXT\":7,\"BTEXT\":8,\"COMMENT\":9,\"BCOMMENT\":10,\"ID\":11,\"PROP\":12,\"$\":13,\"(\":14,\")\":15,\"[\":16,\"]\":17,\"{\":18,\"}\":19,\":\":20,\",\":21,\";\":22,\"..\":23,\"IN\":24,\"TRUE\":25,\"FALSE\":26,\"NULL\":27,\"==\":28,\"!=\":29,\">=\":30,\"<=\":31,\">\":32,\"<\":33,\"&&\":34,\"||\":35,\"!\":36,\"+\":37,\"-\":38,\"*\":39,\"/\":40,\"%\":41,\"=\":42,\"FLOAT\":43,\"INTEGER\":44,\"DSTRING\":45,\"STRING\":46,\"SET\":47,\"IF\":48,\"ELSEIF\":49,\"ELSE\":50,\"END\":51,\"FOREACH\":52,\"INCLUDE\":53,\"PARSE\":54,\"STOP\":55,\"BREAK\":56,\"EVALUATE\":57,\"DEFINE\":58,\"MACRO\":59,\"MACROCALL\":60,\"BMACROCALL\":61,\"WS\":62,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",4:\"EOF\",7:\"TEXT\",8:\"BTEXT\",9:\"COMMENT\",10:\"BCOMMENT\",11:\"ID\",12:\"PROP\",13:\"$\",14:\"(\",15:\")\",16:\"[\",17:\"]\",18:\"{\",19:\"}\",20:\":\",21:\",\",22:\";\",23:\"..\",24:\"IN\",25:\"TRUE\",26:\"FALSE\",27:\"NULL\",28:\"==\",29:\"!=\",30:\">=\",31:\"<=\",32:\">\",33:\"<\",34:\"&&\",35:\"||\",36:\"!\",37:\"+\",38:\"-\",39:\"*\",40:\"/\",41:\"%\",42:\"=\",43:\"FLOAT\",44:\"INTEGER\",45:\"DSTRING\",46:\"STRING\",47:\"SET\",48:\"IF\",49:\"ELSEIF\",50:\"ELSE\",51:\"END\",52:\"FOREACH\",53:\"INCLUDE\",54:\"PARSE\",55:\"STOP\",56:\"BREAK\",57:\"EVALUATE\",58:\"DEFINE\",59:\"MACRO\",60:\"MACROCALL\",61:\"BMACROCALL\",62:\"WS\"},\nproductions_: [0,[3,1],[3,2],[5,1],[5,2],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1],[6,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1: return []; \nbreak;\ncase 2: return $$[$0-1]; \nbreak;\ncase 3: this.$ = [$$[$0]]; \nbreak;\ncase 4: this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 5: this.$ = ['TEXT', $$[$0]]; \nbreak;\ncase 6: this.$ = ['BTEXT', $$[$0]]; \nbreak;\ncase 7: this.$ = ['COMMENT', $$[$0]]; \nbreak;\ncase 8: this.$ = ['BCOMMENT', $$[$0]]; \nbreak;\ncase 9: this.$ = ['ID', $$[$0]]; \nbreak;\ncase 10: this.$ = ['PROP', $$[$0]]; \nbreak;\ncase 11: this.$ = ['$']; \nbreak;\ncase 12: this.$ = ['(']; \nbreak;\ncase 13: this.$ = [')']; \nbreak;\ncase 14: this.$ = ['[']; \nbreak;\ncase 15: this.$ = [']']; \nbreak;\ncase 16: this.$ = ['{']; \nbreak;\ncase 17: this.$ = ['}']; \nbreak;\ncase 18: this.$ = [':']; \nbreak;\ncase 19: this.$ = [',']; \nbreak;\ncase 20: this.$ = [';']; \nbreak;\ncase 21: this.$ = ['..']; \nbreak;\ncase 22: this.$ = ['IN']; \nbreak;\ncase 23: this.$ = ['TRUE']; \nbreak;\ncase 24: this.$ = ['FALSE']; \nbreak;\ncase 25: this.$ = ['NULL']; \nbreak;\ncase 26: this.$ = [$$[$0]]; \nbreak;\ncase 27: this.$ = [$$[$0]]; \nbreak;\ncase 28: this.$ = [$$[$0]]; \nbreak;\ncase 29: this.$ = [$$[$0]]; \nbreak;\ncase 30: this.$ = [$$[$0]]; \nbreak;\ncase 31: this.$ = [$$[$0]]; \nbreak;\ncase 32: this.$ = [$$[$0]]; \nbreak;\ncase 33: this.$ = [$$[$0]]; \nbreak;\ncase 34: this.$ = [$$[$0]]; \nbreak;\ncase 35: this.$ = [$$[$0]]; \nbreak;\ncase 36: this.$ = [$$[$0]]; \nbreak;\ncase 37: this.$ = [$$[$0]]; \nbreak;\ncase 38: this.$ = [$$[$0]]; \nbreak;\ncase 39: this.$ = [$$[$0]]; \nbreak;\ncase 40: this.$ = [$$[$0]]; \nbreak;\ncase 41: this.$ = ['FLOAT', $$[$0]]; \nbreak;\ncase 42: this.$ = ['INTEGER', $$[$0]]; \nbreak;\ncase 43: this.$ = ['DSTRING', $$[$0]]; \nbreak;\ncase 44: this.$ = ['STRING', $$[$0]]; \nbreak;\ncase 45: this.$ = ['SET', $$[$0]]; \nbreak;\ncase 46: this.$ = ['IF', $$[$0]]; \nbreak;\ncase 47: this.$ = ['ELSEIF', $$[$0]]; \nbreak;\ncase 48: this.$ = ['ELSE', $$[$0]]; \nbreak;\ncase 49: this.$ = ['END', $$[$0]]; \nbreak;\ncase 50: this.$ = ['FOREACH', $$[$0]]; \nbreak;\ncase 51: this.$ = ['INCLUDE', $$[$0]]; \nbreak;\ncase 52: this.$ = ['PARSE', $$[$0]]; \nbreak;\ncase 53: this.$ = ['STOP', $$[$0]]; \nbreak;\ncase 54: this.$ = ['BREAK', $$[$0]]; \nbreak;\ncase 55: this.$ = ['EVALUATE', $$[$0]]; \nbreak;\ncase 56: this.$ = ['DEFINE', $$[$0]]; \nbreak;\ncase 57: this.$ = ['MACRO', $$[$0]]; \nbreak;\ncase 58: this.$ = ['MACROCALL', $$[$0]]; \nbreak;\ncase 59: this.$ = ['BMACROCALL', $$[$0]]; \nbreak;\ncase 60: this.$ = ['WS']; \nbreak;\n}\n},\ntable: [{3:1,4:[1,2],5:3,6:4,7:[1,5],8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:[1,10],13:[1,11],14:[1,12],15:[1,13],16:[1,14],17:[1,15],18:[1,16],19:[1,17],20:[1,18],21:[1,19],22:[1,20],23:[1,21],24:[1,22],25:[1,23],26:[1,24],27:[1,25],28:[1,26],29:[1,27],30:[1,28],31:[1,29],32:[1,30],33:[1,31],34:[1,32],35:[1,33],36:[1,34],37:[1,35],38:[1,36],39:[1,37],40:[1,38],41:[1,39],42:[1,40],43:[1,41],44:[1,42],45:[1,43],46:[1,44],47:[1,45],48:[1,46],49:[1,47],50:[1,48],51:[1,49],52:[1,50],53:[1,51],54:[1,52],55:[1,53],56:[1,54],57:[1,55],58:[1,56],59:[1,57],60:[1,58],61:[1,59],62:[1,60]},{1:[3]},{1:[2,1]},{4:[1,61]},{4:[2,3],5:62,6:4,7:[1,5],8:[1,6],9:[1,7],10:[1,8],11:[1,9],12:[1,10],13:[1,11],14:[1,12],15:[1,13],16:[1,14],17:[1,15],18:[1,16],19:[1,17],20:[1,18],21:[1,19],22:[1,20],23:[1,21],24:[1,22],25:[1,23],26:[1,24],27:[1,25],28:[1,26],29:[1,27],30:[1,28],31:[1,29],32:[1,30],33:[1,31],34:[1,32],35:[1,33],36:[1,34],37:[1,35],38:[1,36],39:[1,37],40:[1,38],41:[1,39],42:[1,40],43:[1,41],44:[1,42],45:[1,43],46:[1,44],47:[1,45],48:[1,46],49:[1,47],50:[1,48],51:[1,49],52:[1,50],53:[1,51],54:[1,52],55:[1,53],56:[1,54],57:[1,55],58:[1,56],59:[1,57],60:[1,58],61:[1,59],62:[1,60]},{4:[2,5],7:[2,5],8:[2,5],9:[2,5],10:[2,5],11:[2,5],12:[2,5],13:[2,5],14:[2,5],15:[2,5],16:[2,5],17:[2,5],18:[2,5],19:[2,5],20:[2,5],21:[2,5],22:[2,5],23:[2,5],24:[2,5],25:[2,5],26:[2,5],27:[2,5],28:[2,5],29:[2,5],30:[2,5],31:[2,5],32:[2,5],33:[2,5],34:[2,5],35:[2,5],36:[2,5],37:[2,5],38:[2,5],39:[2,5],40:[2,5],41:[2,5],42:[2,5],43:[2,5],44:[2,5],45:[2,5],46:[2,5],47:[2,5],48:[2,5],49:[2,5],50:[2,5],51:[2,5],52:[2,5],53:[2,5],54:[2,5],55:[2,5],56:[2,5],57:[2,5],58:[2,5],59:[2,5],60:[2,5],61:[2,5],62:[2,5]},{4:[2,6],7:[2,6],8:[2,6],9:[2,6],10:[2,6],11:[2,6],12:[2,6],13:[2,6],14:[2,6],15:[2,6],16:[2,6],17:[2,6],18:[2,6],19:[2,6],20:[2,6],21:[2,6],22:[2,6],23:[2,6],24:[2,6],25:[2,6],26:[2,6],27:[2,6],28:[2,6],29:[2,6],30:[2,6],31:[2,6],32:[2,6],33:[2,6],34:[2,6],35:[2,6],36:[2,6],37:[2,6],38:[2,6],39:[2,6],40:[2,6],41:[2,6],42:[2,6],43:[2,6],44:[2,6],45:[2,6],46:[2,6],47:[2,6],48:[2,6],49:[2,6],50:[2,6],51:[2,6],52:[2,6],53:[2,6],54:[2,6],55:[2,6],56:[2,6],57:[2,6],58:[2,6],59:[2,6],60:[2,6],61:[2,6],62:[2,6]},{4:[2,7],7:[2,7],8:[2,7],9:[2,7],10:[2,7],11:[2,7],12:[2,7],13:[2,7],14:[2,7],15:[2,7],16:[2,7],17:[2,7],18:[2,7],19:[2,7],20:[2,7],21:[2,7],22:[2,7],23:[2,7],24:[2,7],25:[2,7],26:[2,7],27:[2,7],28:[2,7],29:[2,7],30:[2,7],31:[2,7],32:[2,7],33:[2,7],34:[2,7],35:[2,7],36:[2,7],37:[2,7],38:[2,7],39:[2,7],40:[2,7],41:[2,7],42:[2,7],43:[2,7],44:[2,7],45:[2,7],46:[2,7],47:[2,7],48:[2,7],49:[2,7],50:[2,7],51:[2,7],52:[2,7],53:[2,7],54:[2,7],55:[2,7],56:[2,7],57:[2,7],58:[2,7],59:[2,7],60:[2,7],61:[2,7],62:[2,7]},{4:[2,8],7:[2,8],8:[2,8],9:[2,8],10:[2,8],11:[2,8],12:[2,8],13:[2,8],14:[2,8],15:[2,8],16:[2,8],17:[2,8],18:[2,8],19:[2,8],20:[2,8],21:[2,8],22:[2,8],23:[2,8],24:[2,8],25:[2,8],26:[2,8],27:[2,8],28:[2,8],29:[2,8],30:[2,8],31:[2,8],32:[2,8],33:[2,8],34:[2,8],35:[2,8],36:[2,8],37:[2,8],38:[2,8],39:[2,8],40:[2,8],41:[2,8],42:[2,8],43:[2,8],44:[2,8],45:[2,8],46:[2,8],47:[2,8],48:[2,8],49:[2,8],50:[2,8],51:[2,8],52:[2,8],53:[2,8],54:[2,8],55:[2,8],56:[2,8],57:[2,8],58:[2,8],59:[2,8],60:[2,8],61:[2,8],62:[2,8]},{4:[2,9],7:[2,9],8:[2,9],9:[2,9],10:[2,9],11:[2,9],12:[2,9],13:[2,9],14:[2,9],15:[2,9],16:[2,9],17:[2,9],18:[2,9],19:[2,9],20:[2,9],21:[2,9],22:[2,9],23:[2,9],24:[2,9],25:[2,9],26:[2,9],27:[2,9],28:[2,9],29:[2,9],30:[2,9],31:[2,9],32:[2,9],33:[2,9],34:[2,9],35:[2,9],36:[2,9],37:[2,9],38:[2,9],39:[2,9],40:[2,9],41:[2,9],42:[2,9],43:[2,9],44:[2,9],45:[2,9],46:[2,9],47:[2,9],48:[2,9],49:[2,9],50:[2,9],51:[2,9],52:[2,9],53:[2,9],54:[2,9],55:[2,9],56:[2,9],57:[2,9],58:[2,9],59:[2,9],60:[2,9],61:[2,9],62:[2,9]},{4:[2,10],7:[2,10],8:[2,10],9:[2,10],10:[2,10],11:[2,10],12:[2,10],13:[2,10],14:[2,10],15:[2,10],16:[2,10],17:[2,10],18:[2,10],19:[2,10],20:[2,10],21:[2,10],22:[2,10],23:[2,10],24:[2,10],25:[2,10],26:[2,10],27:[2,10],28:[2,10],29:[2,10],30:[2,10],31:[2,10],32:[2,10],33:[2,10],34:[2,10],35:[2,10],36:[2,10],37:[2,10],38:[2,10],39:[2,10],40:[2,10],41:[2,10],42:[2,10],43:[2,10],44:[2,10],45:[2,10],46:[2,10],47:[2,10],48:[2,10],49:[2,10],50:[2,10],51:[2,10],52:[2,10],53:[2,10],54:[2,10],55:[2,10],56:[2,10],57:[2,10],58:[2,10],59:[2,10],60:[2,10],61:[2,10],62:[2,10]},{4:[2,11],7:[2,11],8:[2,11],9:[2,11],10:[2,11],11:[2,11],12:[2,11],13:[2,11],14:[2,11],15:[2,11],16:[2,11],17:[2,11],18:[2,11],19:[2,11],20:[2,11],21:[2,11],22:[2,11],23:[2,11],24:[2,11],25:[2,11],26:[2,11],27:[2,11],28:[2,11],29:[2,11],30:[2,11],31:[2,11],32:[2,11],33:[2,11],34:[2,11],35:[2,11],36:[2,11],37:[2,11],38:[2,11],39:[2,11],40:[2,11],41:[2,11],42:[2,11],43:[2,11],44:[2,11],45:[2,11],46:[2,11],47:[2,11],48:[2,11],49:[2,11],50:[2,11],51:[2,11],52:[2,11],53:[2,11],54:[2,11],55:[2,11],56:[2,11],57:[2,11],58:[2,11],59:[2,11],60:[2,11],61:[2,11],62:[2,11]},{4:[2,12],7:[2,12],8:[2,12],9:[2,12],10:[2,12],11:[2,12],12:[2,12],13:[2,12],14:[2,12],15:[2,12],16:[2,12],17:[2,12],18:[2,12],19:[2,12],20:[2,12],21:[2,12],22:[2,12],23:[2,12],24:[2,12],25:[2,12],26:[2,12],27:[2,12],28:[2,12],29:[2,12],30:[2,12],31:[2,12],32:[2,12],33:[2,12],34:[2,12],35:[2,12],36:[2,12],37:[2,12],38:[2,12],39:[2,12],40:[2,12],41:[2,12],42:[2,12],43:[2,12],44:[2,12],45:[2,12],46:[2,12],47:[2,12],48:[2,12],49:[2,12],50:[2,12],51:[2,12],52:[2,12],53:[2,12],54:[2,12],55:[2,12],56:[2,12],57:[2,12],58:[2,12],59:[2,12],60:[2,12],61:[2,12],62:[2,12]},{4:[2,13],7:[2,13],8:[2,13],9:[2,13],10:[2,13],11:[2,13],12:[2,13],13:[2,13],14:[2,13],15:[2,13],16:[2,13],17:[2,13],18:[2,13],19:[2,13],20:[2,13],21:[2,13],22:[2,13],23:[2,13],24:[2,13],25:[2,13],26:[2,13],27:[2,13],28:[2,13],29:[2,13],30:[2,13],31:[2,13],32:[2,13],33:[2,13],34:[2,13],35:[2,13],36:[2,13],37:[2,13],38:[2,13],39:[2,13],40:[2,13],41:[2,13],42:[2,13],43:[2,13],44:[2,13],45:[2,13],46:[2,13],47:[2,13],48:[2,13],49:[2,13],50:[2,13],51:[2,13],52:[2,13],53:[2,13],54:[2,13],55:[2,13],56:[2,13],57:[2,13],58:[2,13],59:[2,13],60:[2,13],61:[2,13],62:[2,13]},{4:[2,14],7:[2,14],8:[2,14],9:[2,14],10:[2,14],11:[2,14],12:[2,14],13:[2,14],14:[2,14],15:[2,14],16:[2,14],17:[2,14],18:[2,14],19:[2,14],20:[2,14],21:[2,14],22:[2,14],23:[2,14],24:[2,14],25:[2,14],26:[2,14],27:[2,14],28:[2,14],29:[2,14],30:[2,14],31:[2,14],32:[2,14],33:[2,14],34:[2,14],35:[2,14],36:[2,14],37:[2,14],38:[2,14],39:[2,14],40:[2,14],41:[2,14],42:[2,14],43:[2,14],44:[2,14],45:[2,14],46:[2,14],47:[2,14],48:[2,14],49:[2,14],50:[2,14],51:[2,14],52:[2,14],53:[2,14],54:[2,14],55:[2,14],56:[2,14],57:[2,14],58:[2,14],59:[2,14],60:[2,14],61:[2,14],62:[2,14]},{4:[2,15],7:[2,15],8:[2,15],9:[2,15],10:[2,15],11:[2,15],12:[2,15],13:[2,15],14:[2,15],15:[2,15],16:[2,15],17:[2,15],18:[2,15],19:[2,15],20:[2,15],21:[2,15],22:[2,15],23:[2,15],24:[2,15],25:[2,15],26:[2,15],27:[2,15],28:[2,15],29:[2,15],30:[2,15],31:[2,15],32:[2,15],33:[2,15],34:[2,15],35:[2,15],36:[2,15],37:[2,15],38:[2,15],39:[2,15],40:[2,15],41:[2,15],42:[2,15],43:[2,15],44:[2,15],45:[2,15],46:[2,15],47:[2,15],48:[2,15],49:[2,15],50:[2,15],51:[2,15],52:[2,15],53:[2,15],54:[2,15],55:[2,15],56:[2,15],57:[2,15],58:[2,15],59:[2,15],60:[2,15],61:[2,15],62:[2,15]},{4:[2,16],7:[2,16],8:[2,16],9:[2,16],10:[2,16],11:[2,16],12:[2,16],13:[2,16],14:[2,16],15:[2,16],16:[2,16],17:[2,16],18:[2,16],19:[2,16],20:[2,16],21:[2,16],22:[2,16],23:[2,16],24:[2,16],25:[2,16],26:[2,16],27:[2,16],28:[2,16],29:[2,16],30:[2,16],31:[2,16],32:[2,16],33:[2,16],34:[2,16],35:[2,16],36:[2,16],37:[2,16],38:[2,16],39:[2,16],40:[2,16],41:[2,16],42:[2,16],43:[2,16],44:[2,16],45:[2,16],46:[2,16],47:[2,16],48:[2,16],49:[2,16],50:[2,16],51:[2,16],52:[2,16],53:[2,16],54:[2,16],55:[2,16],56:[2,16],57:[2,16],58:[2,16],59:[2,16],60:[2,16],61:[2,16],62:[2,16]},{4:[2,17],7:[2,17],8:[2,17],9:[2,17],10:[2,17],11:[2,17],12:[2,17],13:[2,17],14:[2,17],15:[2,17],16:[2,17],17:[2,17],18:[2,17],19:[2,17],20:[2,17],21:[2,17],22:[2,17],23:[2,17],24:[2,17],25:[2,17],26:[2,17],27:[2,17],28:[2,17],29:[2,17],30:[2,17],31:[2,17],32:[2,17],33:[2,17],34:[2,17],35:[2,17],36:[2,17],37:[2,17],38:[2,17],39:[2,17],40:[2,17],41:[2,17],42:[2,17],43:[2,17],44:[2,17],45:[2,17],46:[2,17],47:[2,17],48:[2,17],49:[2,17],50:[2,17],51:[2,17],52:[2,17],53:[2,17],54:[2,17],55:[2,17],56:[2,17],57:[2,17],58:[2,17],59:[2,17],60:[2,17],61:[2,17],62:[2,17]},{4:[2,18],7:[2,18],8:[2,18],9:[2,18],10:[2,18],11:[2,18],12:[2,18],13:[2,18],14:[2,18],15:[2,18],16:[2,18],17:[2,18],18:[2,18],19:[2,18],20:[2,18],21:[2,18],22:[2,18],23:[2,18],24:[2,18],25:[2,18],26:[2,18],27:[2,18],28:[2,18],29:[2,18],30:[2,18],31:[2,18],32:[2,18],33:[2,18],34:[2,18],35:[2,18],36:[2,18],37:[2,18],38:[2,18],39:[2,18],40:[2,18],41:[2,18],42:[2,18],43:[2,18],44:[2,18],45:[2,18],46:[2,18],47:[2,18],48:[2,18],49:[2,18],50:[2,18],51:[2,18],52:[2,18],53:[2,18],54:[2,18],55:[2,18],56:[2,18],57:[2,18],58:[2,18],59:[2,18],60:[2,18],61:[2,18],62:[2,18]},{4:[2,19],7:[2,19],8:[2,19],9:[2,19],10:[2,19],11:[2,19],12:[2,19],13:[2,19],14:[2,19],15:[2,19],16:[2,19],17:[2,19],18:[2,19],19:[2,19],20:[2,19],21:[2,19],22:[2,19],23:[2,19],24:[2,19],25:[2,19],26:[2,19],27:[2,19],28:[2,19],29:[2,19],30:[2,19],31:[2,19],32:[2,19],33:[2,19],34:[2,19],35:[2,19],36:[2,19],37:[2,19],38:[2,19],39:[2,19],40:[2,19],41:[2,19],42:[2,19],43:[2,19],44:[2,19],45:[2,19],46:[2,19],47:[2,19],48:[2,19],49:[2,19],50:[2,19],51:[2,19],52:[2,19],53:[2,19],54:[2,19],55:[2,19],56:[2,19],57:[2,19],58:[2,19],59:[2,19],60:[2,19],61:[2,19],62:[2,19]},{4:[2,20],7:[2,20],8:[2,20],9:[2,20],10:[2,20],11:[2,20],12:[2,20],13:[2,20],14:[2,20],15:[2,20],16:[2,20],17:[2,20],18:[2,20],19:[2,20],20:[2,20],21:[2,20],22:[2,20],23:[2,20],24:[2,20],25:[2,20],26:[2,20],27:[2,20],28:[2,20],29:[2,20],30:[2,20],31:[2,20],32:[2,20],33:[2,20],34:[2,20],35:[2,20],36:[2,20],37:[2,20],38:[2,20],39:[2,20],40:[2,20],41:[2,20],42:[2,20],43:[2,20],44:[2,20],45:[2,20],46:[2,20],47:[2,20],48:[2,20],49:[2,20],50:[2,20],51:[2,20],52:[2,20],53:[2,20],54:[2,20],55:[2,20],56:[2,20],57:[2,20],58:[2,20],59:[2,20],60:[2,20],61:[2,20],62:[2,20]},{4:[2,21],7:[2,21],8:[2,21],9:[2,21],10:[2,21],11:[2,21],12:[2,21],13:[2,21],14:[2,21],15:[2,21],16:[2,21],17:[2,21],18:[2,21],19:[2,21],20:[2,21],21:[2,21],22:[2,21],23:[2,21],24:[2,21],25:[2,21],26:[2,21],27:[2,21],28:[2,21],29:[2,21],30:[2,21],31:[2,21],32:[2,21],33:[2,21],34:[2,21],35:[2,21],36:[2,21],37:[2,21],38:[2,21],39:[2,21],40:[2,21],41:[2,21],42:[2,21],43:[2,21],44:[2,21],45:[2,21],46:[2,21],47:[2,21],48:[2,21],49:[2,21],50:[2,21],51:[2,21],52:[2,21],53:[2,21],54:[2,21],55:[2,21],56:[2,21],57:[2,21],58:[2,21],59:[2,21],60:[2,21],61:[2,21],62:[2,21]},{4:[2,22],7:[2,22],8:[2,22],9:[2,22],10:[2,22],11:[2,22],12:[2,22],13:[2,22],14:[2,22],15:[2,22],16:[2,22],17:[2,22],18:[2,22],19:[2,22],20:[2,22],21:[2,22],22:[2,22],23:[2,22],24:[2,22],25:[2,22],26:[2,22],27:[2,22],28:[2,22],29:[2,22],30:[2,22],31:[2,22],32:[2,22],33:[2,22],34:[2,22],35:[2,22],36:[2,22],37:[2,22],38:[2,22],39:[2,22],40:[2,22],41:[2,22],42:[2,22],43:[2,22],44:[2,22],45:[2,22],46:[2,22],47:[2,22],48:[2,22],49:[2,22],50:[2,22],51:[2,22],52:[2,22],53:[2,22],54:[2,22],55:[2,22],56:[2,22],57:[2,22],58:[2,22],59:[2,22],60:[2,22],61:[2,22],62:[2,22]},{4:[2,23],7:[2,23],8:[2,23],9:[2,23],10:[2,23],11:[2,23],12:[2,23],13:[2,23],14:[2,23],15:[2,23],16:[2,23],17:[2,23],18:[2,23],19:[2,23],20:[2,23],21:[2,23],22:[2,23],23:[2,23],24:[2,23],25:[2,23],26:[2,23],27:[2,23],28:[2,23],29:[2,23],30:[2,23],31:[2,23],32:[2,23],33:[2,23],34:[2,23],35:[2,23],36:[2,23],37:[2,23],38:[2,23],39:[2,23],40:[2,23],41:[2,23],42:[2,23],43:[2,23],44:[2,23],45:[2,23],46:[2,23],47:[2,23],48:[2,23],49:[2,23],50:[2,23],51:[2,23],52:[2,23],53:[2,23],54:[2,23],55:[2,23],56:[2,23],57:[2,23],58:[2,23],59:[2,23],60:[2,23],61:[2,23],62:[2,23]},{4:[2,24],7:[2,24],8:[2,24],9:[2,24],10:[2,24],11:[2,24],12:[2,24],13:[2,24],14:[2,24],15:[2,24],16:[2,24],17:[2,24],18:[2,24],19:[2,24],20:[2,24],21:[2,24],22:[2,24],23:[2,24],24:[2,24],25:[2,24],26:[2,24],27:[2,24],28:[2,24],29:[2,24],30:[2,24],31:[2,24],32:[2,24],33:[2,24],34:[2,24],35:[2,24],36:[2,24],37:[2,24],38:[2,24],39:[2,24],40:[2,24],41:[2,24],42:[2,24],43:[2,24],44:[2,24],45:[2,24],46:[2,24],47:[2,24],48:[2,24],49:[2,24],50:[2,24],51:[2,24],52:[2,24],53:[2,24],54:[2,24],55:[2,24],56:[2,24],57:[2,24],58:[2,24],59:[2,24],60:[2,24],61:[2,24],62:[2,24]},{4:[2,25],7:[2,25],8:[2,25],9:[2,25],10:[2,25],11:[2,25],12:[2,25],13:[2,25],14:[2,25],15:[2,25],16:[2,25],17:[2,25],18:[2,25],19:[2,25],20:[2,25],21:[2,25],22:[2,25],23:[2,25],24:[2,25],25:[2,25],26:[2,25],27:[2,25],28:[2,25],29:[2,25],30:[2,25],31:[2,25],32:[2,25],33:[2,25],34:[2,25],35:[2,25],36:[2,25],37:[2,25],38:[2,25],39:[2,25],40:[2,25],41:[2,25],42:[2,25],43:[2,25],44:[2,25],45:[2,25],46:[2,25],47:[2,25],48:[2,25],49:[2,25],50:[2,25],51:[2,25],52:[2,25],53:[2,25],54:[2,25],55:[2,25],56:[2,25],57:[2,25],58:[2,25],59:[2,25],60:[2,25],61:[2,25],62:[2,25]},{4:[2,26],7:[2,26],8:[2,26],9:[2,26],10:[2,26],11:[2,26],12:[2,26],13:[2,26],14:[2,26],15:[2,26],16:[2,26],17:[2,26],18:[2,26],19:[2,26],20:[2,26],21:[2,26],22:[2,26],23:[2,26],24:[2,26],25:[2,26],26:[2,26],27:[2,26],28:[2,26],29:[2,26],30:[2,26],31:[2,26],32:[2,26],33:[2,26],34:[2,26],35:[2,26],36:[2,26],37:[2,26],38:[2,26],39:[2,26],40:[2,26],41:[2,26],42:[2,26],43:[2,26],44:[2,26],45:[2,26],46:[2,26],47:[2,26],48:[2,26],49:[2,26],50:[2,26],51:[2,26],52:[2,26],53:[2,26],54:[2,26],55:[2,26],56:[2,26],57:[2,26],58:[2,26],59:[2,26],60:[2,26],61:[2,26],62:[2,26]},{4:[2,27],7:[2,27],8:[2,27],9:[2,27],10:[2,27],11:[2,27],12:[2,27],13:[2,27],14:[2,27],15:[2,27],16:[2,27],17:[2,27],18:[2,27],19:[2,27],20:[2,27],21:[2,27],22:[2,27],23:[2,27],24:[2,27],25:[2,27],26:[2,27],27:[2,27],28:[2,27],29:[2,27],30:[2,27],31:[2,27],32:[2,27],33:[2,27],34:[2,27],35:[2,27],36:[2,27],37:[2,27],38:[2,27],39:[2,27],40:[2,27],41:[2,27],42:[2,27],43:[2,27],44:[2,27],45:[2,27],46:[2,27],47:[2,27],48:[2,27],49:[2,27],50:[2,27],51:[2,27],52:[2,27],53:[2,27],54:[2,27],55:[2,27],56:[2,27],57:[2,27],58:[2,27],59:[2,27],60:[2,27],61:[2,27],62:[2,27]},{4:[2,28],7:[2,28],8:[2,28],9:[2,28],10:[2,28],11:[2,28],12:[2,28],13:[2,28],14:[2,28],15:[2,28],16:[2,28],17:[2,28],18:[2,28],19:[2,28],20:[2,28],21:[2,28],22:[2,28],23:[2,28],24:[2,28],25:[2,28],26:[2,28],27:[2,28],28:[2,28],29:[2,28],30:[2,28],31:[2,28],32:[2,28],33:[2,28],34:[2,28],35:[2,28],36:[2,28],37:[2,28],38:[2,28],39:[2,28],40:[2,28],41:[2,28],42:[2,28],43:[2,28],44:[2,28],45:[2,28],46:[2,28],47:[2,28],48:[2,28],49:[2,28],50:[2,28],51:[2,28],52:[2,28],53:[2,28],54:[2,28],55:[2,28],56:[2,28],57:[2,28],58:[2,28],59:[2,28],60:[2,28],61:[2,28],62:[2,28]},{4:[2,29],7:[2,29],8:[2,29],9:[2,29],10:[2,29],11:[2,29],12:[2,29],13:[2,29],14:[2,29],15:[2,29],16:[2,29],17:[2,29],18:[2,29],19:[2,29],20:[2,29],21:[2,29],22:[2,29],23:[2,29],24:[2,29],25:[2,29],26:[2,29],27:[2,29],28:[2,29],29:[2,29],30:[2,29],31:[2,29],32:[2,29],33:[2,29],34:[2,29],35:[2,29],36:[2,29],37:[2,29],38:[2,29],39:[2,29],40:[2,29],41:[2,29],42:[2,29],43:[2,29],44:[2,29],45:[2,29],46:[2,29],47:[2,29],48:[2,29],49:[2,29],50:[2,29],51:[2,29],52:[2,29],53:[2,29],54:[2,29],55:[2,29],56:[2,29],57:[2,29],58:[2,29],59:[2,29],60:[2,29],61:[2,29],62:[2,29]},{4:[2,30],7:[2,30],8:[2,30],9:[2,30],10:[2,30],11:[2,30],12:[2,30],13:[2,30],14:[2,30],15:[2,30],16:[2,30],17:[2,30],18:[2,30],19:[2,30],20:[2,30],21:[2,30],22:[2,30],23:[2,30],24:[2,30],25:[2,30],26:[2,30],27:[2,30],28:[2,30],29:[2,30],30:[2,30],31:[2,30],32:[2,30],33:[2,30],34:[2,30],35:[2,30],36:[2,30],37:[2,30],38:[2,30],39:[2,30],40:[2,30],41:[2,30],42:[2,30],43:[2,30],44:[2,30],45:[2,30],46:[2,30],47:[2,30],48:[2,30],49:[2,30],50:[2,30],51:[2,30],52:[2,30],53:[2,30],54:[2,30],55:[2,30],56:[2,30],57:[2,30],58:[2,30],59:[2,30],60:[2,30],61:[2,30],62:[2,30]},{4:[2,31],7:[2,31],8:[2,31],9:[2,31],10:[2,31],11:[2,31],12:[2,31],13:[2,31],14:[2,31],15:[2,31],16:[2,31],17:[2,31],18:[2,31],19:[2,31],20:[2,31],21:[2,31],22:[2,31],23:[2,31],24:[2,31],25:[2,31],26:[2,31],27:[2,31],28:[2,31],29:[2,31],30:[2,31],31:[2,31],32:[2,31],33:[2,31],34:[2,31],35:[2,31],36:[2,31],37:[2,31],38:[2,31],39:[2,31],40:[2,31],41:[2,31],42:[2,31],43:[2,31],44:[2,31],45:[2,31],46:[2,31],47:[2,31],48:[2,31],49:[2,31],50:[2,31],51:[2,31],52:[2,31],53:[2,31],54:[2,31],55:[2,31],56:[2,31],57:[2,31],58:[2,31],59:[2,31],60:[2,31],61:[2,31],62:[2,31]},{4:[2,32],7:[2,32],8:[2,32],9:[2,32],10:[2,32],11:[2,32],12:[2,32],13:[2,32],14:[2,32],15:[2,32],16:[2,32],17:[2,32],18:[2,32],19:[2,32],20:[2,32],21:[2,32],22:[2,32],23:[2,32],24:[2,32],25:[2,32],26:[2,32],27:[2,32],28:[2,32],29:[2,32],30:[2,32],31:[2,32],32:[2,32],33:[2,32],34:[2,32],35:[2,32],36:[2,32],37:[2,32],38:[2,32],39:[2,32],40:[2,32],41:[2,32],42:[2,32],43:[2,32],44:[2,32],45:[2,32],46:[2,32],47:[2,32],48:[2,32],49:[2,32],50:[2,32],51:[2,32],52:[2,32],53:[2,32],54:[2,32],55:[2,32],56:[2,32],57:[2,32],58:[2,32],59:[2,32],60:[2,32],61:[2,32],62:[2,32]},{4:[2,33],7:[2,33],8:[2,33],9:[2,33],10:[2,33],11:[2,33],12:[2,33],13:[2,33],14:[2,33],15:[2,33],16:[2,33],17:[2,33],18:[2,33],19:[2,33],20:[2,33],21:[2,33],22:[2,33],23:[2,33],24:[2,33],25:[2,33],26:[2,33],27:[2,33],28:[2,33],29:[2,33],30:[2,33],31:[2,33],32:[2,33],33:[2,33],34:[2,33],35:[2,33],36:[2,33],37:[2,33],38:[2,33],39:[2,33],40:[2,33],41:[2,33],42:[2,33],43:[2,33],44:[2,33],45:[2,33],46:[2,33],47:[2,33],48:[2,33],49:[2,33],50:[2,33],51:[2,33],52:[2,33],53:[2,33],54:[2,33],55:[2,33],56:[2,33],57:[2,33],58:[2,33],59:[2,33],60:[2,33],61:[2,33],62:[2,33]},{4:[2,34],7:[2,34],8:[2,34],9:[2,34],10:[2,34],11:[2,34],12:[2,34],13:[2,34],14:[2,34],15:[2,34],16:[2,34],17:[2,34],18:[2,34],19:[2,34],20:[2,34],21:[2,34],22:[2,34],23:[2,34],24:[2,34],25:[2,34],26:[2,34],27:[2,34],28:[2,34],29:[2,34],30:[2,34],31:[2,34],32:[2,34],33:[2,34],34:[2,34],35:[2,34],36:[2,34],37:[2,34],38:[2,34],39:[2,34],40:[2,34],41:[2,34],42:[2,34],43:[2,34],44:[2,34],45:[2,34],46:[2,34],47:[2,34],48:[2,34],49:[2,34],50:[2,34],51:[2,34],52:[2,34],53:[2,34],54:[2,34],55:[2,34],56:[2,34],57:[2,34],58:[2,34],59:[2,34],60:[2,34],61:[2,34],62:[2,34]},{4:[2,35],7:[2,35],8:[2,35],9:[2,35],10:[2,35],11:[2,35],12:[2,35],13:[2,35],14:[2,35],15:[2,35],16:[2,35],17:[2,35],18:[2,35],19:[2,35],20:[2,35],21:[2,35],22:[2,35],23:[2,35],24:[2,35],25:[2,35],26:[2,35],27:[2,35],28:[2,35],29:[2,35],30:[2,35],31:[2,35],32:[2,35],33:[2,35],34:[2,35],35:[2,35],36:[2,35],37:[2,35],38:[2,35],39:[2,35],40:[2,35],41:[2,35],42:[2,35],43:[2,35],44:[2,35],45:[2,35],46:[2,35],47:[2,35],48:[2,35],49:[2,35],50:[2,35],51:[2,35],52:[2,35],53:[2,35],54:[2,35],55:[2,35],56:[2,35],57:[2,35],58:[2,35],59:[2,35],60:[2,35],61:[2,35],62:[2,35]},{4:[2,36],7:[2,36],8:[2,36],9:[2,36],10:[2,36],11:[2,36],12:[2,36],13:[2,36],14:[2,36],15:[2,36],16:[2,36],17:[2,36],18:[2,36],19:[2,36],20:[2,36],21:[2,36],22:[2,36],23:[2,36],24:[2,36],25:[2,36],26:[2,36],27:[2,36],28:[2,36],29:[2,36],30:[2,36],31:[2,36],32:[2,36],33:[2,36],34:[2,36],35:[2,36],36:[2,36],37:[2,36],38:[2,36],39:[2,36],40:[2,36],41:[2,36],42:[2,36],43:[2,36],44:[2,36],45:[2,36],46:[2,36],47:[2,36],48:[2,36],49:[2,36],50:[2,36],51:[2,36],52:[2,36],53:[2,36],54:[2,36],55:[2,36],56:[2,36],57:[2,36],58:[2,36],59:[2,36],60:[2,36],61:[2,36],62:[2,36]},{4:[2,37],7:[2,37],8:[2,37],9:[2,37],10:[2,37],11:[2,37],12:[2,37],13:[2,37],14:[2,37],15:[2,37],16:[2,37],17:[2,37],18:[2,37],19:[2,37],20:[2,37],21:[2,37],22:[2,37],23:[2,37],24:[2,37],25:[2,37],26:[2,37],27:[2,37],28:[2,37],29:[2,37],30:[2,37],31:[2,37],32:[2,37],33:[2,37],34:[2,37],35:[2,37],36:[2,37],37:[2,37],38:[2,37],39:[2,37],40:[2,37],41:[2,37],42:[2,37],43:[2,37],44:[2,37],45:[2,37],46:[2,37],47:[2,37],48:[2,37],49:[2,37],50:[2,37],51:[2,37],52:[2,37],53:[2,37],54:[2,37],55:[2,37],56:[2,37],57:[2,37],58:[2,37],59:[2,37],60:[2,37],61:[2,37],62:[2,37]},{4:[2,38],7:[2,38],8:[2,38],9:[2,38],10:[2,38],11:[2,38],12:[2,38],13:[2,38],14:[2,38],15:[2,38],16:[2,38],17:[2,38],18:[2,38],19:[2,38],20:[2,38],21:[2,38],22:[2,38],23:[2,38],24:[2,38],25:[2,38],26:[2,38],27:[2,38],28:[2,38],29:[2,38],30:[2,38],31:[2,38],32:[2,38],33:[2,38],34:[2,38],35:[2,38],36:[2,38],37:[2,38],38:[2,38],39:[2,38],40:[2,38],41:[2,38],42:[2,38],43:[2,38],44:[2,38],45:[2,38],46:[2,38],47:[2,38],48:[2,38],49:[2,38],50:[2,38],51:[2,38],52:[2,38],53:[2,38],54:[2,38],55:[2,38],56:[2,38],57:[2,38],58:[2,38],59:[2,38],60:[2,38],61:[2,38],62:[2,38]},{4:[2,39],7:[2,39],8:[2,39],9:[2,39],10:[2,39],11:[2,39],12:[2,39],13:[2,39],14:[2,39],15:[2,39],16:[2,39],17:[2,39],18:[2,39],19:[2,39],20:[2,39],21:[2,39],22:[2,39],23:[2,39],24:[2,39],25:[2,39],26:[2,39],27:[2,39],28:[2,39],29:[2,39],30:[2,39],31:[2,39],32:[2,39],33:[2,39],34:[2,39],35:[2,39],36:[2,39],37:[2,39],38:[2,39],39:[2,39],40:[2,39],41:[2,39],42:[2,39],43:[2,39],44:[2,39],45:[2,39],46:[2,39],47:[2,39],48:[2,39],49:[2,39],50:[2,39],51:[2,39],52:[2,39],53:[2,39],54:[2,39],55:[2,39],56:[2,39],57:[2,39],58:[2,39],59:[2,39],60:[2,39],61:[2,39],62:[2,39]},{4:[2,40],7:[2,40],8:[2,40],9:[2,40],10:[2,40],11:[2,40],12:[2,40],13:[2,40],14:[2,40],15:[2,40],16:[2,40],17:[2,40],18:[2,40],19:[2,40],20:[2,40],21:[2,40],22:[2,40],23:[2,40],24:[2,40],25:[2,40],26:[2,40],27:[2,40],28:[2,40],29:[2,40],30:[2,40],31:[2,40],32:[2,40],33:[2,40],34:[2,40],35:[2,40],36:[2,40],37:[2,40],38:[2,40],39:[2,40],40:[2,40],41:[2,40],42:[2,40],43:[2,40],44:[2,40],45:[2,40],46:[2,40],47:[2,40],48:[2,40],49:[2,40],50:[2,40],51:[2,40],52:[2,40],53:[2,40],54:[2,40],55:[2,40],56:[2,40],57:[2,40],58:[2,40],59:[2,40],60:[2,40],61:[2,40],62:[2,40]},{4:[2,41],7:[2,41],8:[2,41],9:[2,41],10:[2,41],11:[2,41],12:[2,41],13:[2,41],14:[2,41],15:[2,41],16:[2,41],17:[2,41],18:[2,41],19:[2,41],20:[2,41],21:[2,41],22:[2,41],23:[2,41],24:[2,41],25:[2,41],26:[2,41],27:[2,41],28:[2,41],29:[2,41],30:[2,41],31:[2,41],32:[2,41],33:[2,41],34:[2,41],35:[2,41],36:[2,41],37:[2,41],38:[2,41],39:[2,41],40:[2,41],41:[2,41],42:[2,41],43:[2,41],44:[2,41],45:[2,41],46:[2,41],47:[2,41],48:[2,41],49:[2,41],50:[2,41],51:[2,41],52:[2,41],53:[2,41],54:[2,41],55:[2,41],56:[2,41],57:[2,41],58:[2,41],59:[2,41],60:[2,41],61:[2,41],62:[2,41]},{4:[2,42],7:[2,42],8:[2,42],9:[2,42],10:[2,42],11:[2,42],12:[2,42],13:[2,42],14:[2,42],15:[2,42],16:[2,42],17:[2,42],18:[2,42],19:[2,42],20:[2,42],21:[2,42],22:[2,42],23:[2,42],24:[2,42],25:[2,42],26:[2,42],27:[2,42],28:[2,42],29:[2,42],30:[2,42],31:[2,42],32:[2,42],33:[2,42],34:[2,42],35:[2,42],36:[2,42],37:[2,42],38:[2,42],39:[2,42],40:[2,42],41:[2,42],42:[2,42],43:[2,42],44:[2,42],45:[2,42],46:[2,42],47:[2,42],48:[2,42],49:[2,42],50:[2,42],51:[2,42],52:[2,42],53:[2,42],54:[2,42],55:[2,42],56:[2,42],57:[2,42],58:[2,42],59:[2,42],60:[2,42],61:[2,42],62:[2,42]},{4:[2,43],7:[2,43],8:[2,43],9:[2,43],10:[2,43],11:[2,43],12:[2,43],13:[2,43],14:[2,43],15:[2,43],16:[2,43],17:[2,43],18:[2,43],19:[2,43],20:[2,43],21:[2,43],22:[2,43],23:[2,43],24:[2,43],25:[2,43],26:[2,43],27:[2,43],28:[2,43],29:[2,43],30:[2,43],31:[2,43],32:[2,43],33:[2,43],34:[2,43],35:[2,43],36:[2,43],37:[2,43],38:[2,43],39:[2,43],40:[2,43],41:[2,43],42:[2,43],43:[2,43],44:[2,43],45:[2,43],46:[2,43],47:[2,43],48:[2,43],49:[2,43],50:[2,43],51:[2,43],52:[2,43],53:[2,43],54:[2,43],55:[2,43],56:[2,43],57:[2,43],58:[2,43],59:[2,43],60:[2,43],61:[2,43],62:[2,43]},{4:[2,44],7:[2,44],8:[2,44],9:[2,44],10:[2,44],11:[2,44],12:[2,44],13:[2,44],14:[2,44],15:[2,44],16:[2,44],17:[2,44],18:[2,44],19:[2,44],20:[2,44],21:[2,44],22:[2,44],23:[2,44],24:[2,44],25:[2,44],26:[2,44],27:[2,44],28:[2,44],29:[2,44],30:[2,44],31:[2,44],32:[2,44],33:[2,44],34:[2,44],35:[2,44],36:[2,44],37:[2,44],38:[2,44],39:[2,44],40:[2,44],41:[2,44],42:[2,44],43:[2,44],44:[2,44],45:[2,44],46:[2,44],47:[2,44],48:[2,44],49:[2,44],50:[2,44],51:[2,44],52:[2,44],53:[2,44],54:[2,44],55:[2,44],56:[2,44],57:[2,44],58:[2,44],59:[2,44],60:[2,44],61:[2,44],62:[2,44]},{4:[2,45],7:[2,45],8:[2,45],9:[2,45],10:[2,45],11:[2,45],12:[2,45],13:[2,45],14:[2,45],15:[2,45],16:[2,45],17:[2,45],18:[2,45],19:[2,45],20:[2,45],21:[2,45],22:[2,45],23:[2,45],24:[2,45],25:[2,45],26:[2,45],27:[2,45],28:[2,45],29:[2,45],30:[2,45],31:[2,45],32:[2,45],33:[2,45],34:[2,45],35:[2,45],36:[2,45],37:[2,45],38:[2,45],39:[2,45],40:[2,45],41:[2,45],42:[2,45],43:[2,45],44:[2,45],45:[2,45],46:[2,45],47:[2,45],48:[2,45],49:[2,45],50:[2,45],51:[2,45],52:[2,45],53:[2,45],54:[2,45],55:[2,45],56:[2,45],57:[2,45],58:[2,45],59:[2,45],60:[2,45],61:[2,45],62:[2,45]},{4:[2,46],7:[2,46],8:[2,46],9:[2,46],10:[2,46],11:[2,46],12:[2,46],13:[2,46],14:[2,46],15:[2,46],16:[2,46],17:[2,46],18:[2,46],19:[2,46],20:[2,46],21:[2,46],22:[2,46],23:[2,46],24:[2,46],25:[2,46],26:[2,46],27:[2,46],28:[2,46],29:[2,46],30:[2,46],31:[2,46],32:[2,46],33:[2,46],34:[2,46],35:[2,46],36:[2,46],37:[2,46],38:[2,46],39:[2,46],40:[2,46],41:[2,46],42:[2,46],43:[2,46],44:[2,46],45:[2,46],46:[2,46],47:[2,46],48:[2,46],49:[2,46],50:[2,46],51:[2,46],52:[2,46],53:[2,46],54:[2,46],55:[2,46],56:[2,46],57:[2,46],58:[2,46],59:[2,46],60:[2,46],61:[2,46],62:[2,46]},{4:[2,47],7:[2,47],8:[2,47],9:[2,47],10:[2,47],11:[2,47],12:[2,47],13:[2,47],14:[2,47],15:[2,47],16:[2,47],17:[2,47],18:[2,47],19:[2,47],20:[2,47],21:[2,47],22:[2,47],23:[2,47],24:[2,47],25:[2,47],26:[2,47],27:[2,47],28:[2,47],29:[2,47],30:[2,47],31:[2,47],32:[2,47],33:[2,47],34:[2,47],35:[2,47],36:[2,47],37:[2,47],38:[2,47],39:[2,47],40:[2,47],41:[2,47],42:[2,47],43:[2,47],44:[2,47],45:[2,47],46:[2,47],47:[2,47],48:[2,47],49:[2,47],50:[2,47],51:[2,47],52:[2,47],53:[2,47],54:[2,47],55:[2,47],56:[2,47],57:[2,47],58:[2,47],59:[2,47],60:[2,47],61:[2,47],62:[2,47]},{4:[2,48],7:[2,48],8:[2,48],9:[2,48],10:[2,48],11:[2,48],12:[2,48],13:[2,48],14:[2,48],15:[2,48],16:[2,48],17:[2,48],18:[2,48],19:[2,48],20:[2,48],21:[2,48],22:[2,48],23:[2,48],24:[2,48],25:[2,48],26:[2,48],27:[2,48],28:[2,48],29:[2,48],30:[2,48],31:[2,48],32:[2,48],33:[2,48],34:[2,48],35:[2,48],36:[2,48],37:[2,48],38:[2,48],39:[2,48],40:[2,48],41:[2,48],42:[2,48],43:[2,48],44:[2,48],45:[2,48],46:[2,48],47:[2,48],48:[2,48],49:[2,48],50:[2,48],51:[2,48],52:[2,48],53:[2,48],54:[2,48],55:[2,48],56:[2,48],57:[2,48],58:[2,48],59:[2,48],60:[2,48],61:[2,48],62:[2,48]},{4:[2,49],7:[2,49],8:[2,49],9:[2,49],10:[2,49],11:[2,49],12:[2,49],13:[2,49],14:[2,49],15:[2,49],16:[2,49],17:[2,49],18:[2,49],19:[2,49],20:[2,49],21:[2,49],22:[2,49],23:[2,49],24:[2,49],25:[2,49],26:[2,49],27:[2,49],28:[2,49],29:[2,49],30:[2,49],31:[2,49],32:[2,49],33:[2,49],34:[2,49],35:[2,49],36:[2,49],37:[2,49],38:[2,49],39:[2,49],40:[2,49],41:[2,49],42:[2,49],43:[2,49],44:[2,49],45:[2,49],46:[2,49],47:[2,49],48:[2,49],49:[2,49],50:[2,49],51:[2,49],52:[2,49],53:[2,49],54:[2,49],55:[2,49],56:[2,49],57:[2,49],58:[2,49],59:[2,49],60:[2,49],61:[2,49],62:[2,49]},{4:[2,50],7:[2,50],8:[2,50],9:[2,50],10:[2,50],11:[2,50],12:[2,50],13:[2,50],14:[2,50],15:[2,50],16:[2,50],17:[2,50],18:[2,50],19:[2,50],20:[2,50],21:[2,50],22:[2,50],23:[2,50],24:[2,50],25:[2,50],26:[2,50],27:[2,50],28:[2,50],29:[2,50],30:[2,50],31:[2,50],32:[2,50],33:[2,50],34:[2,50],35:[2,50],36:[2,50],37:[2,50],38:[2,50],39:[2,50],40:[2,50],41:[2,50],42:[2,50],43:[2,50],44:[2,50],45:[2,50],46:[2,50],47:[2,50],48:[2,50],49:[2,50],50:[2,50],51:[2,50],52:[2,50],53:[2,50],54:[2,50],55:[2,50],56:[2,50],57:[2,50],58:[2,50],59:[2,50],60:[2,50],61:[2,50],62:[2,50]},{4:[2,51],7:[2,51],8:[2,51],9:[2,51],10:[2,51],11:[2,51],12:[2,51],13:[2,51],14:[2,51],15:[2,51],16:[2,51],17:[2,51],18:[2,51],19:[2,51],20:[2,51],21:[2,51],22:[2,51],23:[2,51],24:[2,51],25:[2,51],26:[2,51],27:[2,51],28:[2,51],29:[2,51],30:[2,51],31:[2,51],32:[2,51],33:[2,51],34:[2,51],35:[2,51],36:[2,51],37:[2,51],38:[2,51],39:[2,51],40:[2,51],41:[2,51],42:[2,51],43:[2,51],44:[2,51],45:[2,51],46:[2,51],47:[2,51],48:[2,51],49:[2,51],50:[2,51],51:[2,51],52:[2,51],53:[2,51],54:[2,51],55:[2,51],56:[2,51],57:[2,51],58:[2,51],59:[2,51],60:[2,51],61:[2,51],62:[2,51]},{4:[2,52],7:[2,52],8:[2,52],9:[2,52],10:[2,52],11:[2,52],12:[2,52],13:[2,52],14:[2,52],15:[2,52],16:[2,52],17:[2,52],18:[2,52],19:[2,52],20:[2,52],21:[2,52],22:[2,52],23:[2,52],24:[2,52],25:[2,52],26:[2,52],27:[2,52],28:[2,52],29:[2,52],30:[2,52],31:[2,52],32:[2,52],33:[2,52],34:[2,52],35:[2,52],36:[2,52],37:[2,52],38:[2,52],39:[2,52],40:[2,52],41:[2,52],42:[2,52],43:[2,52],44:[2,52],45:[2,52],46:[2,52],47:[2,52],48:[2,52],49:[2,52],50:[2,52],51:[2,52],52:[2,52],53:[2,52],54:[2,52],55:[2,52],56:[2,52],57:[2,52],58:[2,52],59:[2,52],60:[2,52],61:[2,52],62:[2,52]},{4:[2,53],7:[2,53],8:[2,53],9:[2,53],10:[2,53],11:[2,53],12:[2,53],13:[2,53],14:[2,53],15:[2,53],16:[2,53],17:[2,53],18:[2,53],19:[2,53],20:[2,53],21:[2,53],22:[2,53],23:[2,53],24:[2,53],25:[2,53],26:[2,53],27:[2,53],28:[2,53],29:[2,53],30:[2,53],31:[2,53],32:[2,53],33:[2,53],34:[2,53],35:[2,53],36:[2,53],37:[2,53],38:[2,53],39:[2,53],40:[2,53],41:[2,53],42:[2,53],43:[2,53],44:[2,53],45:[2,53],46:[2,53],47:[2,53],48:[2,53],49:[2,53],50:[2,53],51:[2,53],52:[2,53],53:[2,53],54:[2,53],55:[2,53],56:[2,53],57:[2,53],58:[2,53],59:[2,53],60:[2,53],61:[2,53],62:[2,53]},{4:[2,54],7:[2,54],8:[2,54],9:[2,54],10:[2,54],11:[2,54],12:[2,54],13:[2,54],14:[2,54],15:[2,54],16:[2,54],17:[2,54],18:[2,54],19:[2,54],20:[2,54],21:[2,54],22:[2,54],23:[2,54],24:[2,54],25:[2,54],26:[2,54],27:[2,54],28:[2,54],29:[2,54],30:[2,54],31:[2,54],32:[2,54],33:[2,54],34:[2,54],35:[2,54],36:[2,54],37:[2,54],38:[2,54],39:[2,54],40:[2,54],41:[2,54],42:[2,54],43:[2,54],44:[2,54],45:[2,54],46:[2,54],47:[2,54],48:[2,54],49:[2,54],50:[2,54],51:[2,54],52:[2,54],53:[2,54],54:[2,54],55:[2,54],56:[2,54],57:[2,54],58:[2,54],59:[2,54],60:[2,54],61:[2,54],62:[2,54]},{4:[2,55],7:[2,55],8:[2,55],9:[2,55],10:[2,55],11:[2,55],12:[2,55],13:[2,55],14:[2,55],15:[2,55],16:[2,55],17:[2,55],18:[2,55],19:[2,55],20:[2,55],21:[2,55],22:[2,55],23:[2,55],24:[2,55],25:[2,55],26:[2,55],27:[2,55],28:[2,55],29:[2,55],30:[2,55],31:[2,55],32:[2,55],33:[2,55],34:[2,55],35:[2,55],36:[2,55],37:[2,55],38:[2,55],39:[2,55],40:[2,55],41:[2,55],42:[2,55],43:[2,55],44:[2,55],45:[2,55],46:[2,55],47:[2,55],48:[2,55],49:[2,55],50:[2,55],51:[2,55],52:[2,55],53:[2,55],54:[2,55],55:[2,55],56:[2,55],57:[2,55],58:[2,55],59:[2,55],60:[2,55],61:[2,55],62:[2,55]},{4:[2,56],7:[2,56],8:[2,56],9:[2,56],10:[2,56],11:[2,56],12:[2,56],13:[2,56],14:[2,56],15:[2,56],16:[2,56],17:[2,56],18:[2,56],19:[2,56],20:[2,56],21:[2,56],22:[2,56],23:[2,56],24:[2,56],25:[2,56],26:[2,56],27:[2,56],28:[2,56],29:[2,56],30:[2,56],31:[2,56],32:[2,56],33:[2,56],34:[2,56],35:[2,56],36:[2,56],37:[2,56],38:[2,56],39:[2,56],40:[2,56],41:[2,56],42:[2,56],43:[2,56],44:[2,56],45:[2,56],46:[2,56],47:[2,56],48:[2,56],49:[2,56],50:[2,56],51:[2,56],52:[2,56],53:[2,56],54:[2,56],55:[2,56],56:[2,56],57:[2,56],58:[2,56],59:[2,56],60:[2,56],61:[2,56],62:[2,56]},{4:[2,57],7:[2,57],8:[2,57],9:[2,57],10:[2,57],11:[2,57],12:[2,57],13:[2,57],14:[2,57],15:[2,57],16:[2,57],17:[2,57],18:[2,57],19:[2,57],20:[2,57],21:[2,57],22:[2,57],23:[2,57],24:[2,57],25:[2,57],26:[2,57],27:[2,57],28:[2,57],29:[2,57],30:[2,57],31:[2,57],32:[2,57],33:[2,57],34:[2,57],35:[2,57],36:[2,57],37:[2,57],38:[2,57],39:[2,57],40:[2,57],41:[2,57],42:[2,57],43:[2,57],44:[2,57],45:[2,57],46:[2,57],47:[2,57],48:[2,57],49:[2,57],50:[2,57],51:[2,57],52:[2,57],53:[2,57],54:[2,57],55:[2,57],56:[2,57],57:[2,57],58:[2,57],59:[2,57],60:[2,57],61:[2,57],62:[2,57]},{4:[2,58],7:[2,58],8:[2,58],9:[2,58],10:[2,58],11:[2,58],12:[2,58],13:[2,58],14:[2,58],15:[2,58],16:[2,58],17:[2,58],18:[2,58],19:[2,58],20:[2,58],21:[2,58],22:[2,58],23:[2,58],24:[2,58],25:[2,58],26:[2,58],27:[2,58],28:[2,58],29:[2,58],30:[2,58],31:[2,58],32:[2,58],33:[2,58],34:[2,58],35:[2,58],36:[2,58],37:[2,58],38:[2,58],39:[2,58],40:[2,58],41:[2,58],42:[2,58],43:[2,58],44:[2,58],45:[2,58],46:[2,58],47:[2,58],48:[2,58],49:[2,58],50:[2,58],51:[2,58],52:[2,58],53:[2,58],54:[2,58],55:[2,58],56:[2,58],57:[2,58],58:[2,58],59:[2,58],60:[2,58],61:[2,58],62:[2,58]},{4:[2,59],7:[2,59],8:[2,59],9:[2,59],10:[2,59],11:[2,59],12:[2,59],13:[2,59],14:[2,59],15:[2,59],16:[2,59],17:[2,59],18:[2,59],19:[2,59],20:[2,59],21:[2,59],22:[2,59],23:[2,59],24:[2,59],25:[2,59],26:[2,59],27:[2,59],28:[2,59],29:[2,59],30:[2,59],31:[2,59],32:[2,59],33:[2,59],34:[2,59],35:[2,59],36:[2,59],37:[2,59],38:[2,59],39:[2,59],40:[2,59],41:[2,59],42:[2,59],43:[2,59],44:[2,59],45:[2,59],46:[2,59],47:[2,59],48:[2,59],49:[2,59],50:[2,59],51:[2,59],52:[2,59],53:[2,59],54:[2,59],55:[2,59],56:[2,59],57:[2,59],58:[2,59],59:[2,59],60:[2,59],61:[2,59],62:[2,59]},{4:[2,60],7:[2,60],8:[2,60],9:[2,60],10:[2,60],11:[2,60],12:[2,60],13:[2,60],14:[2,60],15:[2,60],16:[2,60],17:[2,60],18:[2,60],19:[2,60],20:[2,60],21:[2,60],22:[2,60],23:[2,60],24:[2,60],25:[2,60],26:[2,60],27:[2,60],28:[2,60],29:[2,60],30:[2,60],31:[2,60],32:[2,60],33:[2,60],34:[2,60],35:[2,60],36:[2,60],37:[2,60],38:[2,60],39:[2,60],40:[2,60],41:[2,60],42:[2,60],43:[2,60],44:[2,60],45:[2,60],46:[2,60],47:[2,60],48:[2,60],49:[2,60],50:[2,60],51:[2,60],52:[2,60],53:[2,60],54:[2,60],55:[2,60],56:[2,60],57:[2,60],58:[2,60],59:[2,60],60:[2,60],61:[2,60],62:[2,60]},{1:[2,2]},{4:[2,4]}],\ndefaultActions: {2:[2,1],61:[2,2],62:[2,4]},\nparseError: function parseError(str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        throw new Error(str);\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    this.lexer.setInput(input);\n    this.lexer.yy = this.yy;\n    this.yy.lexer = this.lexer;\n    this.yy.parser = this;\n    if (typeof this.lexer.yylloc == 'undefined') {\n        this.lexer.yylloc = {};\n    }\n    var yyloc = this.lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = this.lexer.options && this.lexer.options.ranges;\n    if (typeof this.yy.parseError === 'function') {\n        this.parseError = this.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    function lex() {\n        var token;\n        token = self.lexer.lex() || EOF;\n        if (typeof token !== 'number') {\n            token = self.symbols_[token] || token;\n        }\n        return token;\n    }\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (this.lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + this.lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: this.lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: this.lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(this.lexer.yytext);\n            lstack.push(this.lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = this.lexer.yyleng;\n                yytext = this.lexer.yytext;\n                yylineno = this.lexer.yylineno;\n                yyloc = this.lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                this.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.2.1 */\nvar lexer = (function(){\nvar lexer = {\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input) {\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function (match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex() {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin(condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState() {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules() {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState(n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState(condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\n\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:                        return 7; \nbreak;\ncase 1:                        return 8; \nbreak;\ncase 2:                        return 9; \nbreak;\ncase 3:                        return 10; \nbreak;\ncase 4: this.pushState('rp');  return yy_.yytext; \nbreak;\ncase 5:                        return yy_.yytext; \nbreak;\ncase 6: this.popState();\n                                      this.pushState('rw');  return yy_.yytext; \nbreak;\ncase 7: this.popState();\n                                      this.pushState('r');   return 11; \nbreak;\ncase 8: this.pushState('r');   return 11; \nbreak;\ncase 9:                        return 12; \nbreak;\ncase 10: this.pushState('b');   return yy_.yytext; \nbreak;\ncase 11: this.popState();       return yy_.yytext; \nbreak;\ncase 12: this.pushState('p');   return yy_.yytext; \nbreak;\ncase 13: this.popState();       return yy_.yytext; \nbreak;\ncase 14: this.pushState('m');   return yy_.yytext; \nbreak;\ncase 15: this.popState();       return yy_.yytext; \nbreak;\ncase 16: this.popState();       return 4; \nbreak;\ncase 17: this.popState(); \nbreak;\ncase 18: /*ignore whitespace and \\n*/ \nbreak;\ncase 19:                        return yy_.yytext; \nbreak;\ncase 20:                        return yy_.yytext; \nbreak;\ncase 21:                        return yy_.yytext; \nbreak;\ncase 22:                        return 24; \nbreak;\ncase 23:                        return yy_.yytext.toUpperCase(); \nbreak;\ncase 24:                        return yy_.yytext; \nbreak;\ncase 25:                        return yy_.yytext; \nbreak;\ncase 26:                        return yy_.yytext; \nbreak;\ncase 27:                        return yy_.yytext; \nbreak;\ncase 28:                        return 43; \nbreak;\ncase 29:                        return 44; \nbreak;\ncase 30:                        return 45; \nbreak;\ncase 31:                        return 46; \nbreak;\ncase 32: this.pushState('bp');  return 47; \nbreak;\ncase 33: this.pushState('bp');  return 48; \nbreak;\ncase 34: this.pushState('bp');  return 49; \nbreak;\ncase 35:                        return 50; \nbreak;\ncase 36:                        return 51; \nbreak;\ncase 37: this.pushState('bp');  return 52;\nbreak;\ncase 38: this.pushState('bp');  return 53; \nbreak;\ncase 39: this.pushState('bp');  return 54; \nbreak;\ncase 40:                        return 55; \nbreak;\ncase 41:                        return 56; \nbreak;\ncase 42: this.pushState('bp');  return 57; \nbreak;\ncase 43: this.pushState('bp');  return 58; \nbreak;\ncase 44: this.pushState('bpm'); return 59; \nbreak;\ncase 45: this.pushState('bpm'); return 60; \nbreak;\ncase 46: this.pushState('bpm'); return 61; \nbreak;\ncase 47: this.popState();\n                                      this.pushState('p');   return 14; \nbreak;\ncase 48: this.popState();\n                                      this.pushState('pm');  return 14;\nbreak;\ncase 49:                        return 11; \nbreak;\ncase 50:                        return 21; \nbreak;\ncase 51: this.popState();       return 15; \nbreak;\ncase 52:                        return 62; \nbreak;\ncase 53:                        return 7; \nbreak;\ncase 54:                        return 4; \nbreak;\n}\n},\nrules: [/^(?:(\\\\\\$|\\\\#|[^\\$\\#])+)/,/^(?:#\\[\\[[\\s\\S]*?\\]\\]#)/,/^(?:##.*)/,/^(?:#\\*[\\s\\S]*?\\*#)/,/^(?:\\$(?=!?\\{?([a-zA-Z][a-zA-Z0-9-_]*)))/,/^(?:!)/,/^(?:\\{)/,/^(?:([a-zA-Z][a-zA-Z0-9-_]*))/,/^(?:([a-zA-Z][a-zA-Z0-9-_]*))/,/^(?:\\.([a-zA-Z][a-zA-Z0-9-_]*))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\()/,/^(?:\\))/,/^(?:\\{)/,/^(?:\\})/,/^(?:$)/,/^(?:)/,/^(?:\\s+)/,/^(?::)/,/^(?:,)/,/^(?:\\.\\.)/,/^(?:in\\b)/,/^(?:true|false|null\\b)/,/^(?:==|!=|>=|<=|>|<)/,/^(?:&&|\\|\\||!)/,/^(?:[\\+\\-\\*\\/\\%])/,/^(?:=)/,/^(?:\\d+\\.\\d+)/,/^(?:\\d+)/,/^(?:\"(\\\\\"|[^\\\"])*\")/,/^(?:'(\\\\'|[^\\'])*')/,/^(?:#(\\{set\\}|set)((?=[ \\t]*\\()))/,/^(?:#(\\{if\\}|if)((?=[ \\t]*\\()))/,/^(?:#(\\{elseif\\}|elseif)((?=[ \\t]*\\()))/,/^(?:#(\\{else\\}|else(?!([a-zA-Z]))))/,/^(?:#(\\{end\\}|end(?!([a-zA-Z]))))/,/^(?:#(\\{foreach\\}|foreach)((?=[ \\t]*\\()))/,/^(?:#(\\{include\\}|include)((?=[ \\t]*\\()))/,/^(?:#(\\{parse\\}|parse)((?=[ \\t]*\\()))/,/^(?:#(\\{stop\\}|stop(?!([a-zA-Z]))))/,/^(?:#(\\{break\\}|break(?!([a-zA-Z]))))/,/^(?:#(\\{evaluate\\}|evaluate)((?=[ \\t]*\\()))/,/^(?:#(\\{define\\}|define)((?=[ \\t]*\\()))/,/^(?:#(\\{macro\\}|macro)((?=[ \\t]*\\()))/,/^(?:#(\\{([a-zA-Z])+\\}|([a-zA-Z])+)((?=[ \\t]*\\()))/,/^(?:#@(\\{([a-zA-Z])+\\}|([a-zA-Z])+)((?=[ \\t]*\\()))/,/^(?:[ \\t]*\\()/,/^(?:[ \\t]*\\(\\s*)/,/^(?:([a-zA-Z][a-zA-Z0-9-_]*))/,/^(?:\\s*,\\s*)/,/^(?:\\s*\\))/,/^(?:\\s+)/,/^(?:[\\$\\#])/,/^(?:$)/],\nconditions: {\"rp\":{\"rules\":[5,6,7],\"inclusive\":false},\"rw\":{\"rules\":[8,15],\"inclusive\":false},\"r\":{\"rules\":[9,10,12,16,17],\"inclusive\":false},\"b\":{\"rules\":[4,10,11,12,14,18,20,21,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"bpm\":{\"rules\":[48],\"inclusive\":false},\"bp\":{\"rules\":[47],\"inclusive\":false},\"pm\":{\"rules\":[4,10,12,14,23,28,29,30,31,49,50,51,52],\"inclusive\":false},\"p\":{\"rules\":[4,10,12,13,14,18,20,22,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"m\":{\"rules\":[4,10,12,14,15,18,19,20,23,24,25,26,27,28,29,30,31],\"inclusive\":false},\"INITIAL\":{\"rules\":[0,1,2,3,4,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,53,54],\"inclusive\":true}}\n};\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\n\nif (typeof require !== 'undefined' && typeof exports !== 'undefined') {\nexports.parser = lex;\nexports.Parser = lex.Parser;\nexports.parse = function () { return lex.parse.apply(lex, arguments); };\nexports.main = function commonjsMain(args) {\n    if (!args[1]) {\n        console.log('Usage: '+args[0]+' FILE');\n        process.exit(1);\n    }\n    var source = require('fs').readFileSync(require('path').normalize(args[1]), \"utf8\");\n    return exports.parser.parse(source);\n};\nif (typeof module !== 'undefined' && require.main === module) {\n  exports.main(process.argv.slice(1));\n}\n}"}